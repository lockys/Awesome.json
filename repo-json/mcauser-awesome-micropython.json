[
  {
    "name": "PyPi",
    "url": "https://pypi.org/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+MicroPython",
    "description": "This filter shows just the MicroPython libraries on PyPi. Note: You cannot pip install micropython libraries. See MicroPython docs for more information on upip."
  },
  {
    "name": "GitHub Search",
    "url": "https://github.com/search?q=micropython",
    "description": "Search GitHub for repositories containing MicroPython."
  },
  {
    "name": "GitHub Topic",
    "url": "https://github.com/topics/micropython",
    "description": "MicroPython - Browse GitHub Topics for projects tagged with MicroPython."
  },
  {
    "name": "Libraries.io",
    "url": "https://libraries.io/search?q=micropython",
    "description": "Libraries.io query for MicroPython."
  },
  {
    "name": "GitLab Explore",
    "url": "https://gitlab.com/explore?sort=latest_activity_desc&utf8=%E2%9C%93&name=micropython&sort=latest_activity_desc",
    "description": "Explore repositories on GitLab."
  },
  {
    "name": "MicroMLP",
    "url": "https://github.com/jczic/MicroMLP",
    "description": "A micro neural network multilayer perceptron for MicroPython (used on ESP32 and Pycom modules)."
  },
  {
    "name": "uMath",
    "url": "https://github.com/AaronKel/uMath",
    "description": "Computer Algebra for microcontrollers."
  },
  {
    "name": "micropython-ulab",
    "url": "https://github.com/v923z/micropython-ulab",
    "description": "A numpy-like fast vector module for MicroPython."
  },
  {
    "name": "micropython-fourier",
    "url": "https://github.com/peterhinch/micropython-fourier",
    "description": "Fast Fourier transform in MicroPython's inline ARM assembler."
  },
  {
    "name": "ulinalg",
    "url": "https://github.com/jalawson/ulinalg",
    "description": "Small size matrix handling module with a few linear algebra operations specifically for MicroPython (Python3)."
  },
  {
    "name": "micropython-mtx",
    "url": "https://gitlab.com/nickoala/micropython-mtx",
    "description": "Fast Matrix Multiplication and Linear Solver on MicroPython."
  },
  {
    "name": "micropython-vec",
    "url": "https://gitlab.com/nickoala/micropython-vec",
    "description": "Vector Operations on MicroPython."
  },
  {
    "name": "JQ6500",
    "url": "https://github.com/rdagger/micropython-jq6500",
    "description": "Driver for JQ6500 UART MP3 modules."
  },
  {
    "name": "KT403A-MP3",
    "url": "https://github.com/jczic/KT403A-MP3",
    "description": "Driver for KT403A, used by DFPlayer Mini and Grove MP3 v2.0."
  },
  {
    "name": "micropython-buzzer",
    "url": "https://github.com/fruch/micropython-buzzer",
    "description": "Play nokia compose and mid files on buzzers."
  },
  {
    "name": "micropython-dfplayer",
    "url": "https://github.com/ShrimpingIt/micropython-dfplayer",
    "description": "Driver for DFPlayer Mini using UART."
  },
  {
    "name": "micropython-longwave",
    "url": "https://github.com/MattMatic/micropython-longwave",
    "description": "WAV player for MicroPython board."
  },
  {
    "name": "micropython-vs1053",
    "url": "https://github.com/peterhinch/micropython-vs1053",
    "description": "Asynchronous driver for VS1053b MP3 player."
  },
  {
    "name": "micropython-midi",
    "url": "https://github.com/cjbarnes18/micropython-midi",
    "description": "A midi implementation example for MicroPython."
  },
  {
    "name": "upy-rtttl",
    "url": "https://github.com/dhylands/upy-rtttl",
    "description": "Python Parser for Ring Tone Text Transfer Language (RTTTL)."
  },
  {
    "name": "PyBoard-HC05-Android",
    "url": "https://github.com/KipCrossing/PyBoard-HC05-Android",
    "description": "Pyboard HC05 Bluetooth adaptor example application."
  },
  {
    "name": "uble",
    "url": "https://github.com/dmazzella/uble",
    "description": "Lightweight Bluetooth Low Energy driver written in pure python for micropython."
  },
  {
    "name": "micropython-spacecan",
    "url": "https://gitlab.com/alphaaomega/micropython-spacecan",
    "description": "Spacecan is a MicroPython implementation of the SpaceCAN protocol for embedded systems."
  },
  {
    "name": "mpyaes",
    "url": "https://github.com/iyassou/mpyaes",
    "description": "MicroPython module for AES encryption."
  },
  {
    "name": "micropython-aes",
    "url": "https://github.com/piaca/micropython-aes",
    "description": "AES algorithm with pure python implementation."
  },
  {
    "name": "ucrypto",
    "url": "https://github.com/dmazzella/ucrypto",
    "description": "Micropython package for doing fast elliptic curve cryptography, specifically digital signatures. API design inspired from fastecdsa and implementation based on tomsfastmath."
  },
  {
    "name": "ucryptoauthlib",
    "url": "https://github.com/dmazzella/ucryptoauthlib",
    "description": "Lightweight driver for Microchip Crypto Authentication secure elements written in pure python for micropython."
  },
  {
    "name": "ICantBelieveItsNotDNS",
    "url": "https://github.com/yschaeff/ICantBelieveItsNotDNS",
    "description": "\"I Can't Believe It's Not DNS!\" (ICBIND) is an authoritative DNS server for the ESP8266 written in MicroPython."
  },
  {
    "name": "MicroDNSSrv",
    "url": "https://github.com/jczic/MicroDNSSrv",
    "description": "A micro DNS server for MicroPython to simply respond to A queries on multi-domains with or without wildcards (used on Pycom modules & ESP32)."
  },
  {
    "name": "Official wiznet5k",
    "url": "https://github.com/micropython/micropython/tree/master/drivers/wiznet5k",
    "description": "Official driver for the WIZnet5x00 series of Ethernet controllers."
  },
  {
    "name": "micropython-ftplib",
    "url": "https://github.com/SpotlightKid/micropython-ftplib",
    "description": "An FTP client library for MicroPython."
  },
  {
    "name": "FTP-Server-for-ESP8266-ESP32-and-PYBD",
    "url": "https://github.com/robert-hh/FTP-Server-for-ESP8266-ESP32-and-PYBD",
    "description": "Small FTP server for ESP8266/ESP32/PYBD on the MicroPython platform."
  },
  {
    "name": "MicroFTPServer",
    "url": "https://github.com/cpopp/MicroFTPServer",
    "description": "Minimal FTP Server that can run on an ESP8266 with MicroPython."
  },
  {
    "name": "micropyGPS",
    "url": "https://github.com/inmcm/micropyGPS",
    "description": "Full featured GPS NMEA sentence parser."
  },
  {
    "name": "micropython-gnssl76l",
    "url": "https://github.com/tuupola/micropython-gnssl76l",
    "description": "MicroPython I2C driver for Quectel GNSS L76-L (GPS)."
  },
  {
    "name": "mpy-agps",
    "url": "https://github.com/pulkin/mpy-agps",
    "description": "MicroPython implementation of assisted location services (AGPS)."
  },
  {
    "name": "micropython-upyphone",
    "url": "https://github.com/jeffmer/micropython-upyphone",
    "description": "A gsm phone using pyboard and sim800l."
  },
  {
    "name": "microhomie",
    "url": "https://github.com/microhomie/microhomie",
    "description": "MicroPython implementation of the Homie MQTT convention for IoT."
  },
  {
    "name": "uPyEcho",
    "url": "https://github.com/lemariva/uPyEcho",
    "description": "Emulated Belkin WeMo device that works with Amazon Echo (Alexa) using MicroPython on an ESP32."
  },
  {
    "name": "SonosRemote",
    "url": "https://github.com/foosel/SonosRemote",
    "description": "A remote for Sonos installations running on an ESP8266 and using Sonos HTTP API."
  },
  {
    "name": "micropython-home-assistant",
    "url": "https://gitlab.com/aapjeisbaas/micropython-home-assistant",
    "description": "MicroPython based scripts to extend you home assistant driven home automation projects."
  },
  {
    "name": "micropython-necir",
    "url": "https://github.com/MattMatic/micropython-necir",
    "description": "NEC infrared capture for TL1838 IR receiver LEDs."
  },
  {
    "name": "Micropython-IR",
    "url": "https://github.com/designerPing/Micropython-IR",
    "description": "Pyboard infrared remote sniff and replay."
  },
  {
    "name": "micropython_ir",
    "url": "https://github.com/peterhinch/micropython_ir",
    "description": "Nonblocking device drivers to receive from IR remotes and for IR \"blaster\" apps."
  },
  {
    "name": "micropython-amg88xx",
    "url": "https://github.com/peterhinch/micropython-amg88xx",
    "description": "Driver for Grid-EYE thermal infra red array sensor (Adafruit 3538)."
  },
  {
    "name": "micropython-ys-irtm",
    "url": "https://github.com/mcauser/micropython-ys-irtm",
    "description": "MicroPython examples for YS-IRTM 5V NEC Infrared UART transceivers."
  },
  {
    "name": "esp8266_ir",
    "url": "https://github.com/ruoyu0088/esp8266_ir",
    "description": "Control IR signal by websocket."
  },
  {
    "name": "uPyLoRaWAN",
    "url": "https://github.com/lemariva/uPyLoRaWAN",
    "description": "ESP32 using MicroPython meets LoRa and LoRaWAN."
  },
  {
    "name": "DeLoReAN",
    "url": "https://github.com/buehl/DeLoReAN",
    "description": "DeLoReAN is a (De)dicated (Lo)RaWAN node (Re)cording (A)ny (N)FC tags."
  },
  {
    "name": "micropython-mdns",
    "url": "https://github.com/cbrand/micropython-mdns",
    "description": "A pure python implementation of MDNS with support for Service Discovery."
  },
  {
    "name": "micropython-mqtt",
    "url": "https://github.com/peterhinch/micropython-mqtt",
    "description": "A 'resilient' asynchronous MQTT driver. Plus a means of using an ESP8266 to bring MQTT to non-networked targets."
  },
  {
    "name": "MQBoard",
    "url": "https://github.com/tve/mqboard",
    "description": "A micro-framework for using MQTT with asyncio on MicroPython boards, primarily on the ESP32."
  },
  {
    "name": "pysmartnode",
    "url": "https://github.com/kevinkk525/pysmartnode",
    "description": " MicroPython Smarthome framework."
  },
  {
    "name": "umqtt_aws_iot",
    "url": "https://github.com/juwul/umqtt_aws_iot",
    "description": "Publish UMQTT messages with MicroPython to AWS IoT."
  },
  {
    "name": "sonoff-mqtt by davea",
    "url": "https://github.com/davea/sonoff-mqtt",
    "description": "MicroPython scripts to control Sonoff/ESP8266 using MQTT."
  },
  {
    "name": "micropython-sonoff-switch",
    "url": "https://github.com/kfricke/micropython-sonoff-switch",
    "description": "Implements a MQTT controllable switch for the iTead Sonoff Switch using MicroPython."
  },
  {
    "name": "micropython-thingspeak-mqtt-esp8266",
    "url": "https://github.com/miketeachman/micropython-thingspeak-mqtt-esp8266",
    "description": "Publish and Subscribe to Thingspeak using MQTT with MicroPython running on ESP8266/ESP32 platforms."
  },
  {
    "name": "uMQTT",
    "url": "https://github.com/andrewmk/uMQTT",
    "description": "MQTT publish for MicroPython on the WiPy board."
  },
  {
    "name": "esp8266_ntp_webserver",
    "url": "https://github.com/Roterfux/esp8266_ntp_webserver",
    "description": "MicroPython + esp8266 + ntp + webserver."
  },
  {
    "name": "micropython-ntpd",
    "url": "https://github.com/dave2/micropython-ntpd",
    "description": "An implementation of an ntpd in MicroPython."
  },
  {
    "name": "micropython_ntpserver",
    "url": "https://github.com/GrantGMiller/micropython_ntpserver",
    "description": "An NTP server written for MicroPython."
  },
  {
    "name": "micropython-ntpclient",
    "url": "https://github.com/wieck/micropython-ntpclient",
    "description": "NTP client for MicroPython using uasyncio."
  },
  {
    "name": "Official OneWire",
    "url": "https://github.com/micropython/micropython/tree/master/drivers/onewire",
    "description": "For devices using the OneWire bus, eg Dallas ds18x20."
  },
  {
    "name": "eiscp-micropython",
    "url": "https://github.com/cbrand/eiscp-micropython",
    "description": "Micropython port for the Onkyo-EISCP protocol used, among others, by Pioneer."
  },
  {
    "name": "micropython-radio",
    "url": "https://github.com/peterhinch/micropython-radio",
    "description": "Protocols for nRF24L01 2.4Ghz radio modules."
  },
  {
    "name": "micropython-rfsocket",
    "url": "https://github.com/wuub/micropython-rfsocket",
    "description": "MicroPython implementation of popular 433MHzn based RFSockets."
  },
  {
    "name": "Official nRF24L01",
    "url": "https://github.com/micropython/micropython/tree/master/drivers/nrf24l01",
    "description": "Official driver for nRF24L01 2.4Ghz radio modules."
  },
  {
    "name": "micropython_remote",
    "url": "https://github.com/peterhinch/micropython_remote",
    "description": "Capture and replay 433MHz remote control codes. Control remote switched power adaptors."
  },
  {
    "name": "micropython-ys-rf34t",
    "url": "https://github.com/mcauser/micropython-ys-rf34t",
    "description": "MicroPython examples using YS-RF34T 433MHz ASK/OOK UART transceivers."
  },
  {
    "name": "webrepl",
    "url": "https://micropython.org/webrepl",
    "description": "MicroPython WebREPL."
  },
  {
    "name": "zepl",
    "url": "https://gitlab.com/zepl1/zepl",
    "description": "MicroPython WebREPL Console Application using ZeroMQ."
  },
  {
    "name": "jupyter_micropython_remote",
    "url": "https://gitlab.com/alelec/jupyter_micropython_remote",
    "description": "Jupyter kernel to directly execute code on a MicroPython board over the serial/web REPL."
  },
  {
    "name": "micropython-mfrc522",
    "url": "https://github.com/wendlers/micropython-mfrc522",
    "description": "Driver for NXP MFRC522 RFID reader/writer."
  },
  {
    "name": "micropython-wiegand",
    "url": "https://github.com/pjz/micropython-wiegand",
    "description": "Wiegand protocol reader."
  },
  {
    "name": "micropython-tinyrtc-i2c",
    "url": "https://github.com/mcauser/micropython-tinyrtc-i2c",
    "description": "Driver for DS1307 RTC and AT24C32N EEPROM."
  },
  {
    "name": "Micropython_TinyRTC",
    "url": "https://github.com/AnthonyKNorman/Micropython_TinyRTC",
    "description": "Driver for DS1307 RTC."
  },
  {
    "name": "micropython-mcp7940",
    "url": "https://github.com/mattytrentini/micropython-mcp7940",
    "description": "Driver for the Microchip MCP7940 RTC."
  },
  {
    "name": "mpy-miniterm",
    "url": "https://github.com/jeffmakes/mpy-miniterm",
    "description": "Tool for seamless serial debug and file synchronisation with MicroPython devices via the serial REPL."
  },
  {
    "name": "micropython-modbus",
    "url": "https://gitlab.com/extel-open-source/micropython-modbus",
    "description": "MicroPython port of modbus-tk."
  },
  {
    "name": "uMail",
    "url": "https://github.com/shawwwn/uMail",
    "description": "A lightweight, scalable SMTP client for sending email in MicroPython."
  },
  {
    "name": "MicroTelnetServer",
    "url": "https://github.com/cpopp/MicroTelnetServer",
    "description": "Simple telnet server for MicroPython and the ESP8266 allowing telnet clients access to the REPL."
  },
  {
    "name": "HueBridge",
    "url": "https://github.com/FRC4564/HueBridge",
    "description": "Philips Hue Bridge."
  },
  {
    "name": "micropython-wifimanager",
    "url": "https://github.com/mitchins/micropython-wifimanager",
    "description": "A simple network configuration utility for MicroPython on the ESP8266 board."
  },
  {
    "name": "MicroWebSrv",
    "url": "https://github.com/jczic/MicroWebSrv",
    "description": "A micro HTTP Web server that supports WebSockets, html/python language templating and routing handlers, for MicroPython (used on Pycom modules & ESP32)."
  },
  {
    "name": "MicroWebSrv2",
    "url": "https://github.com/jczic/MicroWebSrv2",
    "description": "The last Micro Web Server for IoTs (MicroPython) or large servers (CPython), that supports WebSockets, routes, template engine and with really optimized architecture (mem allocations, async I/Os)."
  },
  {
    "name": "tinyweb",
    "url": "https://github.com/belyalov/tinyweb",
    "description": "Simple and lightweight HTTP async server for MicroPython."
  },
  {
    "name": "upy-websocket-server",
    "url": "https://github.com/BetaRavener/upy-websocket-server",
    "description": "MicroPython (ESP8266) websocket server implementation."
  },
  {
    "name": "micropython-captive-portal",
    "url": "https://github.com/amora-labs/micropython-captive-portal",
    "description": "A captive portal demo for MicroPython."
  },
  {
    "name": "uPyPortal",
    "url": "https://github.com/lemariva/uPyPortal",
    "description": "A captive portal for MicroPython using ESP32 (WeMos)."
  },
  {
    "name": "ESP8266WebServer",
    "url": "https://github.com/codemee/ESP8266WebServer",
    "description": "ESP8266 web server for MicroPython."
  },
  {
    "name": "microCoAPy",
    "url": "https://github.com/insighio/microCoAPy",
    "description": "A mini client/server implementation of CoAP (Constrained Application Protocol) into MicroPython."
  },
  {
    "name": "micropyserver",
    "url": "https://github.com/troublegum/micropyserver",
    "description": "MicroPyServer is a simple HTTP server for MicroPython projects."
  },
  {
    "name": "MicroRESTCli",
    "url": "https://github.com/jczic/MicroRESTCli",
    "description": "A micro JSON REST Web client based on MicroWebCli for MicroPython (used on Pycom modules & ESP32)."
  },
  {
    "name": "micropython-noggin",
    "url": "https://github.com/larsks/micropython-noggin",
    "description": "A very simple web server for MicroPython."
  },
  {
    "name": "uwebsockets",
    "url": "https://github.com/danni/uwebsockets",
    "description": "MicroPython websockets implementation for ESP8266."
  },
  {
    "name": "microdot",
    "url": "https://github.com/miguelgrinberg/microdot",
    "description": "The impossibly small web framework for MicroPython."
  },
  {
    "name": "micropython-utelegram",
    "url": "https://github.com/jordiprats/micropython-utelegram",
    "description": "Telegram API wrapper for MicroPython."
  },
  {
    "name": "ZbPy",
    "url": "https://github.com/osresearch/ZbPy",
    "description": "MicroPython IEEE802.15.4 / Zigbee parser."
  },
  {
    "name": "micropython-epaper",
    "url": "https://github.com/peterhinch/micropython-epaper",
    "description": "Pyboard driver for Embedded Artists 2.7 inch e-paper display."
  },
  {
    "name": "micropython-ili9341",
    "url": "https://github.com/mcauser/deshipu-micropython-ili9341",
    "description": "SSD1606 active matrix epaper display 128x180."
  },
  {
    "name": "micropython-waveshare-epaper",
    "url": "https://github.com/mcauser/micropython-waveshare-epaper",
    "description": "Drivers for various Waveshare e-paper modules."
  },
  {
    "name": "micropython-waveshare-epd",
    "url": "https://github.com/ayoy/micropython-waveshare-epd",
    "description": "Waveshare E-Paper Display driver for devices running Pycom-flavored MicroPython."
  },
  {
    "name": "ssd1675a",
    "url": "https://github.com/mattytrentini/ssd1675a",
    "description": "Driver for SSD1675 based E-Paper displays."
  },
  {
    "name": "lvgl",
    "url": "https://github.com/lvgl/lv_binding_micropython",
    "description": "An object oriented component based high-level GUI library with MicroPython binding."
  },
  {
    "name": "micropython-lcd160cr-gui",
    "url": "https://github.com/peterhinch/micropython-lcd160cr-gui",
    "description": "Simple touch driven event based GUI for the Pyboard and LCD160CR colour display."
  },
  {
    "name": "micropython_ra8875",
    "url": "https://github.com/peterhinch/micropython_ra8875",
    "description": "MicroPython device driver and nano-GUI for RA8875 based displays."
  },
  {
    "name": "micropython-nano-gui",
    "url": "https://github.com/peterhinch/micropython-nano-gui",
    "description": "Nano-Gui provides a limited set of GUI objects (widgets) for displays whose display driver is subclassed from the framebuf class. Which includes LCD and OLED displays."
  },
  {
    "name": "Grove_RGB_LCD",
    "url": "https://github.com/dda/MicroPython/blob/master/Grove_RGB_LCD.py",
    "description": "Driver for SeeedStudio's Grove RGB LCD."
  },
  {
    "name": "lcdi2c",
    "url": "https://github.com/slothyrulez/lcdi2c",
    "description": "Driver for HD44780 compatible dot matrix LCDs."
  },
  {
    "name": "micropython-charlcd",
    "url": "https://github.com/rdagger/micropython-charlcd",
    "description": "Driver for HD44780 compatible LCDs."
  },
  {
    "name": "micropython-i2c-lcd",
    "url": "https://github.com/Bucknalla/micropython-i2c-lcd",
    "description": "Driver for I2C 2x16 LCD Screens."
  },
  {
    "name": "pyboard-LCD-character-display",
    "url": "https://github.com/scitoast/pyboard-LCD-character-display",
    "description": "PyBoard driver for HDD44780 compatible 1602 LCDs."
  },
  {
    "name": "python_lcd",
    "url": "https://github.com/dhylands/python_lcd",
    "description": "Driver for HD44780 compatible dot matrix LCDs."
  },
  {
    "name": "micropython-lcd",
    "url": "https://github.com/wjdp/micropython-lcd",
    "description": "Class for controlling the HD44780 from a MicroPython pyboard."
  },
  {
    "name": "micropython-lcd-AQM1248A",
    "url": "https://github.com/forester3/micropython-lcd-AQM1248A",
    "description": "ESP8266 driver for AQM1248A graphic LCD."
  },
  {
    "name": "micropython-pcd8544",
    "url": "https://github.com/mcauser/micropython-pcd8544",
    "description": "Driver for Nokia 5110 PCD8544 84x48 LCD modules."
  },
  {
    "name": "micropython-st7565",
    "url": "https://github.com/nquest/micropython-st7565",
    "description": "Driver for ST7565 128x64 LCDs."
  },
  {
    "name": "micropython-st7920",
    "url": "https://github.com/ShrimpingIt/micropython-st7920",
    "description": "Library for simple graphic primitives on ST7920 128x64 monochrome LCD panel using ESP8266 and SPI."
  },
  {
    "name": "MicroPython_PCD8544",
    "url": "https://github.com/AnthonyKNorman/MicroPython_PCD8544",
    "description": "ESP8266 driver for Nokia 5110 PCD8544."
  },
  {
    "name": "Official LCD160CR",
    "url": "https://github.com/micropython/micropython/tree/master/drivers/display",
    "description": "Driver for official MicroPython LCD160CR display with resistive touch sensor."
  },
  {
    "name": "micropython-hx1230",
    "url": "https://github.com/mcauser/micropython-hx1230",
    "description": "MicroPython library for HX1230 96x68 LCD modules."
  },
  {
    "name": "micropython-ili9341",
    "url": "https://github.com/mcauser/deshipu-micropython-ili9341",
    "description": "Collection of drivers for TFT displays, ILI9341, SH1106, SSD1606, ST7735."
  },
  {
    "name": "micropython-ili934x",
    "url": "https://github.com/tuupola/micropython-ili934x",
    "description": "SPI driver for ILI934X series based TFT / LCD displays."
  },
  {
    "name": "MicroPython-ST7735",
    "url": "https://github.com/boochow/MicroPython-ST7735",
    "description": "ESP32 version of GuyCarvers's ST7735 TFT LCD driver."
  },
  {
    "name": "micropython-st7735",
    "url": "https://github.com/hosaka/micropython-st7735",
    "description": "Driver for ST7735 TFT LCDs."
  },
  {
    "name": "MicroPython_ST7735",
    "url": "https://github.com/AnthonyKNorman/MicroPython_ST7735",
    "description": "Driver for ST7735 128x128 TFT."
  },
  {
    "name": "SSD1963-TFT-Library-for-PyBoard-and-RP2040",
    "url": "https://github.com/robert-hh/SSD1963-TFT-Library-for-PyBoard-and-RP2040",
    "description": "SSD1963 TFT Library for PyBoard and Raspberry Pi PICO."
  },
  {
    "name": "ST7735",
    "url": "https://github.com/GuyCarver/MicroPython/blob/master/lib/ST7735.py",
    "description": "Driver for ST7735 TFT LCDs."
  },
  {
    "name": "micropython-ili9341",
    "url": "https://github.com/rdagger/micropython-ili9341",
    "description": "MicroPython ILI9341 display & XPT2046 touch screen driver."
  },
  {
    "name": "st7789_mpy",
    "url": "https://github.com/devbis/st7789_mpy",
    "description": "Fast pure-C driver for MicroPython that can handle display modules on ST7789 chip."
  },
  {
    "name": "st7789py_mpy",
    "url": "https://github.com/devbis/st7789py_mpy",
    "description": "Slow MicroPython driver for 240x240 ST7789 display without CS pin from Ali Express, written in MicroPython."
  },
  {
    "name": "micropython-ili9341",
    "url": "https://github.com/jeffmer/micropython-ili9341",
    "description": "MicroPython Driver for ILI9341 display."
  },
  {
    "name": "micropython-ili9341",
    "url": "https://github.com/tkurbad/micropython-ili9341",
    "description": "ILI9341 TFT driver for MicroPython on ESP32."
  },
  {
    "name": "micropython-ht1632c",
    "url": "https://github.com/vrialland/micropython-ht1632c",
    "description": "Driver for HT1632C 32x16 bicolor led matrix."
  },
  {
    "name": "micropython-matrix8x8",
    "url": "https://github.com/JanBednarik/micropython-matrix8x8",
    "description": "Driver for AdaFruit 8x8 LED Matrix display with HT16K33 backpack."
  },
  {
    "name": "micropython-max7219",
    "url": "https://github.com/mcauser/micropython-max7219",
    "description": "Driver for MAX7219 8x8 LED matrix modules."
  },
  {
    "name": "micropython-wemos-led-matrix-shield",
    "url": "https://github.com/mactijn/micropython-wemos-led-matrix-shield",
    "description": "Driver for Wemos D1 Mini Matrix LED shield, using TM1640 chip."
  },
  {
    "name": "micropython-wemos-led-matrix",
    "url": "https://github.com/mattytrentini/micropython-wemos-led-matrix",
    "description": "Driver for Wemos D1 Mini Matrix LED shield, using TM1640 chip."
  },
  {
    "name": "micropython-max7219",
    "url": "https://github.com/vrialland/micropython-max7219",
    "description": "MicroPython driver for MAX7219 8x8 LED matrix."
  },
  {
    "name": "LKM1638",
    "url": "https://github.com/arikb/LKM1638",
    "description": "Driver for JY-LKM1638 displays based on TM1638 controller."
  },
  {
    "name": "max7219_8digit",
    "url": "https://github.com/pdwerryhouse/max7219_8digit",
    "description": "Driver for MAX7219 8-digit 7-segment LED modules."
  },
  {
    "name": "micropython-max7219",
    "url": "https://github.com/JulienBacquart/micropython-max7219",
    "description": "Driver for MAX7219 8-digit 7-segment LED modules."
  },
  {
    "name": "micropython-my9221",
    "url": "https://github.com/mcauser/micropython-my9221",
    "description": "Driver for MY9221 10-segment LED bar graph modules."
  },
  {
    "name": "micropython-tm1637",
    "url": "https://github.com/mcauser/micropython-tm1637",
    "description": "Driver for TM1637 quad 7-segment LED modules."
  },
  {
    "name": "micropython-tm1638",
    "url": "https://github.com/mcauser/micropython-tm1638",
    "description": "Driver for TM1638 dual quad 7-segment LED modules with switches."
  },
  {
    "name": "micropython-tm1640",
    "url": "https://github.com/mcauser/micropython-tm1640",
    "description": "Driver for TM1740 8x8 LED matrix modules."
  },
  {
    "name": "micropython-tm1640",
    "url": "https://gitlab.com/robhamerling/micropython-tm1640",
    "description": "MicroPython Library for 16 digits 7-segment displays controlled by a TM1640."
  },
  {
    "name": "TM74HC595",
    "url": "https://github.com/Sakartu/TM74HC595",
    "description": "Driver for shift register controlled 5 pin display modules."
  },
  {
    "name": "micropython-morsecode",
    "url": "https://github.com/mampersat/micropython-morsecode",
    "description": "Blink an LED with morse coded message."
  },
  {
    "name": "micropython-p9813",
    "url": "https://github.com/mcauser/micropython-p9813",
    "description": "Driver for P9813 RGB LED used in SeeedStudio's Grove Chainable RGB LED."
  },
  {
    "name": "micropython-ws2812-7seg",
    "url": "https://github.com/HubertD/micropython-ws2812-7seg",
    "description": "7-segment display using WS2812 RGB LEDs."
  },
  {
    "name": "micropython-ws2812",
    "url": "https://github.com/JanBednarik/micropython-ws2812",
    "description": "Driver for WS2812 RGB LEDs."
  },
  {
    "name": "Official APA102",
    "url": "http://docs.micropython.org/en/latest/esp8266/quickref.html#apa102-driver",
    "description": "ESP8266 APA102/DotStar RGB LED driver."
  },
  {
    "name": "Official WS2811",
    "url": "http://docs.micropython.org/en/latest/esp8266/quickref.html#neopixel-driver",
    "description": "ESP8266 WS2811/NeoPixel RGB LED driver."
  },
  {
    "name": "tlc5940-micropython",
    "url": "https://github.com/oysols/tlc5940-micropython",
    "description": "Driver for TLC5940 16 channel LED driver."
  },
  {
    "name": "ws2812-SPI",
    "url": "https://github.com/nickovs/ws2812-SPI",
    "description": "An efficient micropython WS2812 (NeoPixel) driver."
  },
  {
    "name": "micropython-ws2801",
    "url": "https://github.com/HeMan/micropython-ws2801",
    "description": "A MicroPython library to interface with strands of WS2801 RGB LEDs."
  },
  {
    "name": "tlc5947-rgb-micropython",
    "url": "https://gitlab.com/peterzuger/tlc5947-rgb-micropython",
    "description": "Driver for the TLC5947 24 channel 12-bit PWM LED driver."
  },
  {
    "name": "Grove_OLED",
    "url": "https://github.com/dda/MicroPython/blob/master/Grove_OLED.py",
    "description": "Driver for SSD1327 used by SeeedStudio's Grove OLED Display 1.12\" v1.0."
  },
  {
    "name": "micropython-oled",
    "url": "https://github.com/mcauser/deshipu-micropython-oled",
    "description": "Collection of drivers for monochrome OLED displays, PCD8544, SH1106, SSD1306, UC1701X."
  },
  {
    "name": "micropython-ssd1327",
    "url": "https://github.com/mcauser/micropython-ssd1327",
    "description": "Driver for SSD1327 128x128 4-bit greyscale OLED displays."
  },
  {
    "name": "micropython-ssd1351",
    "url": "https://github.com/rdagger/micropython-ssd1351",
    "description": "Driver for SSD1351 OLED displays."
  },
  {
    "name": "MicroPython_SSD1306",
    "url": "https://github.com/AnthonyKNorman/MicroPython_SSD1306",
    "description": "ESP8266 driver for SSD1306 OLED 128x64 displays."
  },
  {
    "name": "Official SSD1306",
    "url": "https://github.com/micropython/micropython/tree/master/drivers/display",
    "description": "Driver for SSD1306 128x64 OLED displays."
  },
  {
    "name": "SH1106",
    "url": "https://github.com/robert-hh/SH1106",
    "description": "Driver for the SH1106 OLED display."
  },
  {
    "name": "ads1x15",
    "url": "https://github.com/robert-hh/ads1x15",
    "description": "Driver for the ADS1015/ADS1115 ADC, I2C interface."
  },
  {
    "name": "micropython-ads1015",
    "url": "https://github.com/mcauser/deshipu-micropython-ads1015",
    "description": "ADS1015 12-Bit and ADS1115 16-bit ADC, 4 channels with programmable gain, I2C interface."
  },
  {
    "name": "Micropython_ADS1115",
    "url": "https://github.com/AnthonyKNorman/Micropython_ADS1115",
    "description": "ADS1115 16-bit ADC, 4 channels with programmable gain, I2C interface."
  },
  {
    "name": "ADS7818",
    "url": "https://github.com/robert-hh/ADS7818",
    "description": "Python class interfacing the ADS7818 AD-converter."
  },
  {
    "name": "micropython-ads1219",
    "url": "https://github.com/miketeachman/micropython-ads1219",
    "description": "MicroPython module for the Texas Instruments ADS1219 ADC."
  },
  {
    "name": "micropython-hx711",
    "url": "https://github.com/SergeyPiskunov/micropython-hx711",
    "description": "MicroPython driver for HX711 24-Bit Analog-to-Digital Converter."
  },
  {
    "name": "MicroPython-ADC_Cal",
    "url": "https://github.com/matthias-bs/MicroPython-ADC_Cal",
    "description": "ESP32 ADC driver using reference voltage calibration value from efuse."
  },
  {
    "name": "micropython-mcp4725",
    "url": "https://github.com/wayoda/micropython-mcp4725",
    "description": "Driver for the MCP4725 I2C DAC."
  },
  {
    "name": "mcp4728",
    "url": "https://github.com/openfablab/mcp4728",
    "description": "Helper library for the Microchip MCP4728 I2C 12-bit Quad DAC."
  },
  {
    "name": "micropython-inputs",
    "url": "https://github.com/alanmitchell/micropython-inputs",
    "description": "Classes to count pulses, debounce digital inputs, and calculate moving averages of analog inputs for a MicroPython board."
  },
  {
    "name": "ubutton",
    "url": "https://gitlab.com/WiLED-Project/ubutton",
    "description": "A MicroPython library for controlling reading and debouncing pushbutton inputs, including \"short\" and \"long\" press callbacks."
  },
  {
    "name": "micropython-debounce-switch",
    "url": "https://github.com/selfhostedhome/micropython-debounce-switch",
    "description": "MicroPython Class for Debouncing Switches."
  },
  {
    "name": "MCP23017-ESP8266-Miniature-Driver",
    "url": "https://github.com/forkachild/MCP23017-ESP8266-Miniature-Driver",
    "description": "Driver for MCP23017 16-bit I/O Expander."
  },
  {
    "name": "micropython-mcp230xx",
    "url": "https://github.com/ShrimpingIt/micropython-mcp230xx",
    "description": "Driver for MCP23017 and MCP23008 GPIO expanders."
  },
  {
    "name": "micropython-mcp23017",
    "url": "https://github.com/mcauser/micropython-mcp23017",
    "description": "MicroPython driver for MCP23017 16-bit I/O Expander."
  },
  {
    "name": "micropython-pcf8574",
    "url": "https://github.com/mcauser/micropython-pcf8574",
    "description": "MicroPython driver for PCF8574 8-Bit I2C I/O Expander with Interrupt."
  },
  {
    "name": "micropython-pcf8575",
    "url": "https://github.com/mcauser/micropython-pcf8575",
    "description": "MicroPython driver for PCF8575 16-Bit I2C I/O Expander with Interrupt."
  },
  {
    "name": "micropython-pcf8591",
    "url": "https://gitlab.com/cediddi/micropython-pcf8591",
    "description": "MicroPython driver for PCF8591 8-Bit I2C I/O Expander."
  },
  {
    "name": "micropython-74hc595",
    "url": "https://github.com/mcauser/micropython-74hc595",
    "description": "MicroPython driver for 74HC595 8-bit shift registers."
  },
  {
    "name": "micropython-nunchuck",
    "url": "https://github.com/kfricke/micropython-nunchuck",
    "description": "Driver for Nunchuk game controller, I2C interface."
  },
  {
    "name": "micropython-ad840x",
    "url": "https://github.com/dsiggi/micropython-ad840x",
    "description": "Micropython SPI-based manipulation of the AD series digital potentiometers AD8400, AD8402 and AD8403."
  },
  {
    "name": "upwmcontroller",
    "url": "https://gitlab.com/WiLED-Project/upwmcontroller",
    "description": "A MicroPython library for controlling PWM outputs in an asyncio loop, with features including fading and blinking."
  },
  {
    "name": "micropython-rotary",
    "url": "https://github.com/miketeachman/micropython-rotary",
    "description": "MicroPython module to read a rotary encoder."
  },
  {
    "name": "uencoder",
    "url": "https://gitlab.com/WiLED-Project/uencoder",
    "description": "A MicroPython library for reading from a rotary encoder."
  },
  {
    "name": "encodermenu",
    "url": "https://github.com/sgall17a/encodermenu",
    "description": "Simple GUI menu for micropython using a rotary encoder and basic display."
  },
  {
    "name": "Micropython-AD9833",
    "url": "https://github.com/KipCrossing/Micropython-AD9833",
    "description": "Pyboard driver for AD9833, spi interface."
  },
  {
    "name": "L298N",
    "url": "https://github.com/GuyCarver/MicroPython/blob/master/lib/L298N.py",
    "description": "Driver for the L298N dual h-bridge motor controller."
  },
  {
    "name": "micropython-pca9685",
    "url": "https://github.com/mcauser/deshipu-micropython-pca9685",
    "description": "16-channel 12-bit PWM/servo driver."
  },
  {
    "name": "micropython-upybbot",
    "url": "https://github.com/jeffmer/micropython-upybbot",
    "description": "A4988 driver for bipolar stepper motors."
  },
  {
    "name": "uln2003",
    "url": "https://github.com/IDWizard/uln2003",
    "description": "Driver for 5V 28BYJ-48 stepper motors."
  },
  {
    "name": "micropython-multiaxis",
    "url": "https://gitlab.com/olivier.len02/micropython-multiaxis",
    "description": "Multiaxis with MicroPython ESP32 and DRV8825."
  },
  {
    "name": "ticlib",
    "url": "https://github.com/jphalip/ticlib",
    "description": "Driver for Pololu Tic stepper motor controllers."
  },
  {
    "name": "ADXL345-with-Pyboard",
    "url": "https://github.com/AbhinayBandaru/ADXL345-with-Pyboard",
    "description": "Driver for ADXL345 16g 3-axis accelerometer."
  },
  {
    "name": "adxl345_micropython",
    "url": "https://github.com/fanday/adxl345_micropython",
    "description": "Driver for ADXL345 16g 3-axis accelerometer."
  },
  {
    "name": "micropython-lis2hh12",
    "url": "https://github.com/tuupola/micropython-lis2hh12",
    "description": "I2C driver for LIS2HH12 3-axis accelerometer."
  },
  {
    "name": "MMA7660",
    "url": "https://github.com/Bucknalla/MicroPython-3-Axis-Accelerometer/blob/master/MMA7660.py",
    "description": "Driver for MMA7660 1.5g 3-axis accelerometer."
  },
  {
    "name": "CCS811",
    "url": "https://github.com/Ledbelly2142/CCS811",
    "description": "CCS811 Air Quality Sensor."
  },
  {
    "name": "upython-aq-monitor",
    "url": "https://github.com/ayoy/upython-aq-monitor",
    "description": "Air Quality monitor using PMS5003 sensor and WiPy."
  },
  {
    "name": "micropython-pms7003",
    "url": "https://github.com/pkucmus/micropython-pms7003",
    "description": "MicroPython driver for the PMS7003 Air Quality Sensor."
  },
  {
    "name": "pms5003_micropython",
    "url": "https://github.com/kevinkk525/pms5003_micropython",
    "description": "Driver for pms5003 air quality sensor for MicroPython."
  },
  {
    "name": "micropython-pms5003-minimal",
    "url": "https://github.com/miketeachman/micropython-pms5003-minimal",
    "description": "Driver for pms5003 air quality sensor for MicroPython."
  },
  {
    "name": "polly",
    "url": "https://github.com/g-sam/polly",
    "description": "SDS011 pollution sensor + Wemos D1 mini pro + MicroPython."
  },
  {
    "name": "micropython-bme280",
    "url": "https://github.com/kevbu/micropython-bme280",
    "description": "Driver for the Bosch BME280 temperature/pressure/humidity sensor."
  },
  {
    "name": "micropython-bmp180",
    "url": "https://github.com/micropython-IMU/micropython-bmp180",
    "description": "Driver for Bosch BMP180 temperature, pressure and altitude sensor."
  },
  {
    "name": "mpy_bme280_esp8266",
    "url": "https://github.com/catdog2/mpy_bme280_esp8266",
    "description": "Bosch BME280 temperature/pressure/humidity sensor."
  },
  {
    "name": "BME280",
    "url": "https://github.com/robert-hh/BME280",
    "description": "MicroPython driver for the BME280 sensor, target platform Pycom devices."
  },
  {
    "name": "micropython-bmp280",
    "url": "https://github.com/dafvid/micropython-bmp280",
    "description": "Module for the BMP280 sensor."
  },
  {
    "name": "micropython-ov2640",
    "url": "https://github.com/namato/micropython-ov2640",
    "description": "MicroPython class for OV2640 camera."
  },
  {
    "name": "Nikon-Trigger-for-MicroPython",
    "url": "https://github.com/Thekegman/Nikon-Trigger-for-MicroPython",
    "description": "Remote trigger for a Nikon camera using an IR LED. For PyBoard v1.1."
  },
  {
    "name": "micropython-camera-driver",
    "url": "https://github.com/lemariva/micropython-camera-driver",
    "description": "OV2640 camera driver for MicroPython on ESP32."
  },
  {
    "name": "micropython-esp8266-hmc5883l",
    "url": "https://github.com/gvalkov/micropython-esp8266-hmc5883l",
    "description": "3-axis digital compass on the ESP8266."
  },
  {
    "name": "QMC5883",
    "url": "https://github.com/robert-hh/QMC5883",
    "description": "Python class for the QMC5883 Three-Axis Digital Compass IC."
  },
  {
    "name": "micropythonINA219",
    "url": "https://github.com/kabel42/micropythonINA219",
    "description": "Driver for INA219 current sensor."
  },
  {
    "name": "pyb_ina219",
    "url": "https://github.com/chrisb2/pyb_ina219",
    "description": "Driver for INA219 current sensor."
  },
  {
    "name": "micropython-gp2y0e03",
    "url": "https://github.com/mcauser/deshipu-micropython-gp2y0e03",
    "description": "IR-LED distance measuring sensor using Sharp GP2Y0E03."
  },
  {
    "name": "micropython-vl6180",
    "url": "https://github.com/mcauser/deshipu-micropython-vl6180",
    "description": "Time-of-Flight sensor, ambient light sensor & IR emitter."
  },
  {
    "name": "micropython-vl53l0x",
    "url": "https://github.com/mcauser/deshipu-micropython-vl53l0x",
    "description": "Time-of-Flight laser-ranging sensor."
  },
  {
    "name": "Qwiic_TOF_Module_RFD77402",
    "url": "https://github.com/ZIOCC/Qwiic_TOF_Module_RFD77402",
    "description": "Qwiic TOF Module (RFD77402) time-of-flight rangefinding module."
  },
  {
    "name": "micropython-hcsr04",
    "url": "https://github.com/rsc1975/micropython-hcsr04",
    "description": "Driver for HC-SR04 ultrasonic distance sensors."
  },
  {
    "name": "ATM90E26_Micropython",
    "url": "https://github.com/whatnick/ATM90E26_Micropython",
    "description": "Driver for ATM90E26 energy metering device."
  },
  {
    "name": "MCP39F521",
    "url": "https://github.com/warpme/MCP39F521",
    "description": "ESP8266 scripts for reading MCP39F521 power monitors."
  },
  {
    "name": "micropython-MQ",
    "url": "https://github.com/kartun83/micropython-MQ",
    "description": "Drivers for MQ series gas sensors."
  },
  {
    "name": "MQ135",
    "url": "https://github.com/rubfi/MQ135",
    "description": "Driver for MQ135 gas sensor."
  },
  {
    "name": "CCS811",
    "url": "https://github.com/Notthemarsian/CCS811",
    "description": "Basic MicroPython driver for CCS811 on ESP8266 boards."
  },
  {
    "name": "micropython-scd30",
    "url": "https://github.com/agners/micropython-scd30",
    "description": "MicroPython I2C driver for Sensirion SCD30 CO2 sensor module."
  },
  {
    "name": "MicroPython-SI1145",
    "url": "https://github.com/neliogodoi/MicroPython-SI1145",
    "description": "SI1145 UV index, IR, visible light and proximity sensor."
  },
  {
    "name": "micropython-tsl2561",
    "url": "https://github.com/kfricke/micropython-tsl2561",
    "description": "Driver for the TSL2561 illumination sensor from TAOS / ams."
  },
  {
    "name": "mpy_bh1750fvi_esp8266",
    "url": "https://github.com/catdog2/mpy_bh1750fvi_esp8266",
    "description": "ESP8266 driver for BH1750FVI sensor."
  },
  {
    "name": "bh1750",
    "url": "https://github.com/PinkInk/upylib/tree/master/bh1750",
    "description": "BH1750 i2c digital light sensor driver."
  },
  {
    "name": "micropython-bmx055",
    "url": "https://github.com/micropython-IMU/micropython-bmx055",
    "description": "Driver for Bosch BMX055 IMU sensor."
  },
  {
    "name": "micropython-bno055",
    "url": "https://github.com/deshipu/micropython-bno055",
    "description": "Bosch Sensortec BNO055 9DOF IMU sensor, I2C interface."
  },
  {
    "name": "micropython-lsm9ds0",
    "url": "https://github.com/micropython-IMU/micropython-lsm9ds0",
    "description": "LSM9DS0 g-force linear acceleration, gauss magnetic and dps angular rate sensors."
  },
  {
    "name": "micropython-mpu9250",
    "url": "https://github.com/tuupola/micropython-mpu9250",
    "description": "I2C driver for MPU9250 9-axis motion tracking device."
  },
  {
    "name": "micropython-mpu9x50",
    "url": "https://github.com/micropython-IMU/micropython-mpu9x50",
    "description": "Driver for the InvenSense MPU9250 inertial measurement unit."
  },
  {
    "name": "MPU6050-ESP8266-MicroPython",
    "url": "https://github.com/adamjezek98/MPU6050-ESP8266-MicroPython",
    "description": "ESP8266 driver for MPU6050 accelerometer/gyroscope."
  },
  {
    "name": "py-mpu6050",
    "url": "https://github.com/larsks/py-mpu6050",
    "description": "ESP8266 driver for MPU6050 accelerometer/gyroscope."
  },
  {
    "name": "micropython-mpu6886",
    "url": "https://github.com/tuupola/micropython-mpu6886",
    "description": "MicroPython I2C driver for MPU6886 6-axis motion tracking device."
  },
  {
    "name": "micropython-fusion",
    "url": "https://gitlab.com/nnayo/micropython-fusion",
    "description": "Sensor fusion calculates heading, pitch and roll from the outputs of motion tracking devices."
  },
  {
    "name": "ms5803-micropython",
    "url": "https://github.com/minyiky/ms5803-micropython",
    "description": "A micropython implimentation of the driver for an MS5803 pressure & temperature sensor."
  },
  {
    "name": "micropython-chirp",
    "url": "https://github.com/robberwick/micropython-chirp",
    "description": "Driver for the Chirp Soil Moisture Sensor."
  },
  {
    "name": "MicroPython-MiFlora",
    "url": "https://github.com/matthias-bs/MicroPython-MiFlora",
    "description": "Xiaomi Mi Flora (aka. flower care) BLE plant sensors (soil moisture/conductivity/light intensity/temperature)."
  },
  {
    "name": "micropython-max31855",
    "url": "https://github.com/mcauser/deshipu-micropython-max31855",
    "description": "Thermocouple amplifier, SPI interface."
  },
  {
    "name": "max31856",
    "url": "https://github.com/alinbaltaru/max31856",
    "description": "Precision thermocouple to digital converter with linearization, SPI interface."
  },
  {
    "name": "bme680-mqtt-micropython",
    "url": "https://github.com/robmarkcole/bme680-mqtt-micropython",
    "description": "Driver for BME680 gas, pressure, temperature and humidity sensor."
  },
  {
    "name": "LM75-MicroPython",
    "url": "https://github.com/OldhamMade/LM75-MicroPython",
    "description": "Driver for LM75 digital temperature sensor, I2C interface."
  },
  {
    "name": "micropython-am2320",
    "url": "https://github.com/mcauser/micropython-am2320",
    "description": "Aosong AM2320 temperature and humidity sensor, I2C interface."
  },
  {
    "name": "micropython-dht12",
    "url": "https://github.com/mcauser/micropython-dht12",
    "description": "Aosong DHT12 temperature and humidity sensor, I2C interface."
  },
  {
    "name": "micropython-hdc1008",
    "url": "https://github.com/kfricke/micropython-hdc1008",
    "description": "Driver for the Texas Instruments HDC1008 humidity and temperature sensor."
  },
  {
    "name": "micropython-mcp9808",
    "url": "https://github.com/kfricke/micropython-mcp9808",
    "description": "Driver for the Microchip MCP9808 temperature sensor."
  },
  {
    "name": "micropython-mpl115a2",
    "url": "https://github.com/khoulihan/micropython-mpl115a2",
    "description": "Pyboard driver for the MPL115A2 barometric pressure sensor."
  },
  {
    "name": "micropython-sht30",
    "url": "https://github.com/rsc1975/micropython-sht30",
    "description": "Driver for SHT30 temperature and humidity sensor."
  },
  {
    "name": "micropython-sht31",
    "url": "https://github.com/kfricke/micropython-sht31",
    "description": "Driver for the SHT31 temperature and humidity sensor."
  },
  {
    "name": "micropython-Si7005",
    "url": "https://github.com/Smrtokvitek/micropython-Si7005",
    "description": "Driver for Si7005 relative humidity and temperature sensor."
  },
  {
    "name": "micropython-si7021",
    "url": "https://github.com/mcauser/deshipu-micropython-si7021",
    "description": "SI7021 Temperature and humidity sensor, I2C interface."
  },
  {
    "name": "micropython-si7021",
    "url": "https://github.com/chrisbalmer/micropython-si7021",
    "description": "SI7021 Temperature and humidity sensor, I2C interface."
  },
  {
    "name": "micropython-Si705x",
    "url": "https://github.com/billyrayvalentine/micropython-Si705x",
    "description": "Silicon Labs Si705x series of temperature sensors, I2C interface."
  },
  {
    "name": "micropython-Si70xx",
    "url": "https://github.com/billyrayvalentine/micropython-Si70xx",
    "description": "Silicon Labs Si70xx series of relative humidity and temperature sensors, I2C interface."
  },
  {
    "name": "micropython-tmp102",
    "url": "https://github.com/khoulihan/micropython-tmp102",
    "description": "Driver for TMP102 digital temperature sensor."
  },
  {
    "name": "Official DHT11+DHT12",
    "url": "https://github.com/micropython/micropython/blob/master/drivers/dht/dht.py",
    "description": "ESP8266 driver for DHT11 and DHT12 temperature and humidity sensor."
  },
  {
    "name": "sht25-micropython",
    "url": "https://github.com/Miceuz/sht25-micropython",
    "description": "Driver for SHT25 temperature and humidity sensor."
  },
  {
    "name": "micropython-tmp1075",
    "url": "https://github.com/mattytrentini/micropython-tmp1075",
    "description": "Driver for the TI TMP1075 temperature sensor."
  },
  {
    "name": "micropython-sht11",
    "url": "https://github.com/2black0/micropython-sht11",
    "description": "Driver for Sensirion SHT11 temperature and humidity sensor."
  },
  {
    "name": "micropython-lm75a",
    "url": "https://github.com/mcauser/micropython-lm75a",
    "description": "Driver for the NXP LM75A digital temperature sensor."
  },
  {
    "name": "micropython-mlx90614",
    "url": "https://github.com/mcauser/micropython-mlx90614",
    "description": "Driver for Melexis MLX90614 IR temperature sensor."
  },
  {
    "name": "micropython-mpr121",
    "url": "https://github.com/mcauser/micropython-mpr121",
    "description": "Driver for MPR121 capacitive touch keypads and breakout boards."
  },
  {
    "name": "micropython-ttp223",
    "url": "https://github.com/mcauser/micropython-ttp223",
    "description": "Examples using TTP223 capacitive touch module."
  },
  {
    "name": "XPT2046-touch-pad-driver",
    "url": "https://github.com/robert-hh/XPT2046-touch-pad-driver",
    "description": "Driver for XPT2046 touch pad controller used in many TFT modules."
  },
  {
    "name": "micropython-mcron",
    "url": "https://github.com/fizista/micropython-mcron",
    "description": "MicroCRON is a time-based task scheduling program for MicroPython."
  },
  {
    "name": "uPyMySQL",
    "url": "https://github.com/dvrhax/uPyMySQL",
    "description": "Pure uPython MySQL Client."
  },
  {
    "name": "micropython-redis",
    "url": "https://github.com/dwighthubbard/micropython-redis",
    "description": "A redis client implementation designed for use with MicroPython."
  },
  {
    "name": "picoredis",
    "url": "https://github.com/SpotlightKid/picoredis",
    "description": "A very minimal Redis client (not only) for MicroPython."
  },
  {
    "name": "micropg",
    "url": "https://github.com/nakagami/micropg",
    "description": "PostgreSQL database driver for MicroPython."
  },
  {
    "name": "nmongo",
    "url": "https://github.com/nakagami/nmongo",
    "description": "MongoDB client for CPython and MicroPython, with mongo shell like APIs."
  },
  {
    "name": "micropython_eeprom",
    "url": "https://github.com/peterhinch/micropython_eeprom",
    "description": "MicroPython device drivers for nonvolatile memory chips (EEPROM, FRAM, Flash)."
  },
  {
    "name": "micropython-fram",
    "url": "https://github.com/rolandvs/micropython-fram",
    "description": "Pyboard driver for Ferroelectric RAM module."
  },
  {
    "name": "MicroPython Forum",
    "url": "https://forum.micropython.org/",
    "description": "Online community of over 6400 users discussing all things related to MicroPython."
  },
  {
    "name": "MicroPython on Twitter",
    "url": "https://twitter.com/micropython?lang=en",
    "description": "Follow MicroPython on Twitter for latest news and updates."
  },
  {
    "name": "MicroPython on Facebook",
    "url": "https://www.facebook.com/micropython",
    "description": "Like MicroPython on Facebook for competitions, news and updates."
  },
  {
    "name": "Melbourne MicroPython Meetup",
    "url": "https://www.meetup.com/en-AU/MicroPython-Meetup",
    "description": "Regular meetup at CCHS in Melbourne, Australia."
  },
  {
    "name": "Slack",
    "url": "https://slack-micropython.herokuapp.com/",
    "description": "Get an automated invite to the micropython.slack.com workspace."
  },
  {
    "name": "Discord",
    "url": "https://discord.gg/qw7d8bv",
    "description": "Get an invite to the MicroPython Discord server."
  },
  {
    "name": "Programming with MicroPython: Embedded Programming with Microcontrollers and Python",
    "url": "http://shop.oreilly.com/product/0636920056515.do",
    "description": "By Nicholas H. Tollervey. ISBN 9781491972731."
  },
  {
    "name": "MicroPython for the Internet of Things: A Beginner's Guide to Programming with Python on Microcontrollers",
    "url": "https://www.apress.com/gp/book/9781484231227",
    "description": "By Charles Bell. ISBN 9781484231227."
  },
  {
    "name": "MicroPython Cookbook",
    "url": "https://www.packtpub.com/au/application-development/micropython-cookbook",
    "description": "By Marwan Alsabbagh. ISBN 9781838649951."
  },
  {
    "name": "Python for Microcontrollers: Getting Started with MicroPython",
    "url": "https://www.amazon.com.au/Python-Microcontrollers-Getting-Started-MicroPython/dp/1259644537",
    "description": "By Donald Norris. ISBN 9781259644535."
  },
  {
    "name": "Advanced Programming in MicroPython By Example",
    "url": "https://www.amazon.com/Advanced-Programming-MicroPython-Example-Magda/dp/1090900937",
    "description": "By Yury Magda. ISBN 9781090900937."
  },
  {
    "name": "MicroPython Projects",
    "url": "https://www.packtpub.com/au/iot-hardware/micropython-projects",
    "description": "By Jacob Beningo. ISBN 9781789958034."
  },
  {
    "name": "Get Started with MicroPython on Raspberry Pi Pico",
    "url": "https://store.rpipress.cc/products/get-started-with-micropython-on-raspberry-pi-pico",
    "description": "By Gareth Halfacree and Ben Everard. ISBN 9781912047864."
  },
  {
    "name": "MicroPython for Microcontrollers",
    "url": "https://www.elektor.com/micropython-for-microcontrollers-e-book",
    "description": "By Günter Spanner. ISBN 9783895764370."
  },
  {
    "name": "MicroPython For Everyone: How To Use ESP32 And ESP8266: Micropython Mqtt",
    "url": "https://www.amazon.com/MicroPython-Everyone-ESP32-ESP8266-Micropython/dp/B094281XK1",
    "description": "By Mason Milette. ISBN 9798748248822."
  },
  {
    "name": "micrOS",
    "url": "https://github.com/BxNxM/micrOS",
    "description": "MicroPython based IoT Framework."
  },
  {
    "name": "terkin-datalogger",
    "url": "https://github.com/hiveeyes/terkin-datalogger",
    "description": "Flexible data logger application for MicroPython and CPython."
  },
  {
    "name": "MicroPython",
    "url": "http://micropython.org",
    "description": "Project website. Test drive the pyboard. Try MicroPython online with unicorn."
  },
  {
    "name": "MicroPython on GitHub",
    "url": "https://github.com/micropython/micropython",
    "description": "Submit bug reports, follow and join in development on GitHub."
  },
  {
    "name": "MicroPython Official Documentation",
    "url": "http://docs.micropython.org/",
    "description": "For various ports, including quick reference, general information, examples and tutorials."
  },
  {
    "name": "MicroPython Wiki",
    "url": "http://wiki.micropython.org/Home",
    "description": "Community generated documentation and examples of the features of MicroPython and the pyboard."
  },
  {
    "name": "MicroPython Newsletter",
    "url": "http://micropython.org/newsletter",
    "description": "Subscribe to the MicroPython newsletter for news and announcements including new features and new products."
  },
  {
    "name": "MicroPython Store",
    "url": "https://store.micropython.org/",
    "description": "Where you can buy the pyboard, housings, skins, books, connectors and peripherals."
  },
  {
    "name": "MicroPython on Wikipedia",
    "url": "https://en.wikipedia.org/wiki/MicroPython",
    "description": "MicroPython on Wikipedia."
  },
  {
    "name": "micropy-cli",
    "url": "https://github.com/BradenM/micropy-cli",
    "description": "Micropy Cli is a project management/generation tool for writing MicroPython code in modern IDEs such as VSCode."
  },
  {
    "name": "micropython-stubber",
    "url": "https://github.com/Josverl/micropython-stubber",
    "description": "Generate and use stubs for different MicroPython firmwares to use with vscode and/or pylint."
  },
  {
    "name": "micropy-stubs",
    "url": "https://github.com/BradenM/micropy-stubs",
    "description": "Automatically Generated Stub Packages for Micropy-Cli and whomever else."
  },
  {
    "name": "esp32-backtrace",
    "url": "https://github.com/tve/esp32-backtrace",
    "description": "ESP32 Exception Stack Backtrace Analyzer."
  },
  {
    "name": "JetBrains IntelliJ/PyCharm MicroPython Plugin",
    "url": "https://plugins.jetbrains.com/plugin/9777-micropython",
    "description": "Plugin for MicroPython devices in IntelliJ and PyCharm."
  },
  {
    "name": "Micropython IDE for VSCode",
    "url": "https://marketplace.visualstudio.com/items?itemName=dphans.micropython-ide-vscode",
    "description": "MicroPython IDE for VSCode README."
  },
  {
    "name": "Micropython-REPLink for VSCode",
    "url": "https://marketplace.visualstudio.com/items?itemName=SWC-Fablab.micropython-replink",
    "description": "Handy shortcuts for interacting with a MicroPython REPL terminal."
  },
  {
    "name": "Mu Editor",
    "url": "https://codewith.mu/",
    "description": " Code with Mu: a simple Python\\MicroPythonb\\CircuitPython editor for beginner programmers."
  },
  {
    "name": "Thonny IDE",
    "url": "https://thonny.org/",
    "description": "Thonny: Python IDE for beginners."
  },
  {
    "name": "upy-shell",
    "url": "https://github.com/dhylands/upy-shell",
    "description": "A simple command line based shell for MicroPython."
  },
  {
    "name": "Micropython-Editor",
    "url": "https://github.com/robert-hh/Micropython-Editor",
    "description": "Small on-board editor for PyBoard, WiPy, ESP8266, ESP32, PyCom and Adafruit devices written in Python."
  },
  {
    "name": "rshell",
    "url": "https://github.com/dhylands/rshell",
    "description": "Copy or Sync files to Boards, enter REPL from your terminal."
  },
  {
    "name": "ampy",
    "url": "https://github.com/scientifichackers/ampy",
    "description": "Adafruit MicroPython Tool - Utility to interact with a MicroPython board over a serial connection."
  },
  {
    "name": "mpfshell",
    "url": "https://github.com/wendlers/mpfshell",
    "description": "A simple shell based file explorer for ESP8266 and WiPy."
  },
  {
    "name": "mpsync",
    "url": "https://github.com/Uhlo/mpsync",
    "description": "A small tool that synchronizes a folder to a MicroPython board whenever it detects a change."
  },
  {
    "name": "MicroPython Kickstarter",
    "url": "https://www.kickstarter.com/projects/214379695/micro-python-python-for-microcontrollers",
    "description": "1,931 backers pledged £97,803 to help bring this project to life."
  },
  {
    "name": "MicroPython on the ESP8266 Kickstarter",
    "url": "https://www.kickstarter.com/projects/214379695/micropython-on-the-esp8266-beautifully-easy-iot",
    "description": "1,399 backers pledged £28,534 to help bring this project to life."
  }
]
