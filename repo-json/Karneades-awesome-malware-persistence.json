[
  {
    "name": "MITRE ATT&CK tactic \"TA0003",
    "url": "https://attack.mitre.org/tactics/TA0003/",
    "description": "Persistence\" - MITRE ATT&CK tactic \"TA0003 - Persistence\"."
  },
  {
    "name": "Hexacorn's blog",
    "url": "http://www.hexacorn.com/blog/category/autostart-persistence/",
    "description": "Hexacorn's blog category for persistence category including the series \"Beyond good ol' Run key\"."
  },
  {
    "name": "theevilbit's series \"Beyond the good ol' LaunchAgents\"",
    "url": "https://theevilbit.github.io/tags/beyond/",
    "description": "List of macOS persistence beyond just the LaunchDaemons or LaunchAgents."
  },
  {
    "name": "forensic artifact repository",
    "url": "https://github.com/ForensicArtifacts/artifacts",
    "description": "Forensic artifact repository covers persistence techniques in their artifacts."
  },
  {
    "name": "Sigma rules",
    "url": "https://github.com/Neo23x0/sigma/tree/master/rules",
    "description": "Sigma rules which covers persistence techniques. You can even use filters such as --filter tag=attack.persistence or specifically for one technique tag=attack.t1084."
  },
  {
    "name": "Autoruns",
    "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
    "description": "You can learn which Windows persistence mechanisms are checked by looking at the output of Autoruns on your own client. Categories and the different locations where things were found are seen in the output. A disassembly of Autoruns lists a subset of the entries which are scanned."
  },
  {
    "name": "PowerShell implementation of Autoruns",
    "url": "https://github.com/p0w3rsh3ll/AutoRuns/blob/master/AutoRuns.psm1",
    "description": "Another way to find Windows persistence locations is to look at the source code of the PowerShell version of Autoruns. Bonus: A history of the covered persistence locations for each Autoruns version is found there too, which is so awesome!"
  },
  {
    "name": "KnockKnock",
    "url": "https://github.com/objective-see/KnockKnock/blob/main/Plugins",
    "description": "A persistence detection tool for macOS to scan for persistence mechanisms on macOS. Specific persistence locations are found in the plugins folder, e.g. LaunchItems or StartupScripts."
  },
  {
    "name": "How malware persists on macOS",
    "url": "https://www.sentinelone.com/blog/how-malware-persists-on-macos/",
    "description": "List of macOS persistence mechanisms."
  },
  {
    "name": "Common malware persistence mechanisms",
    "url": "https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/",
    "description": "Different persistence mechanisms for different vectors are described."
  },
  {
    "name": "Malware persistence techniques",
    "url": "https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/",
    "description": "Good summary of multiple persistence mechanisms, ranging from multiple registry keys to more advanced one, like COM hijacking."
  },
  {
    "name": "Detecting & Removing an Attacker's WMI Persistence",
    "url": "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96",
    "description": "Blog post about detecting and removing WMI persistence."
  },
  {
    "name": "Windows Persistence using WinLogon",
    "url": "https://www.hackingarticles.in/windows-persistence-using-winlogon/",
    "description": "Blog post about abusing WinLogon."
  },
  {
    "name": "Untangling Kovter's persistence methods",
    "url": "https://blog.malwarebytes.com/threat-analysis/2016/07/untangling-kovter/",
    "description": "Blog post about Kovter's persistens methos, among others, hiding in registry. Another one is Threat Spotlight: Kovter Malware Fileless Persistence Mechanism."
  },
  {
    "name": "Persistence using GlobalFlags in Image File Execution Options – Hidden from Autoruns.exe",
    "url": "https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/",
    "description": "Blog post about abusing GlobalFlag for process execution."
  },
  {
    "name": "Uncovering a MyKings Variant With Bootloader Persistence via Managed Detection and Response",
    "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/uncovering-a-mykings-variant-with-bootloader-persistence-via-managed-detection-and-response/",
    "description": "Blog post about bootloader persistence."
  },
  {
    "name": "COM Object hijacking: the discreet way of persistence, 2014",
    "url": "https://www.gdatasoftware.com/blog/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence"
  },
  {
    "name": "Persistence – COM Hijacking, 2020",
    "url": "https://pentestlab.blog/2020/05/20/persistence-com-hijacking/"
  },
  {
    "name": "Abusing COM hijacking in combination with scheduled tasks, 2016",
    "url": "https://enigma0x3.net/2016/05/25/userland-persistence-with-scheduled-tasks-and-com-handler-hijacking/"
  },
  {
    "name": "Linux Malware Persistence with Cron",
    "url": "https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/",
    "description": "Blog post about linux persistence using cron jobs."
  },
  {
    "name": "Hunting for persistence via Microsoft Exchange Server or Outlook",
    "url": "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook",
    "description": "Blog post about Microsoft Exchange server persistence."
  },
  {
    "name": "MoonBounce: the dark side of UEFI firmware",
    "url": "https://securelist.com/moonbounce-the-dark-side-of-uefi-firmware/105468",
    "description": "An in-depth write up about one particular UEFI bootkit."
  },
  {
    "name": "Awesome Incident Response",
    "url": "https://github.com/meirwah/awesome-incident-response",
    "description": "Use the tools and resources for security incident response, aimed to help security analysts and DFIR teams."
  },
  {
    "name": "PowerSponse",
    "url": "https://github.com/swisscom/PowerSponse",
    "description": "PowerSponse includes various commands for cleanup of persistence mechanisms."
  },
  {
    "name": "Removing Backdoors – Powershell Empire Edition",
    "url": "https://www.n00py.io/2017/01/removing-backdoors-powershell-empire-edition/",
    "description": "Various blog posts handle the removal of WMI implants."
  },
  {
    "name": "RegDelNull",
    "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull",
    "description": "Removal of registry keys with null bytes - used e.g. in run keys for evasion."
  },
  {
    "name": "Atomic Red Team",
    "url": "https://github.com/redcanaryco/atomic-red-team",
    "description": "Atomic Red Team supports also the MITRE ATT&CK persistence techniques, see e.g. T1044 \"File System Permissions Weakness\"."
  },
  {
    "name": "hasherezade persistence demos",
    "url": "https://github.com/hasherezade/persistence_demos",
    "description": "Various (also non standard) persistence methods used by malware for testing own detection, among others COM hijacking demo is found in the repo."
  },
  {
    "name": "BlockBlock",
    "url": "https://github.com/objective-see/BlockBlock",
    "description": "A tool which provides continual protection by monitoring persistence locations and protects them accordingly. Similar to KnockKnock but for blocking."
  },
  {
    "name": "Awesome Forensics",
    "url": "https://github.com/Cugu/awesome-forensics",
    "description": "Use the tools from this list which includes awesome free (mostly open source) forensic analysis tools and resources. They help collecting the persistence mechanisms at scale, e.g. by using remote forensics tools."
  },
  {
    "name": "osquery",
    "url": "https://osquery.readthedocs.io",
    "description": "Query persistence mechanisms on clients."
  },
  {
    "name": "OSSEC",
    "url": "https://github.com/ossec/ossec-hids",
    "description": "Use rules and logs from the HIDS to detection configuration changes."
  },
  {
    "name": "KnockKnock",
    "url": "https://www.objective-see.com/products/knockknock.html",
    "description": "A tool to uncover persistently installed software in order to generically reveal such malware. See GitHub repository too for the source code."
  },
  {
    "name": "Dylib Hijack Scanner or DHS",
    "url": "https://www.objective-see.com/products/dhs.html",
    "description": "A simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked. See GitHub repository too for the source code."
  },
  {
    "name": "Autoruns",
    "url": "http://technet.microsoft.com/en-us/sysinternals/bb963902",
    "description": "A powerful persistence collection tool on Windows is Autoruns. It collects different categories and persistence information from a live system and in"
  },
  {
    "name": "AutorunsToWinEventLog.ps1",
    "url": "https://github.com/palantir/windows-event-forwarding/blob/master/AutorunsToWinEventLog/AutorunsToWinEventLog.ps1",
    "description": "Instead of using CSV output and copy these file to the server, you can use the AutorunsToWinEventLog script to convert the Autoruns output to Windows event logs and rely on standard Windows event log forwarding."
  },
  {
    "name": "PowerShell Autoruns",
    "url": "https://github.com/p0w3rsh3ll/AutoRuns",
    "description": "A PowerShell version of Autoruns."
  },
  {
    "name": "RegRipper",
    "url": "https://github.com/keydet89/RegRipper2.8",
    "description": "Extracts various persistence mechanisms from the registry files directly."
  },
  {
    "name": "RECmd",
    "url": "https://github.com/EricZimmerman/RECmd",
    "description": "Extract various persistence mechanisms, e.g. by using the config file UserClassesASEPs to extract user's CLSID information."
  },
  {
    "name": "KAPE",
    "url": "https://www.kroll.com/en/insights/publications/cyber/kroll-artifact-parser-extractor-kape",
    "description": "The tool allows collecting various predefined artifactgs using targets and modules, see KapeFiles which include persistence mechanisms, among others there's a collection of LNK files, scheduled task files and scheduled task listing or a WMI repository auditing module."
  }
]
