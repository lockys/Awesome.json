[
  {
    "name": "gpuinfo",
    "url": "http://vulkan.gpuinfo.org/",
    "description": "Vulkan Hardware Database by Sascha Willems"
  },
  {
    "name": "Khronos",
    "url": "https://www.khronos.org/vulkan"
  },
  {
    "name": "NVIDIA\n\nDriver for Desktop\nDriver for Android\nDriver for Linux for Tegra (L4T)\n\n",
    "url": "https://developer.nvidia.com/Vulkan"
  },
  {
    "name": "Driver for Desktop",
    "url": "https://developer.nvidia.com/vulkan-driver"
  },
  {
    "name": "Driver for Android",
    "url": "https://developer.nvidia.com/vulkan-android"
  },
  {
    "name": "Driver for Linux for Tegra (L4T)",
    "url": "https://developer.nvidia.com/embedded/vulkan"
  },
  {
    "name": "AMD\n\nOpen-source Driver\n\n",
    "url": "http://www.amd.com/en-gb/innovations/software-technologies/technologies-gaming/vulkan"
  },
  {
    "name": "Open-source Driver",
    "url": "https://github.com/GPUOpen-Drivers/AMDVLK"
  },
  {
    "name": "Imagination",
    "url": "https://www.imgtec.com/developers/powervr-sdk-tools/"
  },
  {
    "name": "Open-source Driver",
    "url": "https://01.org/linuxgraphics/blogs/jekstrand/2016/open-source-vulkan-drivers-intel-hardware/"
  },
  {
    "name": "Driver for Windows",
    "url": "https://software.intel.com/en-us/blogs/2016/03/14/new-intel-vulkan-beta-1540204404-graphics-driver-for-windows-78110-1540"
  },
  {
    "name": "Qualcomm",
    "url": "https://developer.qualcomm.com/software/adreno-gpu-sdk/gpu"
  },
  {
    "name": "Mali GPU Best Practices",
    "url": "https://developer.arm.com/solutions/graphics/developer-guides/mali-gpu-best-practices"
  },
  {
    "name": "For Windows & Linux",
    "url": "https://vulkan.lunarg.com/signin"
  },
  {
    "name": "For Android",
    "url": "https://developer.android.com/ndk/guides/graphics/index.html"
  },
  {
    "name": "AMD\n\nVulkan barriers explained\nVulkan Fast Paths\nLet Your Game Shine – Optimizing DirectX 12 and Vulkan Performance with AMD CodeXL\t\nD3D12 & Vulkan: Lessons Learned\t \nSay Hello to a New Rendering API in Town!\nVulkan Renderpasses\nPerformance tweets series: Barriers, fences, synchronization\nUsing the Vulkan™ Validation Layers\nMost common mistakes in Vulkan apps\nVulkan Device Memory\n\n",
    "url": "http://gpuopen.com/tag/vulkan/"
  },
  {
    "name": "Vulkan barriers explained",
    "url": "http://gpuopen.com/vulkan-barriers-explained/"
  },
  {
    "name": "Vulkan Fast Paths",
    "url": "http://32ipi028l5q82yhj72224m8j.wpengine.netdna-cdn.com/wp-content/uploads/2016/03/VulkanFastPaths.pdf"
  },
  {
    "name": "Let Your Game Shine – Optimizing DirectX 12 and Vulkan Performance with AMD CodeXL\t",
    "url": "http://32ipi028l5q82yhj72224m8j.wpengine.netdna-cdn.com/wp-content/uploads/2016/03/Let_your_game_shine_optimizing_DirectX-12_and_Vulkan-performance_with_AMD_CodeXL.pdf"
  },
  {
    "name": "D3D12 & Vulkan: Lessons Learned\t ",
    "url": "http://32ipi028l5q82yhj72224m8j.wpengine.netdna-cdn.com/wp-content/uploads/2016/03/d3d12_vulkan_lessons_learned.pdf"
  },
  {
    "name": "Say Hello to a New Rendering API in Town!",
    "url": "http://gpuopen.com/say-hello/"
  },
  {
    "name": "Vulkan Renderpasses",
    "url": "http://gpuopen.com/vulkan-renderpasses/"
  },
  {
    "name": "Performance tweets series: Barriers, fences, synchronization",
    "url": "http://gpuopen.com/performance-tweets-series-barriers-fences-synchronization/"
  },
  {
    "name": "Using the Vulkan™ Validation Layers",
    "url": "http://gpuopen.com/using-the-vulkan-validation-layers/"
  },
  {
    "name": "Most common mistakes in Vulkan apps",
    "url": "http://32ipi028l5q82yhj72224m8j.wpengine.netdna-cdn.com/wp-content/uploads/2016/05/Most-common-mistakes-in-Vulkan-apps.pdf"
  },
  {
    "name": "Vulkan Device Memory",
    "url": "http://gpuopen.com/vulkan-device-memory/"
  },
  {
    "name": "NVIDIA\n\nVulkan Device-Generated Commands\nGetting Vulkan Ready For VR\nGPU-Driven Rendering\nGDC 16",
    "url": "https://developer.nvidia.com/taxonomy/term/586",
    "description": "High-performance, Low-Overhead Rendering with OpenGL and Vulkan"
  },
  {
    "name": "Vulkan Device-Generated Commands",
    "url": "https://developer.nvidia.com/device-generated-commands-vulkan"
  },
  {
    "name": "Getting Vulkan Ready For VR",
    "url": "https://developer.nvidia.com/getting-vulkan-ready-vr"
  },
  {
    "name": "GPU-Driven Rendering",
    "url": "http://on-demand.gputechconf.com/gtc/2016/presentation/s6138-christoph-kubisch-pierre-boudier-gpu-driven-rendering.pdf"
  },
  {
    "name": "GDC 16",
    "url": "http://developer.download.nvidia.com/gameworks/events/GDC2016/mschott_lbishop_gl_vulkan.pdf",
    "description": "High-performance, Low-Overhead Rendering with OpenGL and Vulkan"
  },
  {
    "name": "GDC 16",
    "url": "http://developer.download.nvidia.com/gameworks/events/GDC2016/Vulkan_Essentials_GDC16_tlorach.pdf",
    "description": "Vulkan and NVIDIA – The Essentials"
  },
  {
    "name": "Engaging the Voyage to Vulkan",
    "url": "https://developer.nvidia.com/engaging-voyage-vulkan"
  },
  {
    "name": "Vulkan Shader Resource Binding",
    "url": "https://developer.nvidia.com/vulkan-shader-resource-binding"
  },
  {
    "name": "Vulkan Memory Management",
    "url": "https://developer.nvidia.com/vulkan-memory-management"
  },
  {
    "name": "OpenGL like Vulkan",
    "url": "https://developer.nvidia.com/opengl-vulkan"
  },
  {
    "name": "Transitioning from OpenGL to Vulkan",
    "url": "https://developer.nvidia.com/transitioning-opengl-vulkan"
  },
  {
    "name": "Siggraph 15 talk",
    "url": "http://on-demand.gputechconf.com/siggraph/2015/presentation/SIG1501-Piers-Daniell.pdf",
    "description": "Vulkan on NVIDIA GPUs"
  },
  {
    "name": "Arm\n\nVulkan Best Practice for Mobile Developers Tutorials\nVulkan's Key Features on Arm Architecture\nPorting a Graphics Engine to the Vulkan API\nGet Your Engine Ready for Vulkan on Mobile\nMulti-Threading in Vulkan\nMali Vulkan SDK Tutorials and Slides\n\n",
    "url": "https://developer.arm.com/solutions/graphics/apis/vulkan"
  },
  {
    "name": "Vulkan Best Practice for Mobile Developers Tutorials",
    "url": "https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers"
  },
  {
    "name": "Vulkan's Key Features on Arm Architecture",
    "url": "https://developer.arm.com/-/media/Files/pdf/graphics-and-multimedia/Vulkan%20API%20key%20features%20on%20ARM%20architecture.pdf"
  },
  {
    "name": "Porting a Graphics Engine to the Vulkan API",
    "url": "https://community.arm.com/groups/arm-mali-graphics/blog/2016/02/16/porting-a-graphics-engine-to-the-vulkan-api"
  },
  {
    "name": "Get Your Engine Ready for Vulkan on Mobile",
    "url": "https://developer.arm.com/-/media/Files/pdf/graphics-and-multimedia/Get%20Your%20Engine%20Ready%20for%20Vulkan%20on%20Mobile.pdf"
  },
  {
    "name": "Multi-Threading in Vulkan",
    "url": "https://community.arm.com/groups/arm-mali-graphics/blog/2016/04/19/massively-multi-thread-for-vulkan"
  },
  {
    "name": "Mali Vulkan SDK Tutorials and Slides",
    "url": "https://developer.arm.com/products/software/mali-sdks/vulkan"
  },
  {
    "name": "API without Secrets: Introduction to Vulkan [LICENSE]\n\nPart 1: The Beginning\nPart 2: Swap Chain\nPart 3: First Triangle\nPart 4: Vertex Attributes\n\n",
    "url": "https://github.com/GameTechDev/IntroductionToVulkan"
  },
  {
    "name": "Part 1: The Beginning",
    "url": "https://software.intel.com/en-us/api-without-secrets-introduction-to-vulkan-part-1"
  },
  {
    "name": "Part 2: Swap Chain",
    "url": "https://software.intel.com/en-us/api-without-secrets-introduction-to-vulkan-part-2"
  },
  {
    "name": "Part 3: First Triangle",
    "url": "https://software.intel.com/en-us/api-without-secrets-introduction-to-vulkan-part-3"
  },
  {
    "name": "Part 4: Vertex Attributes",
    "url": "https://software.intel.com/en-us/articles/api-without-secrets-introduction-to-vulkan-part-4"
  },
  {
    "name": "Imagination\n\nEfficient Rendering with Vulkan on PowerVR\nMigrating to Vulkan with the New PowerVR Graphics Framework\nMigrating from OpenGLES to Vulkan\n\n",
    "url": "http://blog.imgtec.com/tag/vulkan"
  },
  {
    "name": "Efficient Rendering with Vulkan on PowerVR",
    "url": "https://imagination-technologies-cloudfront-assets.s3.amazonaws.com/idc-docs/gdc16/6_Efficient%20rendering%20with%20Vulkan%20on%20PowerVR.pdf"
  },
  {
    "name": "Migrating to Vulkan with the New PowerVR Graphics Framework",
    "url": "https://www.imgtec.com/webinar/migrating-to-vulkan-with-the-powervr-framework/"
  },
  {
    "name": "Migrating from OpenGLES to Vulkan",
    "url": "https://www.imgtec.com/downloads/download-info/migrating-from-opengl-es-to-vulkan/"
  },
  {
    "name": "Siggraph 2016",
    "url": "https://community.arm.com/cfs-file/__key/telligent-evolution-extensions-calendar-calendarfiles/00-00-00-00-05/2_2D00_mmg_2D00_siggraph2016_2D00_best_2D00_practice_2D00_andrew.pdf",
    "description": "Best Practices for Mobile"
  },
  {
    "name": "Vulkan Usage Recommencation (for mobile)",
    "url": "https://developer.samsung.com/game/usage"
  },
  {
    "name": "Efficient use of Vulkan on UE4 Mobile",
    "url": "https://community.arm.com/cfs-file/__key/telligent-evolution-extensions-calendar-calendarfiles/00-00-00-00-05/6_2D00_mmg_2D00_siggraph2016_2D00_vulkan_2D00_smedis.pdf"
  },
  {
    "name": "Vulkan Guide",
    "url": "https://github.com/KhronosGroup/Vulkan-Guide"
  },
  {
    "name": "LunarG\n\nVulkan SDK\nVulkan SDK Version Compatibility\nIntroducing the New Vulkan Configurator\nUnified Validation Layer for Vulkan\nVulkan Synchronization Validation Quick Start Guide\nGuide to Vulkan Synchronization Validation\nVulkan GPU-Assisted Validation\nAutomatic RelaxedPrecision Decoration and Conversion in Spirv-Opt\nSPIR-V Legalization and Size Reduction with spirv-opt\nAll White Papers\n\n",
    "url": "https://lunarg.com"
  },
  {
    "name": "Vulkan SDK",
    "url": "https://vulkan.lunarg.com/"
  },
  {
    "name": "Vulkan SDK Version Compatibility",
    "url": "https://www.lunarg.com/news-insights/white-papers/vulkan-sdk-version-compatibility/"
  },
  {
    "name": "Introducing the New Vulkan Configurator",
    "url": "https://www.lunarg.com/news-insights/white-papers/vulkan-validation-layers/"
  },
  {
    "name": "Unified Validation Layer for Vulkan",
    "url": "https://www.lunarg.com/news-insights/white-papers/unified-validation-layer-for-vulkan/"
  },
  {
    "name": "Vulkan Synchronization Validation Quick Start Guide",
    "url": "https://www.lunarg.com/news-insights/white-papers/vulkan-synchronization-validation-quick-start-guide/"
  },
  {
    "name": "Guide to Vulkan Synchronization Validation",
    "url": "https://www.lunarg.com/news-insights/white-papers/guide-to-vulkan-synchronization-validation/"
  },
  {
    "name": "Vulkan GPU-Assisted Validation",
    "url": "https://www.lunarg.com/news-insights/white-papers/vulkan-gpu-assisted-validation/"
  },
  {
    "name": "Automatic RelaxedPrecision Decoration and Conversion in Spirv-Opt",
    "url": "https://www.lunarg.com/news-insights/white-papers/automatic-relaxedprecision-decoration-and-conversion-in-spirv-opt/"
  },
  {
    "name": "SPIR-V Legalization and Size Reduction with spirv-opt",
    "url": "https://www.lunarg.com/news-insights/white-papers/spir-v-legalization-and-size-reduction-with-spirv-opt/"
  },
  {
    "name": "All White Papers",
    "url": "https://www.lunarg.com/vulkan-white-papers/"
  },
  {
    "name": "How to Learn Vulkan",
    "url": "https://www.jeremyong.com/c++/vulkan/graphics/rendering/2018/03/26/how-to-learn-vulkan.html",
    "description": "Meta post on how to learn Vulkan"
  },
  {
    "name": "I Am Graphics And So Can You",
    "url": "https://www.fasterthan.life/blog/2017/7/11/i-am-graphics-and-so-can-you-part-1",
    "description": "Blog post style tutorial for those new to graphics learning Vulkan."
  },
  {
    "name": "Vulkan Game Engine Tutorial",
    "url": "https://www.youtube.com/watch?v=Y9U9IE0gVHA",
    "description": "Tutorial series on making a vulkan game engine by Brendan Galea on YouTube."
  },
  {
    "name": "Moving to Vulkan (Khronos UK May16)",
    "url": "https://www.khronos.org/assets/uploads/developers/library/2016-uk-chapter-moving-to-vulkan/Moving-to-Vulkan_Khronos-UK_May16.pdf"
  },
  {
    "name": "jhenriques's tutorial",
    "url": "http://jhenriques.net/development.html"
  },
  {
    "name": "Lunarg's tutorial",
    "url": "https://vulkan.lunarg.com/doc/sdk/1.0.26.0/windows/tutorial.html"
  },
  {
    "name": "Mike Bailey's Vulkan Page",
    "url": "http://web.engr.oregonstate.edu/~mjb/vulkan/",
    "description": "Provides extensive Vulkan course slides. [CC BY-NC-ND 4.0]"
  },
  {
    "name": "Qualcomm Video Tutorial Series",
    "url": "https://developer.qualcomm.com/software/adreno-gpu-sdk/tutorial-videos",
    "description": "Leans more towards Vulkan for mobile devices."
  },
  {
    "name": "Raw Vulkan",
    "url": "https://alain.xyz/blog/raw-vulkan",
    "description": "Overview on how to program a Vulkan application from the ground up."
  },
  {
    "name": "An overview of next-generation graphics APIs",
    "url": "http://nextgenapis.realtimerendering.com/",
    "description": "covers Vulkan, D3D12 etc."
  },
  {
    "name": "Tutorial by Overv and its github repository. [CC BY-SA 4.0]",
    "url": "https://vulkan-tutorial.com/"
  },
  {
    "name": "vulkan-sxs",
    "url": "https://github.com/philiptaylor/vulkan-sxs",
    "description": "explain the Vulkan API step by step and vulkan-sync - rephrase Vulkan's requirements on execution dependencies in a more precise form. [MIT]"
  },
  {
    "name": "Vulkan in 30 minutes",
    "url": "https://renderdoc.org/vulkan-in-30-minutes.html",
    "description": "by baldurk."
  },
  {
    "name": "Vulkan Demos and Tutorials. [MIT]",
    "url": "https://github.com/Z80Fan/VulkanDemos"
  },
  {
    "name": "Vulkan Guide. [MIT]",
    "url": "https://vkguide.dev"
  },
  {
    "name": "Vulkan Lecture Series",
    "url": "https://www.youtube.com/playlist?list=PLmIqTlJ6KsE1Jx5HV4sd2jOe3V1KMHHgn",
    "description": "University lectures by Johannes Unterguggenberger from the Research Unit of Computer Graphics, TU Wien. Covers basic and advanced topics like: Vulkan essentials, the swap chain, resources and descriptors, commands and command buffers, pipelines and stages, real-time ray tracing, and synchronization."
  },
  {
    "name": "The Talos Principle",
    "url": "http://www.croteam.com/talos-principle-will-support-vulkan-first-screenshot-released/",
    "description": "by Croteam."
  },
  {
    "name": "Dota2",
    "url": "https://github.com/ValveSoftware/Dota-2-Vulkan/",
    "description": "by Valve."
  },
  {
    "name": "Basemark",
    "url": "https://www.basemark.com/blog/basemark-extends-its-benchmarking-lead-with-a-vulkan-performance-test/",
    "description": "by Basemark."
  },
  {
    "name": "GFXBench 5",
    "url": "https://kishonti.net/news_single.jsp?id=31133884",
    "description": "by Kishonti."
  },
  {
    "name": "ProtoStar",
    "url": "https://www.unrealengine.com/blog/epic-games-unveils-protostar-at-samsung-galaxy-unpacked",
    "description": "by Epic, built with Unreal Engine 4 technology."
  },
  {
    "name": "DDraceNetwork",
    "url": "https://github.com/ddnet/ddnet/",
    "description": "Cooperative 2D platformer with optional Vulkan backend. - zlib website"
  },
  {
    "name": "Doom",
    "url": "https://en.wikipedia.org/wiki/Doom_(2016_video_game)",
    "description": "by id Software."
  },
  {
    "name": "vkQuake",
    "url": "https://github.com/Novum/vkQuake",
    "description": "Vulkan Quake port based on QuakeSpasm. [GPL]"
  },
  {
    "name": "vkQuake2",
    "url": "https://github.com/kondrak/vkQuake2",
    "description": "id Software's Quake 2 v3.21 with Vulkan support (Windows and Linux). [GPL]"
  },
  {
    "name": "q2vkpt",
    "url": "https://github.com/cschied/q2vkpt/",
    "description": "Real-time path tracer VKPT integrated into q2pro Quake 2 client. [gpl]"
  },
  {
    "name": "Linux port of SteamVR",
    "url": "https://github.com/ValveSoftware/SteamVR-for-Linux",
    "description": "SteamVR is built on top of the Vulkan API."
  },
  {
    "name": "3DMark",
    "url": "https://www.futuremark.com/pressreleases/compare-vulkan-and-directx-12-performance-with-3dmark",
    "description": "3DMark API Overhead test."
  },
  {
    "name": "Q2RTX",
    "url": "https://github.com/NVIDIA/Q2RTX",
    "description": "NVIDIA’s implementation of RTX ray-tracing in Quake II. [LICENSE]"
  },
  {
    "name": "Khronos Vulkan samples [LICENSE]",
    "url": "https://github.com/KhronosGroup/Vulkan-Samples"
  },
  {
    "name": "Sascha Willems's samples and Deferred rendering of Sponza and his talk of Khronos_meetup_munich.",
    "url": "https://github.com/SaschaWillems/Vulkan"
  },
  {
    "name": "(Incomplete) Sascha Willems's samples port to Kotlin",
    "url": "https://github.com/jvm-graphics-labs/Vulkan"
  },
  {
    "name": "Sascha Willems's Vulkan-glTF-PBR",
    "url": "https://github.com/SaschaWillems/Vulkan-glTF-PBR",
    "description": "physical based rendering with Vulkan using glTF 2.0 models. [MIT]"
  },
  {
    "name": "Vulkan Best Practice for Mobile Developers Samples",
    "url": "https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers"
  },
  {
    "name": "Android port of LunarG samples.",
    "url": "https://github.com/googlesamples/vulkan-basic-samples"
  },
  {
    "name": "android tutorials.",
    "url": "https://github.com/googlesamples/android-vulkan-tutorials"
  },
  {
    "name": "nvpro-samples",
    "url": "https://github.com/nvpro-samples",
    "description": "NVIDIA DesignWorks Samples. [LICENSE]"
  },
  {
    "name": "gl_vk_chopper",
    "url": "https://github.com/nvpro-samples/gl_vk_chopper",
    "description": "Simple vulkan rendering example."
  },
  {
    "name": "gl_vk_threaded_cadscene",
    "url": "https://github.com/nvpro-samples/gl_vk_threaded_cadscene",
    "description": "OpenGL and Vulkan comparison on rendering a CAD scene using various techniques and the blog about it."
  },
  {
    "name": "gl_vk_bk3dthreaded",
    "url": "https://github.com/nvpro-samples/gl_vk_bk3dthreaded",
    "description": "Vulkan sample rendering 3D with 'worker-threads'."
  },
  {
    "name": "gl_vk_supersampled",
    "url": "https://github.com/nvpro-samples/gl_vk_supersampled",
    "description": "Vulkan sample showing a high quality super-sampled rendering."
  },
  {
    "name": "NVIDIA GameWorks Samples",
    "url": "https://github.com/NVIDIAGameWorks/GraphicsSamples",
    "description": "GameWorks cross-platform graphics API samples. [LICENSE]"
  },
  {
    "name": "LunarG's Samples",
    "url": "https://github.com/LunarG/VulkanSamples"
  },
  {
    "name": "vkcube",
    "url": "https://github.com/krh/vkcube",
    "description": "'vkcube' sample from krh, works under X, wayland and VT console with"
  },
  {
    "name": "Stardust from Intel",
    "url": "https://github.com/GameTechDev/stardust_vulkan",
    "description": "The Stardust sample application uses the Vulkan graphics API to efficiently render a cloud of animated particles. [LICENSE]"
  },
  {
    "name": "Vulkan Quake port based on QuakeSpasm.",
    "url": "https://github.com/Novum/vkQuake"
  },
  {
    "name": "C# Samples",
    "url": "https://github.com/FacticiusVir/SharpVk-Samples",
    "description": "Port of Overv's tutorials to SharpVk [MIT]"
  },
  {
    "name": "Vulkan-Forward-Plus-Renderer",
    "url": "https://github.com/WindyDarian/Vulkan-Forward-Plus-Renderer",
    "description": "VFPR - a Vulkan Forward Plus Renderer. [MIT]"
  },
  {
    "name": "Laugh Engine",
    "url": "https://github.com/jian-ru/laugh_engine",
    "description": "Vulkan implementation of real-time PBR renderer."
  },
  {
    "name": "tinyrenderers",
    "url": "https://github.com/chaoticbob/tinyrenderers",
    "description": "Single header implemenations of Vulkan and D3D12 renderers."
  },
  {
    "name": "TLVulkanRenderer",
    "url": "https://github.com/trungtle/TLVulkanRenderer",
    "description": "Simple Vulkan-based renderer for my master thesis on real-time transparency. [CC BY-SA 4.0]"
  },
  {
    "name": "Vulkan-Hpp Samples",
    "url": "https://github.com/jherico/Vulkan",
    "description": "Fork of Sascha Willems excellent Vulkan examples that uses Vulkan-Hpp."
  },
  {
    "name": "SDF Font Demo",
    "url": "https://github.com/kocsis1david/font-demo",
    "description": "Text rendering in Vulkan by estimating signed distance. [MIT]"
  },
  {
    "name": "vulkantoy",
    "url": "https://github.com/jpystynen/vulkantoy",
    "description": "Shadertoy image shader test app with Vulkan. [MIT]"
  },
  {
    "name": "GL_vs_VK",
    "url": "https://github.com/RippeR37/GL_vs_VK",
    "description": "Comparison of OpenGL and Vulkan API in terms of performance. [MIT]"
  },
  {
    "name": "Vulkan Basic Graphics Samples",
    "url": "https://github.com/vcoda/basic-graphics-samples",
    "description": "Collection of simple graphics samples that are written using Magma library."
  },
  {
    "name": "Simple RTX Vulkan raytracing tutorials. [MIT]",
    "url": "https://github.com/iOrange/rtxON"
  },
  {
    "name": "Ray Tracing In One Weekend (Vulkan RTX)",
    "url": "https://github.com/GPSnoopy/RayTracingInVulkan",
    "description": "Implementation of Peter Shirley's Ray Tracing In One Weekend book using Vulkan and NVIDIA's RTX extension."
  },
  {
    "name": "Gears VK",
    "url": "https://github.com/jeffboody/gearsvk",
    "description": "Gears VK is a heavily modified port of the famous \"gears\" demo to Vulkan/Android/Linux. [MIT]"
  },
  {
    "name": "Hello triangle, based on Vulkan Ray Tracing extensions. [MIT]",
    "url": "https://github.com/maierfelix/VK_KHR_ray_tracing"
  },
  {
    "name": "imgui",
    "url": "https://github.com/ocornut/imgui",
    "description": "Immediate Mode Graphical User interface. [MIT]"
  },
  {
    "name": "Skia",
    "url": "https://skia.googlesource.com/skia",
    "description": "Google's 2D graphics library has a Vulkan backend, demonstrated in a cross-platform sample application with its own window library. [BSD 3-clause] website"
  },
  {
    "name": "VKVG",
    "url": "https://github.com/jpbruyere/vkvg",
    "description": "Vulkan 2D graphics library, API follows the same pattern as Cairo graphics lib, but with new functions."
  },
  {
    "name": "libvc",
    "url": "https://github.com/alexhultman/libvc",
    "description": "Vulkan Compute for C++.  [LICENSE]"
  },
  {
    "name": "Vulkan Kompute",
    "url": "https://github.com/axsaucedo/vulkan-kompute",
    "description": "Blazing fast and lightweight Vulkan Compute Framework optimized for advanced GPU processing usecases. [Apache License 2.0]"
  },
  {
    "name": "ncnn",
    "url": "https://github.com/Tencent/ncnn",
    "description": "High-performance neural network inference framework with Vulkan based GPU inference. [BSD 3-clause]"
  },
  {
    "name": "vuh",
    "url": "https://github.com/Glavnokoman/vuh",
    "description": "Vulkan-based C++ GPGPU computing framework. [MIT]"
  },
  {
    "name": "VkFFT",
    "url": "https://github.com/DTolm/VkFFT",
    "description": "Efficient Vulkan FFT library [MPL-2.0 License]"
  },
  {
    "name": "Vulkan Memory Allocator",
    "url": "https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator",
    "description": "Easy to integrate Vulkan memory allocation library from AMD. [MIT]"
  },
  {
    "name": "[VulkanMemoryAllocator-Hpp] (https://github.com/malte-v/VulkanMemoryAllocator-Hpp)",
    "url": "https://github.com/malte-v/VulkanMemoryAllocator-Hpp",
    "description": "C++ Bindings for VMA, like Vulkan-HPP"
  },
  {
    "name": "Fossilize",
    "url": "https://github.com/Themaister/Fossilize",
    "description": "serialization format for various persistent Vulkan object types. [MIT]"
  },
  {
    "name": "vk-bootstrap",
    "url": "https://github.com/charles-lunarg/vk-bootstrap",
    "description": "C++ utility library to jump start Vulkan development by automating instance, physical device, device, and swapchain creation. [MIT]"
  },
  {
    "name": "Google's vulkan-cpp-library",
    "url": "https://github.com/google/vulkan-cpp-library",
    "description": "Vulkan abstraction library using C++11 for memory, resource management, type and thread safety as well as system independency. [Apache]"
  },
  {
    "name": "FrameGraph",
    "url": "https://github.com/azhirnov/FrameGraph",
    "description": "Vulkan abstraction layer that represent frame as a task graph. [BSD 2-clause]"
  },
  {
    "name": "V-EZ",
    "url": "https://github.com/GPUOpen-LibrariesAndSDKs/V-EZ",
    "description": "light-weight middleware layer for the Vulkan API targeting Professional Workstation ISVs. [MIT]"
  },
  {
    "name": "Vookoo",
    "url": "https://github.com/andy-thomason/Vookoo",
    "description": "Vookoo is a set of dependency-free utilities to assist in the construction and updating of Vulkan graphics data structres. [MIT]"
  },
  {
    "name": "vpp",
    "url": "https://github.com/nyorain/vpp",
    "description": "Modern C++ Vulkan Abstraction focused on performance and a straightforward interface. [MIT]"
  },
  {
    "name": "VulkanSceneGraph",
    "url": "https://github.com/vsg-dev",
    "description": "Vulkan/C++17 scene graph project, successor to OpenSceneGraph."
  },
  {
    "name": "Vulkan-WSIWindow",
    "url": "https://github.com/renelindsay/Vulkan-WSIWindow",
    "description": "Multi-platform library to create a Vulkan window, and handle input events. [Apache License 2.0]"
  },
  {
    "name": "Screen 13",
    "url": "https://github.com/attackgoat/screen-13",
    "description": "An easy-to-use Vulkan render graph for Rust. [MIT]"
  },
  {
    "name": "Auto-Vk",
    "url": "https://github.com/cg-tuwien/Auto-Vk",
    "description": "Vulkan convenience and productivity layer for modern C++, atop Vulkan-Hpp, by the Research Unit of Computer Graphics, TU Wien. [MIT]"
  },
  {
    "name": "Auto-Vk-Toolkit",
    "url": "https://github.com/cg-tuwien/Auto-Vk-Toolkit",
    "description": "C++ framework around Auto-Vk for rapid prototyping, research, and teaching, by the Research Unit of Computer Graphics, TU Wien. [MIT for the framework's code]"
  },
  {
    "name": "Falcor",
    "url": "https://github.com/NVIDIAGameWorks/Falcor",
    "description": "Real-time rendering framework from NVIDIA, supporting mainly DX12, with experimental Vulkan support. [BSD 3-clause]"
  },
  {
    "name": "The-Forge",
    "url": "https://github.com/ConfettiFX/The-Forge",
    "description": "DirectX 12, Vulkan, macOS Metal 2 rendering framework. [Apache License 2.0]"
  },
  {
    "name": "Diligent Engine",
    "url": "https://github.com/DiligentGraphics/DiligentEngine",
    "description": "a modern cross-platform low-level graphics library that supports OpenGL/GLES, Direct3D11/12 and Vulkan. [Apache License 2.0]"
  },
  {
    "name": "DemoFramework",
    "url": "https://github.com/NXPmicro/gtec-demo-framework",
    "description": "NXP GTEC C++11 cross-platform demo framework including lots of samples for Vulkan, OpenGL ES, OpenVX, OpenCL, OpenVG and OpenCV. [BSD-3-clause]"
  },
  {
    "name": "bgfx",
    "url": "https://github.com/bkaradzic/bgfx#bgfx---cross-platform-rendering-library",
    "description": "Cross-platform, graphics API agnostic, \"Bring Your Own Engine/Framework\" style rendering library. [BSD-2-clause]"
  },
  {
    "name": "Cinder and the story behind. [BSD]",
    "url": "https://github.com/cinder/Cinder"
  },
  {
    "name": "openFrameworks",
    "url": "https://github.com/openframeworks-vk/openFrameworks",
    "description": "the most famouse C++ creative coding framework. [MIT]"
  },
  {
    "name": "bsf",
    "url": "https://github.com/GameFoundry/bsf",
    "description": "Modern C++14 library for the development of real-time graphical applications. [MIT]"
  },
  {
    "name": "glfw and the guide.  [LICENSE]",
    "url": "https://github.com/glfw/glfw"
  },
  {
    "name": "SDL",
    "url": "https://discourse.libsdl.org/t/sdl-2-0-6-released/23109",
    "description": "added cross-platform Vulkan graphics support in SDL_vulkan.h. [zlib]"
  },
  {
    "name": "Acid",
    "url": "https://github.com/Equilibrium-Games/Acid",
    "description": "A high speed C++17 Vulkan game engine. [MIT]"
  },
  {
    "name": "liblava",
    "url": "https://github.com/liblava/liblava",
    "description": "A modern C++ and easy-to-use framework. [MIT]"
  },
  {
    "name": "AMD's Anvil",
    "url": "https://github.com/GPUOpen-LibrariesAndSDKs/Anvil",
    "description": "cross-platform framework for Vulkan. [LICENSE]"
  },
  {
    "name": "Introductory Vulkan sample. [MIT]",
    "url": "https://github.com/GPUOpen-LibrariesAndSDKs/HelloVulkan"
  },
  {
    "name": "Intrinsic Engine",
    "url": "https://github.com/begla/Intrinsic",
    "description": "Intrinsic is a Vulkan based cross-platform graphics and game engine. [Apache License 2.0]"
  },
  {
    "name": "Spectrum",
    "url": "https://github.com/mwalczyk/spectrum_core",
    "description": "Work-in-progress framework and abstraction layer around Vulkan."
  },
  {
    "name": "VkHLF",
    "url": "https://github.com/nvpro-pipeline/VkHLF",
    "description": "Vulkan High Level Framework. [LICENSE]"
  },
  {
    "name": "Lugdunum",
    "url": "https://github.com/Lugdunum3D/Lugdunum",
    "description": "Modern cross-platform 3D rendering engine built with Vulkan and modern C++14. [MIT]"
  },
  {
    "name": "Pumex",
    "url": "https://github.com/pumexx/pumex",
    "description": "cross-platform Vulkan renderer implementing frame graph and simple scene graph. Able to render on many surfaces at once [MIT]"
  },
  {
    "name": "small3d, Tiny Vulkan based C++ cross-platform game development framework [BSD 3-clause]",
    "url": "https://www.gamedev.net/projects/515-small3d/"
  },
  {
    "name": "Logi",
    "url": "https://github.com/UL-FRI-LGM/Logi",
    "description": "Light-weight object oriented Vulkan abstraction framework. [BSD 2-clause]"
  },
  {
    "name": "PowerVR SDK",
    "url": "https://github.com/powervr-graphics/Native_SDK",
    "description": "C++ cross-platform 3D graphics SDK to speed up development of Vulkan and GLES. [LICENSE]"
  },
  {
    "name": "visor",
    "url": "https://github.com/baldurk/visor",
    "description": "Vulkan Ignoble Software Rasterizer. [MIT]"
  },
  {
    "name": "VulkanOnD3D12",
    "url": "https://github.com/Chabloom/VulkanOnD3D12",
    "description": "Vulkan API for D3D12. [Apache License 2.0]"
  },
  {
    "name": "rostkatze",
    "url": "https://github.com/msiglreith/rostkatze",
    "description": "C++ implementation of Vulkan sitting on D3D12 🐈[Apache License 2.0]"
  },
  {
    "name": "VK9",
    "url": "https://github.com/disks86/VK9",
    "description": "Direct3D 9 compatibility layer using Vulkan"
  },
  {
    "name": "VUDA",
    "url": "https://github.com/jgbit/vuda",
    "description": "header-only lib that provides a CUDA Runtime API interface. [MIT]"
  },
  {
    "name": "clspv",
    "url": "https://github.com/google/clspv",
    "description": "prototype compiler for a subset of OpenCL C to Vulkan compute shaders. [Apache License 2.0]"
  },
  {
    "name": "MoltenVK",
    "url": "https://github.com/KhronosGroup/MoltenVK/",
    "description": "run Vulkan on iOS and macOS. [Apache-2.0]"
  },
  {
    "name": "Zink",
    "url": "https://gitlab.freedesktop.org/kusma/mesa/tree/zink",
    "description": "OpenGL implementation on top of Vulkan, part of Mesa project. [MIT]"
  },
  {
    "name": "glo / OpenGL Overload",
    "url": "https://github.com/g-truc/glo",
    "description": "OpenGL implementation on top of Vulkan."
  },
  {
    "name": "gfx-portability",
    "url": "https://github.com/gfx-rs/portability",
    "description": "Vulkan Portability implementation on Metal and D3D12, based on gfx-rs."
  },
  {
    "name": "Quartz",
    "url": "https://github.com/Nadrin/Quartz",
    "description": "Physically based Vulkan RTX path tracer with a declarative ES7-like scene description language. [LGPL-3.0]"
  },
  {
    "name": "datoviz",
    "url": "https://github.com/datoviz/datoviz",
    "description": "High-performance GPU interactive scientific data visualization with Vulkan. [MIT]"
  },
  {
    "name": "iMSTK",
    "url": "https://gitlab.kitware.com/iMSTK/iMSTK",
    "description": "C++ toolkit for building surgical simulations with Vulkan and VTK backends. [Apache License 2.0]"
  },
  {
    "name": "glslang",
    "url": "https://github.com/KhronosGroup/glslang",
    "description": "Library for compiling glsl to spirv [BSD 3-Clause]"
  },
  {
    "name": "SPIRV-Cross",
    "url": "https://github.com/KhronosGroup/SPIRV-Cross",
    "description": "Library for reflection of spirv, simplify the creation of Vulkan pipeline layouts [ Apache-2.0 License]"
  },
  {
    "name": "ash",
    "url": "https://github.com/MaikKlein/ash",
    "description": "Vulkan bindings for Rust. [MIT]"
  },
  {
    "name": "gfx-rs",
    "url": "https://github.com/gfx-rs/gfx",
    "description": "A low-overhead Vulkan-like GPU API for Rust. [Apache License 2.0]"
  },
  {
    "name": "libvulkan.lua",
    "url": "https://github.com/CapsAdmin/ffibuild/blob/master/vulkan/vulkan.lua",
    "description": "Lua bindings for Vulkan."
  },
  {
    "name": "dvulkan",
    "url": "https://github.com/ColonelThirtyTwo/dvulkan",
    "description": "Auto-generated D bindings for Vulkan."
  },
  {
    "name": "ErupteD",
    "url": "https://github.com/ParticlePeter/ErupteD",
    "description": "Another Auto-generated D bindings for Vulkan."
  },
  {
    "name": "flextGL",
    "url": "https://github.com/mosra/flextgl",
    "description": "Minimal Vulkan header/loader generator and the blog post about it."
  },
  {
    "name": "Silk.NET",
    "url": "https://github.com/dotnet/Silk.NET",
    "description": "C# bindings for Vulkan and others. [MIT]"
  },
  {
    "name": "vulkan",
    "url": "https://github.com/expipiplus1/vulkan",
    "description": "Haskell bindings for Vulkan and Vulkan Memory Allocator [BSD-3-Clause]"
  },
  {
    "name": "nvk",
    "url": "https://github.com/maierfelix/nvk",
    "description": "JavaScript bindings for Vulkan. [MIT]"
  },
  {
    "name": "racket-vulkan",
    "url": "https://github.com/zyrolasting/racket-vulkan",
    "description": "Racket bindings for Vulkan with detailed implementation notes. [MIT]"
  },
  {
    "name": "Vulkan-hpp Open-Source Vulkan C++ API originated from NVIDIA and the blog about it.",
    "url": "https://github.com/KhronosGroup/Vulkan-Hpp"
  },
  {
    "name": "VulkanSharp",
    "url": "https://github.com/mono/VulkanSharp",
    "description": "C# bindings for Vulkan. [MIT]"
  },
  {
    "name": "Vulkano",
    "url": "https://github.com/vulkano-rs/vulkano",
    "description": "Safe and rich Rust wrapper around the Vulkan API. [MIT]"
  },
  {
    "name": "LWJGL",
    "url": "https://www.lwjgl.org/",
    "description": "Lightweight Java Game Library 3 has Vulkan bindings. [BSD]"
  },
  {
    "name": "SharpVk",
    "url": "https://github.com/FacticiusVir/SharpVk",
    "description": "C# bindings for Vulkan with Linq-to-SPIR-V & NuGet package. [MIT]"
  },
  {
    "name": "vulkan",
    "url": "https://github.com/realitix/vulkan",
    "description": "Ultimate Python bindings for Vulkan generated with CFFI. [Apache Licence 2.0]"
  },
  {
    "name": "vulkan-go",
    "url": "https://github.com/vulkan-go/vulkan",
    "description": "Go bindings for Vulkan. [MIT]"
  },
  {
    "name": "PasVulkan",
    "url": "https://github.com/BeRo1985/pasvulkan",
    "description": "Vulkan bindings plus high-level wrapper library for Object Pascal [Zlib]"
  },
  {
    "name": "vulkan-zig",
    "url": "https://github.com/Snektron/vulkan-zig",
    "description": "Vulkan binding generator for Zig [MIT]"
  },
  {
    "name": "VK², Kotlin Wrapper for Vulkan: code expressiveness and safety meet graphic power [Apache License 2.0]",
    "url": "https://github.com/kotlin-graphics/vkk"
  },
  {
    "name": "Vortice.Vulkan",
    "url": "https://github.com/amerkoleci/Vortice.Vulkan",
    "description": ".NET Standard 2.0 and .NET5 C# bindings [MIT]"
  },
  {
    "name": "Nsight™ Visual Studio Edition 5.2+.",
    "url": "https://developer.nvidia.com/nvidia-nsight-visual-studio-edition"
  },
  {
    "name": "LoaderAndValidationLayers",
    "url": "https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers",
    "description": "from KhronosGroup. [Apache Licence 2.0]"
  },
  {
    "name": "renderdoc",
    "url": "https://github.com/baldurk/renderdoc",
    "description": "by baldurk, a stand-alone graphics debugging tool. [MIT]"
  },
  {
    "name": "RDCtoVkCpp",
    "url": "https://github.com/azhirnov/RDCtoVkCpp",
    "description": "converts RenderDoc Vulkan capture to compilable and executable C++ code. [MIT]"
  },
  {
    "name": "VulkanTools",
    "url": "https://github.com/LunarG/VulkanTools",
    "description": "LunarG's tools including layers, vktrace and vkreplay. [Apache Licence 2.0]"
  },
  {
    "name": "VKtracer",
    "url": "https://www.vktracer.com",
    "description": "universal and easy-to-use profiler for Vulkan."
  },
  {
    "name": "CodeXL",
    "url": "https://github.com/GPUOpen-Tools/CodeXL",
    "description": "CodeXL goes open source. [MIT]"
  },
  {
    "name": "Qualcomm Adreno GPU Tools",
    "url": "https://developer.qualcomm.com/software/adreno-gpu-sdk/tools",
    "description": "samples, Adreno recommendation layer, best practice docs for Adreno GPU."
  },
  {
    "name": "Qualcomm Snapdragon Profiler",
    "url": "https://developer.qualcomm.com/software/snapdragon-profiler",
    "description": "includes Vulkan traces and frame captures for Adreno GPU."
  },
  {
    "name": "Arm Mobile Studio",
    "url": "https://www.arm.com/products/development-tools/graphics/arm-mobile-studio",
    "description": "includes the Arm Graphics Analyzer to trace graphics performance issues easily, and Arm Streamline performance analyzer, for a whole-system view of performance to determine bottlenecks quickly across both the CPU and GPU."
  },
  {
    "name": "Open Capture and Analytics Tool (OCAT)",
    "url": "https://github.com/GPUOpen-Tools/OCAT",
    "description": "provides an FPS overlay and performance measurement for D3D11, D3D12, and Vulkan. [MIT]"
  },
  {
    "name": "gapid",
    "url": "https://github.com/google/gapid",
    "description": "Graphics API Debugger, can trace and replay Android OpenGL ES and Vulkan applications. [Apache License 2.0]"
  },
  {
    "name": "Arm",
    "url": "https://github.com/ARM-software/perfdoc",
    "description": "PerfDoc - a validation layer against the Mali Application Developer Best Practices document. [MIT]"
  },
  {
    "name": "glsl_trace",
    "url": "https://github.com/azhirnov/glsl_trace",
    "description": "library for shader debugging and profiling for Vulkan and OpenGL. [MIT]"
  },
  {
    "name": "MangoHud",
    "url": "https://github.com/flightlessmango/MangoHud",
    "description": "Vulkan and OpenGL overlay for monitoring FPS, temperatures, CPU/GPU load. [MIT]"
  },
  {
    "name": "Introduction to Computer Graphics and the Vulkan API by Kenwright",
    "url": "https://www.amazon.com/Introduction-Computer-Graphics-Vulkan-API/dp/1548616176",
    "description": "Introduce the reader to the exciting topic of computer graphics from a grounds-up practical perspective with the Vulkan API."
  },
  {
    "name": "Learning Vulkan",
    "url": "https://www.amazon.com/Learning-Vulkan-Parminder-Singh/dp/1786469804",
    "description": "by Parminder Singh - Get started with the Vulkan API and its programming techniques using the easy-to-follow examples."
  },
  {
    "name": "Book's Examples",
    "url": "https://github.com/PacktPublishing/Learning-Vulkan"
  },
  {
    "name": "Vulkan Cookbook- by Pawel Lapinski",
    "url": "https://www.amazon.com/Vulkan-Cookbook-Pawel-Lapinski/dp/1786468158",
    "description": "Explores a wide range of graphics programming and GPU compute methods to make the best use of the Vulkan API."
  },
  {
    "name": "Book's Examples",
    "url": "https://github.com/PacktPublishing/Vulkan-Cookbook"
  },
  {
    "name": "Vulkan Programming Guide",
    "url": "https://www.amazon.com/Vulkan-Programming-Guide-Official-Learning/dp/0134464540",
    "description": "by Graham Sellers and John Kessenich - Introduces powerful 3D development techniques for many fields."
  },
  {
    "name": "The Road to Vulkan: Teaching Modern Low-Level APIs in Introductory Graphics Courses by Johannes Unterguggenberger, Bernhard Kerbl, and Michael Wimmer, Eurographics 2022",
    "url": "https://www.cg.tuwien.ac.at/research/publications/2022/unterguggenberger-2022-vulkan",
    "description": "Education Papers"
  },
  {
    "name": "Direct link to the paper.",
    "url": "https://www.cg.tuwien.ac.at/research/publications/2022/unterguggenberger-2022-vulkan/unterguggenberger-2022-vulkan-paper.pdf"
  },
  {
    "name": "Pre-recorded presentation on YouTube.",
    "url": "https://youtu.be/ZG0ct4V6c0k"
  },
  {
    "name": "Vulkan 1.0 Core API (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.0/html/index.html"
  },
  {
    "name": "Vulkan 1.0 Core API + Khronos-defined Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.0-wsi_extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.0 Core API + all registered Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.0-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.1 Core API (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.1/html/index.html"
  },
  {
    "name": "Vulkan 1.1 Core API + Khronos-defined Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.1-khr-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.1 Core API + all registered Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.1-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.2 Core API (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.2/html/index.html"
  },
  {
    "name": "Vulkan 1.2 Core API + Khronos-defined Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.2-khr-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.2 Core API + all registered Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.2-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.3 Core API (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.3/html/index.html"
  },
  {
    "name": "Vulkan 1.3 Core API + Khronos-defined Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.3-khr-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.3 Core API + all registered Extensions (Chunked HTML) (PDF) (Single-file HTML)",
    "url": "https://registry.khronos.org/vulkan/specs/1.3-extensions/html/index.html"
  },
  {
    "name": "Vulkan 1.0 Quick Reference Sheets",
    "url": "https://www.khronos.org/registry/vulkan/specs/1.0/refguide/Vulkan-1.0-web.pdf"
  },
  {
    "name": "Vulkan 1.1 Quick Reference Sheets",
    "url": "https://www.khronos.org/registry/vulkan/specs/1.1/refguide/Vulkan-1.1-web.pdf"
  },
  {
    "name": "Conformance Tests (CTS)",
    "url": "https://github.com/KhronosGroup/Vulkan-CTS"
  },
  {
    "name": "GDC 2016 Presentations",
    "url": "https://www.khronos.org/developers/library/2016-gdc"
  },
  {
    "name": "2016 UK Chapter: Moving to Vulkan",
    "url": "https://www.khronos.org/developers/library/2016-uk-chapter-moving-to-vulkan"
  },
  {
    "name": "SIGGRAPH 2016 BOF",
    "url": "https://www.youtube.com/watch?v=CsHMiEQgrLA",
    "description": "Vulkan"
  },
  {
    "name": "SIGGRPAH 2016 Best Practices Roundtable",
    "url": "https://www.youtube.com/watch?v=owuJRPKIUAg"
  },
  {
    "name": "2016 Vulkan DevDay UK",
    "url": "https://www.khronos.org/developers/library/2016-vulkan-devday-uk"
  },
  {
    "name": "2016 Vulkan DevDay Seoul",
    "url": "https://www.khronos.org/developers/library/2016-Vulkan-DevU-Seoul"
  },
  {
    "name": "2017 Vulkan DevU Vancouver",
    "url": "https://www.khronos.org/developers/library/2017-vulkan-devu-vancouver"
  },
  {
    "name": "2017 Vulkan Loader Webinar",
    "url": "https://www.khronos.org/developers/library/2017-vulkan-loader-webinar"
  },
  {
    "name": "SIGGRAPH 2017 BOF",
    "url": "https://www.youtube.com/watch?v=Nx0u-9ZwrmQ",
    "description": "Vulkan"
  },
  {
    "name": "2018 Vulkan Montreal Dev Day",
    "url": "https://www.khronos.org/developers/library/2018-vulkan-montreal-dev-day"
  },
  {
    "name": "2018 Vulkanised!",
    "url": "https://www.khronos.org/developers/library/2018-vulkanised"
  },
  {
    "name": "SIGGRAPH 2018 BOF",
    "url": "https://www.youtube.com/watch?v=FCAM-3aAzXg&t=18350s",
    "description": "Vulkan"
  },
  {
    "name": "Freenode IRC",
    "url": "http://webchat.freenode.net/?channels=Vulkan"
  },
  {
    "name": "Google Plus",
    "url": "https://plus.google.com/communities/108983304183191634377"
  },
  {
    "name": "Khronos Forum",
    "url": "https://forums.khronos.org/forumdisplay.php/114-Vulkan"
  },
  {
    "name": "Reddit",
    "url": "https://www.reddit.com/r/vulkan/"
  },
  {
    "name": "Stack Overflow",
    "url": "http://stackoverflow.com/questions/tagged/vulkan"
  },
  {
    "name": "Discord",
    "url": "https://discord.com/invite/tFdvbEj"
  },
  {
    "name": "awesome",
    "url": "https://github.com/sindresorhus/awesome",
    "description": "Curated list of awesome lists."
  },
  {
    "name": "awesome-opengl",
    "url": "https://github.com/eug/awesome-opengl",
    "description": "Curated list of awesome OpenGL libraries, debuggers and resources."
  },
  {
    "name": "gamedev",
    "url": "https://github.com/ellisonleao/magictools",
    "description": "Awesome list about game development."
  },
  {
    "name": "graphics-resources",
    "url": "https://github.com/mattdesl/graphics-resources",
    "description": "List of graphic programming resources."
  },
  {
    "name": "awesome-d3d12",
    "url": "https://github.com/vinjn/awesome-d3d12",
    "description": "Curated list of awesome D3D12 libraries, debuggers and resources."
  }
]
