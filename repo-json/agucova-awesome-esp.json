[
  {
    "name": "Espressif AT",
    "url": "http://bbs.espressif.com/",
    "description": "The default vanilla firmware for the ESP8266."
  },
  {
    "name": "NodeMCU",
    "url": "https://github.com/nodemcu/nodemcu-firmware",
    "description": "An eLua-based firmware for the ESP8266."
  },
  {
    "name": "ESPBasic",
    "url": "http://www.esp8266basic.com/",
    "description": "A BASIC firmware for easy and wireless programming, ready for the 8266."
  },
  {
    "name": "MicroPython",
    "url": "https://github.com/micropython/micropython/",
    "description": "An implemention of Python3 for the ESP8266 and 32."
  },
  {
    "name": "ESP3D",
    "url": "https://github.com/luc-github/ESP3D",
    "description": "An experimental firmware for 3D Printers, both the ESP32 and 8266."
  },
  {
    "name": "Frankenstein",
    "url": "https://github.com/nekromant/esp8266-frankenstein",
    "description": "A quick and dirty firmware with cool features for the ESP8266."
  },
  {
    "name": "MongooseOS",
    "url": "https://github.com/cesanta/mongoose-os",
    "description": "An IoT specific firmware, with both C and JS. Available for the ESP32/8266."
  },
  {
    "name": "DeviceHive",
    "url": "https://devicehive.com/",
    "description": "A firmware made as a client for DeviceHive's IoT data platform, only for the 8266."
  },
  {
    "name": "RT-Thread",
    "url": "https://github.com/RT-Thread/rt-thread",
    "description": "Chinese open source firmware available for the ESP32."
  },
  {
    "name": "Sming Framework",
    "url": "https://github.com/SmingHub/Sming",
    "description": "Superb C/C++ IoT Framework with support for ESP8266 and ESP32."
  },
  {
    "name": "ESP Flash Tool",
    "url": "http://espressif.com/en/support/download/other-tools",
    "description": "The vanilla firmware flasher for both ESP's."
  },
  {
    "name": "Arduino Core/8266",
    "url": "https://github.com/esp8266/arduino",
    "description": "The Arduino core for the ESP8266."
  },
  {
    "name": "Arduino Core/32",
    "url": "https://github.com/espressif/arduino-esp32",
    "description": "The other Arduino core for the ESP32."
  },
  {
    "name": "ESPTool",
    "url": "https://github.com/espressif/esptool",
    "description": "Espressif's command line tool for bootloader comms in both ESP's."
  },
  {
    "name": "ESP-Open-SDK",
    "url": "https://github.com/pfalcon/esp-open-sdk",
    "description": "An open SDK for the ESP8266."
  },
  {
    "name": "ESPTool-ck",
    "url": "https://github.com/igrr/esptool-ck",
    "description": "A CLI tool for flashing in the ESP8266."
  },
  {
    "name": "ESPTool-gui",
    "url": "https://github.com/Rodmg/esptool-gui",
    "description": "A flashing GUI tool based on ESPTool-ck."
  },
  {
    "name": "LuaNode",
    "url": "https://github.com/Nicholas3388/LuaNode",
    "description": "A lua-only SDK for 32/8266."
  },
  {
    "name": "Tuya-Convert",
    "url": "https://github.com/ct-Open-Source/tuya-convert",
    "description": "A Wi-Fi firmware flasher ESP8266 that has been pre-loaded with Tuya firmware."
  },
  {
    "name": "NodeMCU Flasher",
    "url": "https://github.com/nodemcu/nodemcu-flasher",
    "description": "The official flashing tool for the NodeMCU OS."
  },
  {
    "name": "Tasmotizer",
    "url": "https://github.com/tasmota/tasmotizer",
    "description": "A graphical flashing tool for Tasmota firmware. Can manage Wi-Fi & MQTT settings, modules & templates."
  },
  {
    "name": "Arduino FS Plugin",
    "url": "https://github.com/esp8266/arduino-esp8266fs-plugin",
    "description": "An Arduino plugin for filesystem uploads in the 8266."
  },
  {
    "name": "PlatformIO",
    "url": "https://github.com/platformio/platformio-core",
    "description": "Cross Platform IDE and Debugger that supports both the ESP32 and ESP8266."
  },
  {
    "name": "OpenMQTTGateway",
    "url": "https://github.com/1technophile/OpenMQTTGateway",
    "description": "An implementation of a multiprotocol MQTT gateway for both ESP's among other devices."
  },
  {
    "name": "ESPHome",
    "url": "https://esphome.io/",
    "description": "A full-featured system for controlling ESP's through simple yet powerful configuration files and Home Automation systems."
  },
  {
    "name": "Tasmota",
    "url": "https://tasmota.github.io/docs/",
    "description": "An alternative firmware for Sonoff & other ESP8266/ESP32 devices. Includes a large collection of sensor drivers & integrates with Home Assistant natively or via MQTT."
  },
  {
    "name": "ESPEasy",
    "url": "https://github.com/letscontrolit/ESPEasy",
    "description": "Easily turn ESP modules into multifunction sensor devices for home automation systems."
  },
  {
    "name": "Sonoff-Homekit",
    "url": "https://github.com/Gruppio/Sonoff-Homekit",
    "description": "An alternative firmware for Sonoff devices (and other 8266 devices) which allows control through Apple's Homekit."
  },
  {
    "name": "DoorsignEPD",
    "url": "https://github.com/jamct/DoorsignEPD",
    "description": "A smart doorsign with an E-Paper display using the ESP32."
  },
  {
    "name": "EPaperWeatherDisplay",
    "url": "https://github.com/henri98/esp32-e-paper-weatherdisplay",
    "description": "A very cute e-ink weather display using the ESP32."
  },
  {
    "name": "HomePoint",
    "url": "https://github.com/sieren/Homepoint",
    "description": "Control MQTT/HomeKit smart home devices from an ESP32-powered screen."
  },
  {
    "name": "openHASP",
    "url": "https://www.openhasp.com/",
    "description": "Control your home automation devices from a customizable touchscreen UI connected via MQTT."
  },
  {
    "name": "SuperGreenOS",
    "url": "https://github.com/supergreenlab/SuperGreenOS",
    "description": "A full-featured home farming automation software for the ESP32."
  },
  {
    "name": "CanAirIO",
    "url": "https://github.com/kike-canaries/canairio_firmware#canairio-firmware",
    "description": "Citizen science project that uses mobile and fixed stations to measure air quality with ESP32 and smartphones."
  },
  {
    "name": "ESP32-BLECollector",
    "url": "https://github.com/tobozo/ESP32-BLECollector",
    "description": "A wardriving device which displays BLE devices and collects data from them, all in a nice screen interface."
  },
  {
    "name": "ESP32Marauder",
    "url": "https://github.com/justcallmekoko/ESP32Marauder",
    "description": "An integrated suite of offensive and defensive tools for WiFi and Bluetooth."
  },
  {
    "name": "ArduinoPcap",
    "url": "https://github.com/spacehuhn/ArduinoPcap",
    "description": "A library which allows generation of .pcap files with network traffic, for both ESP's."
  },
  {
    "name": "WiFi Satellite",
    "url": "https://hackaday.io/project/28831-wifi-satellite-34c3",
    "description": "A giant Wifi \"satellite\" that can monitor all 14 2.4Ghz channels using, well, 14 ESP32s."
  },
  {
    "name": "ESP8266 Deauther",
    "url": "https://github.com/spacehuhn/esp8266_deauther",
    "description": "A very cool pseudojammer (deauther) of Wifi networks that uses the ESP8266."
  },
  {
    "name": "PacketMonitor",
    "url": "https://github.com/spacehuhn/PacketMonitor32",
    "description": "A beautiful OLED monitor for packet activity in a WiFi channel. Two versions for each ESP."
  },
  {
    "name": "WiFiDuck",
    "url": "https://github.com/spacehuhn/WiFiDuck",
    "description": "A wireless-enabled keystroke injector, analogous, but even more awesome than the Rubber Ducky."
  },
  {
    "name": "ESP8266 Beacon Spam",
    "url": "https://github.com/spacehuhn/esp8266_beaconSpam",
    "description": "Want to confuse people? This device creates hundreds of fake WiFi networks."
  },
  {
    "name": "DeauthDetector",
    "url": "https://github.com/spacehuhn/DeauthDetector",
    "description": "A small device that shines a light if it detects a WiFi deauth attack. Made by the same guy as the last six projects."
  },
  {
    "name": "HeartyPatch",
    "url": "https://heartypatch.protocentral.com/",
    "description": "A wearable BLE and WiFi connected ECG-HR patch which uses the ESP32."
  },
  {
    "name": "HealthyPi v4",
    "url": "https://www.crowdsupply.com/protocentral/healthypi-v4-unplugged",
    "description": "An amazing open source vital signs monitor that can monitor ECG, respiration, pulse oximetry and body temperature, all run by an ESP32."
  },
  {
    "name": "Meshtastic",
    "url": "https://www.meshtastic.org/",
    "description": "ESP32 LoRA boards as secure, long battery life, mesh GPS communicators."
  },
  {
    "name": "ESP32-Paxcounter",
    "url": "https://github.com/cyberman54/ESP32-Paxcounter#esp32-paxcounter",
    "description": "Wifi & Bluetooth driven, LoRaWAN enabled, battery powered mini Paxcounter built on cheap ESP32 LoRa IoT boards."
  },
  {
    "name": "Disaster Radio",
    "url": "https://disaster.radio/",
    "description": "A disaster-resilient communications network powered by the sun."
  },
  {
    "name": "Alles",
    "url": "https://github.com/bwhitman/alles",
    "description": "A many speaker distributed music synthesizer using UDP multicast over WiFi, modeled after the alles machine/AMY."
  },
  {
    "name": "ESP32-Radio",
    "url": "https://github.com/Edzelf/ESP32-Radio",
    "description": "Internet radio based on ESP32, VS1053 and a TFT screen."
  },
  {
    "name": "ESPuino",
    "url": "https://github.com/biologist79/ESPuino",
    "description": "RFID-controlled music player powered by ESP32."
  },
  {
    "name": "Knobby",
    "url": "https://github.com/quadule/knobby",
    "description": "A handheld Spotify remote that encourages you to explore unfamiliar music."
  },
  {
    "name": "PedalinoMini",
    "url": "https://github.com/alf45tar/PedalinoMini",
    "description": "A wireless MIDI pedal controller for guitarists, built with the ESP32."
  },
  {
    "name": "Squeezelite-esp32",
    "url": "https://github.com/sle118/squeezelite-esp32",
    "description": "Streaming audio receiver with multi-room sync, AirPlay, Bluetooth, hardware buttons, display and more."
  },
  {
    "name": "ThingPulse esp8266-spotify-remote",
    "url": "https://github.com/ThingPulse/esp8266-spotify-remote",
    "description": "Control your Spotify player from a ESP8266 with color touch display."
  },
  {
    "name": "mutantW_V1",
    "url": "https://mutantcybernetics.com/mutantW_V1.html",
    "description": "An ESP32 based open source smartwatch with 1.7 inch display, WiFi, Bluetooth, NeoPixel and vibration."
  },
  {
    "name": "Open SmartWatch",
    "url": "https://open-smartwatch.github.io/",
    "description": "A FOSS smartwatch with GPS, an inertial unit and an extremely cool 3D-printed case."
  },
  {
    "name": "StickWatch",
    "url": "https://github.com/eggfly/StickWatch",
    "description": "A smartwatch module based on the M5Stick, using the ESP32."
  },
  {
    "name": "Watchy",
    "url": "https://watchy.sqfmi.com",
    "description": "An open source e-paper watch with lots of options for customization."
  },
  {
    "name": "SoftRF",
    "url": "https://github.com/lyusupov/SoftRF",
    "description": "A DIY aviation proximity awareness system that can be used in UAV projects."
  },
  {
    "name": "Retro ESP32",
    "url": "https://github.com/retro-esp32/RetroESP32",
    "description": "An extremely cool launcher for the Odroid Go (with the ESP32), which allows emulating several retro consoles."
  },
  {
    "name": "DroneBridge",
    "url": "https://github.com/DroneBridge/ESP32",
    "description": "An implementation of DroneBridge, a signal link for drones and UAV's on the ESP32."
  },
  {
    "name": "E-TKT",
    "url": "https://github.com/andreisperid/E-TKT",
    "description": "An ESP32 powered DIY label maker that mixes both old fashioned and contemporary technology."
  },
  {
    "name": "FreeTouchDeck",
    "url": "https://github.com/DustinWatts/FreeTouchDeck",
    "description": "Open source touch macropad and stream control deck with built-in web configurator."
  },
  {
    "name": "SmartSpin2k",
    "url": "https://github.com/doudar/SmartSpin2k",
    "description": "Transform your spin bike into a smart trainer with automatic resistance knob control in fitness apps like Zwift."
  },
  {
    "name": "WirelessPrinting",
    "url": "https://github.com/probonopd/WirelessPrinting",
    "description": "Print wirelessly from Cura, PrusaSlicer or Slic3r to your 3D printer connected to an ESP module."
  },
  {
    "name": "WLED",
    "url": "https://kno.wled.ge/",
    "description": "Control many types of RGB(W) LED strips with an ESP8266 or ESP32 over WiFi."
  },
  {
    "name": "Wasm3",
    "url": "https://github.com/wasm3/wasm3",
    "description": "A lightning fast WebAssembly interpreter designed for embedded devices, compatible with both ESP's."
  },
  {
    "name": "Homie8266",
    "url": "https://github.com/marvinroger/homie-esp8266",
    "description": "Framework implementation of the Homie protocol for the 8266."
  },
  {
    "name": "ESP-Dash",
    "url": "https://github.com/ayushsharma82/ESP-DASH",
    "description": "Beautiful and fast framework for creating remote dashboards in the 8266/32. No internet required."
  },
  {
    "name": "ESP_mqtt",
    "url": "https://github.com/tuanpmt/esp_mqtt",
    "description": "MQTT helper library for the ESP8266."
  },
  {
    "name": "GUIslice",
    "url": "https://github.com/ImpulseAdventure/GUIslice",
    "description": "A drag and drop GUI framework for several devices and screen controllers. Compatible with 8266 and 32."
  },
  {
    "name": "LVGL",
    "url": "https://lvgl.io",
    "description": "An open-source graphics library providing everything you need to create embedded GUIs with easy-to-use graphical elements, beautiful visual effects and low memory footprint."
  },
  {
    "name": "MicroWebSrv2",
    "url": "https://github.com/jczic/MicroWebSrv2",
    "description": "A very powerful MicroPython web server which can be used in the ESP32."
  },
  {
    "name": "IRremoteESP8266",
    "url": "https://github.com/markszabo/IRremoteESP8266",
    "description": "Emit and receive IR signals in the ESP8266."
  },
  {
    "name": "esphomelib",
    "url": "https://github.com/OttoWinter/esphomelib",
    "description": "Framework to integrate with HomeAssistant in the 8266."
  },
  {
    "name": "TTS",
    "url": "https://github.com/jscrane/TTS",
    "description": "A somehow good text to speech library for several Arduino devices, both ESP's included."
  },
  {
    "name": "Free802.11",
    "url": "https://github.com/Jeija/esp32free80211",
    "description": "Library to emit arbitrary 802.11 signals with the ESP32."
  },
  {
    "name": "Koyn",
    "url": "https://github.com/elkrem/koyn",
    "description": "A decentralized Bitcoin library for the ESP32 and the ESP8266."
  },
  {
    "name": "TFTLibrary",
    "url": "https://github.com/loboris/ESP32_TFT_library",
    "description": "TFT compatibility for the ESP32."
  },
  {
    "name": "UTFT-ESP",
    "url": "https://github.com/gnulabis/UTFT-ESP",
    "description": "UTFT Support for the ESP32/8266."
  },
  {
    "name": "ESPAudio",
    "url": "https://github.com/earlephilhower/ESP8266Audio",
    "description": "Library for playing a diverse range of audio formats in the ESP8266/ESP32."
  },
  {
    "name": "ESP32-audioI2S",
    "url": "https://github.com/schreibfaul1/ESP32-audioI2S",
    "description": "Plays mp3, m4a and wav files from SD card or stream via I2S interface."
  },
  {
    "name": "AsyncTCP",
    "url": "https://github.com/me-no-dev/ESPAsyncTCP",
    "description": "Asynchronous TCP Library for both the 8266 and the 32."
  },
  {
    "name": "ESP-HomeKit",
    "url": "https://github.com/maximkulkin/esp-homekit",
    "description": "Homekit implementation for 8266 on RTOS."
  },
  {
    "name": "HomeSpan",
    "url": "https://github.com/HomeSpan/HomeSpan",
    "description": "A robust and extremely easy-to-use Arduino library for creating your own ESP32-based HomeKit devices."
  },
  {
    "name": "ESPHelper",
    "url": "https://github.com/ItKindaWorks/ESPHelper",
    "description": "MQTT and Wi-fi automation-oriented library for the 8266."
  },
  {
    "name": "ESPHelper/32",
    "url": "https://github.com/ItKindaWorks/ESPHelper32",
    "description": "Port of the ESPHelper library for the 32."
  },
  {
    "name": "ESP8266Wifi",
    "url": "https://github.com/ekstrand/ESP8266wifi",
    "description": "Simple Arduino Wifi library for the 8266."
  },
  {
    "name": "WiFiESP",
    "url": "https://github.com/bportaluri/WiFiEsp",
    "description": "Arduino library for Wifi management, client/server for 8266 board."
  },
  {
    "name": "TinyGSM",
    "url": "https://github.com/vshymanskyy/TinyGSM",
    "description": "A quick and simple Arduino library for interaction with GSM modules which can also control the 8266 through AT commands."
  },
  {
    "name": "mJS",
    "url": "https://github.com/cesanta/mjs",
    "description": "A lightweight and restricted JS engine that is used by MongooseOS, compatible on the 32 and 8266."
  },
  {
    "name": "ESPUI",
    "url": "https://github.com/s00500/ESPUI",
    "description": "A simply library for making interactive web interfaces for both ESP's."
  },
  {
    "name": "ESP32 ePaper",
    "url": "https://github.com/loboris/ESP32_ePaper_example",
    "description": "A full-featured library for using ePaper modules with the ESP32."
  },
  {
    "name": "TinyUPnP",
    "url": "https://github.com/ofekp/TinyUPnP",
    "description": "A lightweight UPnP IGD library for automatic port forwarding on the 8266 and 32."
  },
  {
    "name": "Esp32SSHClient",
    "url": "https://github.com/J-Rios/Arduino-esp32sshclient",
    "description": "A library that implements a SSH client in the ESP32."
  },
  {
    "name": "painlessMesh",
    "url": "https://github.com/gmag11/painlessMesh",
    "description": "A library that takes care of the particulars of creating a simple mesh network using ESP8266 and ESP32 hardware."
  },
  {
    "name": "WifiEspNow",
    "url": "https://github.com/yoursunny/WifiEspNow",
    "description": "Arduino library for ESP-NOW, a connectionless WiFi communication protocol defined by Espressif."
  },
  {
    "name": "go-mcu",
    "url": "https://github.com/matiasinsaurralde/go-mcu",
    "description": "Golang package for interacting with NodeMCU-based boards."
  },
  {
    "name": "CanAirIO SensorLib",
    "url": "https://github.com/kike-canaries/canairio_sensorlib#canairio-air-quality-sensors-library",
    "description": "ESP32/8266 library with auto-configuration of multiple PM2.5, CO2 and environment sensors."
  },
  {
    "name": "Dhyara",
    "url": "https://github.com/neel/dhyara",
    "description": "A C/C++ library for making a Mobile Ad hoc Network (MANET) using ESP Now."
  },
  {
    "name": "LedFx",
    "url": "https://github.com/LedFx/LedFx",
    "description": "A library for using audio input to create realtime light shows. LedFx can control multiple devices and works great with cheap ESP8266 nodes."
  }
]
