[
  {
    "name": "GTFS",
    "url": "https://developers.google.com/transit/gtfs/",
    "description": "A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months."
  },
  {
    "name": "GTFS Realtime",
    "url": "https://developers.google.com/transit/gtfs-realtime/",
    "description": "GTFS Realtime consists of three binary files that contain realtime vehicle positions, realtime arrival information, and service alerts. Transit agencies typically update these files every minute."
  },
  {
    "name": "World Bank",
    "url": "https://olc.worldbank.org/content/introduction-general-transit-feed-specification-gtfs-and-informal-transit-system-mapping",
    "description": "\"Intro. to GTFS\" online course - A free, online, self-paced course for learning about GTFS and GTFS-realtime."
  },
  {
    "name": "Open Transit Data Toolkit",
    "url": "http://transitdatatoolkit.com/",
    "description": "A series of lessons to help people utilize open transit data."
  },
  {
    "name": "MBTA GTFS Onboarding",
    "url": "https://mybinder.org/v2/gh/mbta/gtfs_onboarding/main?urlpath=lab/tree/GTFS_Onboarding.ipynb",
    "description": "An interactive tutorial created by MBTA for GTFS static. A stand-alone Docker image is available on GitHub as well as a hosted/no-install version of the Jupyter notebook."
  },
  {
    "name": "German Open Transport Meetup",
    "url": "https://github.com/transportkollektiv/meetup/wiki",
    "description": "You can participate in a biweekly meetup of the German-speaking open transport community."
  },
  {
    "name": "OpenTripPlanner Community\n\nOpenTripPlanner User mailing list\nOpenTripPlanner Developers mailing list\n\n",
    "url": "https://github.com/opentripplanner/OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner User mailing list",
    "url": "https://groups.google.com/forum/#!forum/opentripplanner-users"
  },
  {
    "name": "OpenTripPlanner Developers mailing list",
    "url": "https://groups.google.com/forum/#!forum/opentripplanner-dev"
  },
  {
    "name": "TransitWiki",
    "url": "http://transitwiki.org",
    "description": "A community wiki for transit planners. Like this repo, but better."
  },
  {
    "name": "MobilityData Slack chat",
    "url": "https://share.mobilitydata.org/slack"
  },
  {
    "name": "Transit Developers mailing list",
    "url": "https://groups.google.com/forum/#!forum/transit-developers"
  },
  {
    "name": "OneBusAway User mailing list",
    "url": "http://groups.google.com/group/onebusaway-users"
  },
  {
    "name": "OneBusAway Developers mailing list",
    "url": "http://groups.google.com/group/onebusaway-developers"
  },
  {
    "name": "OneBusAway API mailing list",
    "url": "http://groups.google.com/group/onebusaway-api"
  },
  {
    "name": "OneBusAway Slack chat",
    "url": "https://onebusaway.herokuapp.com/"
  },
  {
    "name": "Transit Techies NYC",
    "url": "https://transittechies.nyc/",
    "description": "NYC-based meetup for those interested in this repo. Speaker list includes many contributors to this repo."
  },
  {
    "name": "GTFS Data Exchange (Deprecated)",
    "url": "http://www.gtfs-data-exchange.com/agencies",
    "description": "Formerly the definitive directory of GTFS feed URLs. Shutdown in 2016. But 93 GB of data from 2008 to 2016 is available upon request."
  },
  {
    "name": "OpenMobilityData (Deprecated)",
    "url": "https://openmobilitydata.org/",
    "description": "List of GTFS and GTFS-RT feeds. Archives and validates the GTFS feeds and allows you to preview both GTFS and GTFS-RT through the browser. Formerly TransitFeeds.com. MobilityData announced it is end-of-life as of early 2022 with a shutdown date to be determined."
  },
  {
    "name": "The Mobility Database",
    "url": "https://database.mobilitydata.org/",
    "description": "JSON and CSV files on GitHub that is a repository of 1300+ mobility datasets across the world. Contains contents of OpenMobilityData/TransitFeeds.com."
  },
  {
    "name": "Transitland",
    "url": "https://transit.land/",
    "description": "Community editable list of many transit agency GTFS datasets. Also provides an API to access the data as JSON/GeoJSON and a playground to try out the data."
  },
  {
    "name": "CapMetrics",
    "url": "https://github.com/scascketta/CapMetrics",
    "description": "Historical vehicle locations for Austin's transit agency (CapMetro). Data is collected by capmetricsd, a Go daemon."
  },
  {
    "name": "National Transit Database (USA)",
    "url": "https://www.transit.dot.gov/ntd",
    "description": "Information and statistics on the transit systems of the United States, run by the Federal Transit Administration."
  },
  {
    "name": "Transport (France)",
    "url": "https://transport.data.gouv.fr/",
    "description": "GTFS datasets for French transit systems."
  },
  {
    "name": "European long-distance transport operators (EU) (Unofficial)",
    "url": "https://github.com/public-transport/european-transport-operators",
    "description": "Unofficial list of available API endpoints, GTFS feeds and client libraries"
  },
  {
    "name": "Transport API",
    "url": "https://www.transportapi.com/",
    "description": "REST API for aggregated transit data for the United Kingdom.  Fee-based access."
  },
  {
    "name": "TransLoc OpenAPI",
    "url": "https://market.mashape.com/transloc/openapi-1-2",
    "description": "REST API for real-time vehicle, route, stop, and arrival data for over 60 transit systems in the United States that have purchased TransLoc's AVL hardware and software."
  },
  {
    "name": "NextBus API",
    "url": "http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf",
    "description": "REST API for real-time vehicle, route, stop, and arrival data for agencies that have puchased NextBus's hardware and/or software."
  },
  {
    "name": "Navitia.io",
    "url": "http://www.navitia.io/",
    "description": "REST API for journey planning, stop schedules, isocrhons and lot more on US and EU. Navitia is the opensource engine behind the live API."
  },
  {
    "name": "CityBikes",
    "url": "http://api.citybik.es",
    "description": "REST API for aggregated bikeshare data from around the world. Powered by pyBikes."
  },
  {
    "name": "HAFAS – Propriety public transport management software by HaCon (list of endpoints)",
    "url": "https://de.wikipedia.org/wiki/HAFAS"
  },
  {
    "name": "Citymapper API",
    "url": "https://docs.external.citymapper.com/api/",
    "description": "REST API for transit journey planning, realtime transit data and walk, cycle, scooter travel times."
  },
  {
    "name": "Citylines.co",
    "url": "https://www.citylines.co",
    "description": "A collaborative platform for mapping transit systems, with an emphasis on their historical evolution. The data can be downloaded as GeoJSON or CSV from citylines.co/data."
  },
  {
    "name": "OpenStreetMap (OSM)",
    "url": "https://www.openstreetmap.org",
    "description": "The collaborative platform for mapping the world, including transport, transit, and routing data."
  },
  {
    "name": "GTFS-Hub",
    "url": "https://github.com/mfdz/gtfs-hub",
    "description": "Community tested, probably quality/content enhanced, partially merged or filtered GTFS-feeds of (currently German) transport agencies. Maintained by MITFAHR|DE|ZENTRALE."
  },
  {
    "name": "sample-gtfs-feed",
    "url": "https://github.com/public-transport/sample-gtfs-feed",
    "description": "An imaginary GTFS data set used for testing."
  },
  {
    "name": "transitfeed unit tests",
    "url": "https://github.com/google/transitfeed/tree/master/tests/data",
    "description": "Test data created for the original Google Python GTFS validator."
  },
  {
    "name": "Transitland GTFS and GTFS Realtime unit tests",
    "url": "https://github.com/interline-io/transitland-lib",
    "description": "For testing the transitland-lib library that handles GTFS and GTFS Realtime parsing and validation for Transitland:"
  },
  {
    "name": "GTFS",
    "url": "https://github.com/interline-io/transitland-lib/tree/master/test/data/bad-entities",
    "description": "\"bad entities\" at the single row level"
  },
  {
    "name": "GTFS",
    "url": "https://github.com/interline-io/transitland-lib/tree/master/test/data/validator/errors",
    "description": "validation errors that that involve entities in one or more files"
  },
  {
    "name": "GTFS",
    "url": "https://github.com/interline-io/transitland-lib/tree/master/test/data/validator/best-practices",
    "description": "best practices"
  },
  {
    "name": "GTFS Realtime",
    "url": "https://github.com/interline-io/transitland-server/tree/main/test/data/rt",
    "description": "JSON test cases that are turned into PB contents"
  },
  {
    "name": "gtfs-realtime-validator unit tests",
    "url": "https://github.com/MobilityData/gtfs-realtime-validator/tree/master/gtfs-realtime-validator-lib/src/test/",
    "description": "Some GTFS datasets (zip files) are included and a large number of GTFS RT messages are defined programmatically in Java via the gtfs-realtime-bindings library."
  },
  {
    "name": "OpenTripPlanner unit tests",
    "url": "https://github.com/opentripplanner/OpenTripPlanner/tree/dev-2.x/src/test",
    "description": "Some GTFS datasets are defined for the unit tests (GtfsTest and mmri folder)."
  },
  {
    "name": "GraphHopper Routing Engine Open source routing engine for OpenStreetMap. Use it as Java library or server.",
    "url": "https://github.com/graphhopper/graphhopper/#public-transit"
  },
  {
    "name": "gtfs-server",
    "url": "https://github.com/denysvitali/gtfs-server",
    "description": "A web server, written in Rust that uses PostGIS as a backend to serve GTFS data via a HTTP endpoint"
  },
  {
    "name": "hafas-rest-api – Expose a HAFAS endpoint as a REST API.",
    "url": "https://github.com/public-transport/hafas-rest-api"
  },
  {
    "name": "Linked Connections",
    "url": "http://linkedconnections.org/",
    "description": "An open-source, scalable intermodal route planning engine, which allows clients to execute the route planning algorithm (as opposed to the server). Uses GTFS data."
  },
  {
    "name": "MOTIS",
    "url": "https://github.com/motis-project/motis",
    "description": "Multi Objective Travel Information System, written in C++ and Java. Can consume schedule timetables in the GTFS or HAFAS format as well as real time information in the GTFS-RT (and RISML, a propriatary format at Deutsche Bahn) as input data. For pedestrian routing (handled by Per Pedes Routing) and car routing (handled by OSRM) OpenStreetMap data is used."
  },
  {
    "name": "Navitia is the opensource engine behind the Navitia.io live API.",
    "url": "https://github.com/hove-io/navitia"
  },
  {
    "name": "OneBusAway",
    "url": "http://onebusaway.org/",
    "description": "A Java app that consumes GTFS and GTFS-Realtime (along with other formats) and turns them into an easy to use REST API."
  },
  {
    "name": "OpenTripPlanner",
    "url": "http://www.opentripplanner.org/",
    "description": "An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap)."
  },
  {
    "name": "pyBikes",
    "url": "https://github.com/eskerda/pybikes",
    "description": "Software powering CityBikes for worldwide bikeshare system info"
  },
  {
    "name": "TransitClock",
    "url": "http://thetransitclock.org",
    "description": "Java application that can consume raw vehicle positions and generate prediction times in formats such as GTFS-realtime.  Formerly known as \"Transitime\"."
  },
  {
    "name": "TransiCast",
    "url": "http://www.transicast.com/",
    "description": "Provides public transportation data for North America in a single, integrated call and response format. The data is provided in stream-parsable XML and JSON formats.  Open-source on Google Code.  Hosted version at www.transitcast.com requires payment."
  },
  {
    "name": "Remix",
    "url": "http://getremix.com/",
    "description": "A webapp that lets transit agencies easily plan routes."
  },
  {
    "name": "AC Transit RestroomFinder",
    "url": "https://github.com/actransitorg/ACTransit.RestroomFinder",
    "description": "Pinpoints the nearest authorized restroom for bus operator and field staff, using GPS and on-screen map."
  },
  {
    "name": "AC Transit Training and Education Department (TED) application",
    "url": "https://github.com/actransitorg/ACTransit.Training",
    "description": "This application supports the District's training operations for transportation and maintenance employees, primarily in the positions of Bus Operators and Heavy Duty Coach Mechanics (Apprentice and Journey), although the system supports new courses and apprenticeship programs."
  },
  {
    "name": "AC Transit Customer Relations application (CusRel)",
    "url": "https://github.com/actransitorg/ACTransit.CusRel",
    "description": "Public transit ticketing system for customer issues and feedback with: inter-departmental routing with notifications, department/person assigments, simple workflow, ticket searching, pre-canned reports, daily reminders and more."
  },
  {
    "name": "TransAM",
    "url": "http://camsys.software/products/transam",
    "description": "An open-source asset management platform for public transportation agencies.  Open-source on Github."
  },
  {
    "name": "RidePilot",
    "url": "https://github.com/camsys/ridepilot",
    "description": "An open-source Computer Aided Scheduling and Dispatch (CASD) software system to meet the needs of small scale human service transportation agencies (for more info see Cambridge Systematics's marketing site)."
  },
  {
    "name": "TNExT",
    "url": "https://github.com/ODOT-PTS/TNExT",
    "description": "Transit Network Explorer Tool (TNExT) is a web-based software tool developed for the visualization, analysis, and reporting of regional and statewide transit networks in the state of Oregon."
  },
  {
    "name": "Route Trends (webapp, GitHub)",
    "url": "https://metrotransitmn.shinyapps.io/route-trends/",
    "description": "An R Shiny app to ingest ridership time series, and return seasonal, trend, and residual components according to STL methodology and forecasts including uncertainty based on those components.  Sponsored by Metro Transit (Minneapolis-St. Paul)."
  },
  {
    "name": "TBEST",
    "url": "https://tbest.org/",
    "description": "TBEST (Transit Boardings Estimation and Simulation Tool) is an effort to develop a multi-faceted GIS-based modeling, planning and analysis tool which integrates socio-economic, land use, and transit network data into a platform for scenario-based transit ridership estimation and analysis. Funded by the Florida Department of Transportation. Free to use but not open-source."
  },
  {
    "name": "Bus Tracking GPS",
    "url": "https://github.com/herrdragon/busTrackingGps",
    "description": "Code for Miami prototype of a cheap open-source solution to track transit buses."
  },
  {
    "name": "Instabus",
    "url": "http://instabus.org",
    "description": "Realtime map of Austin's (CapMetro) public transit. Has no server/backend dependency at all and runs completely on GitHub pages."
  },
  {
    "name": "OpenTripPlanner Client GWT",
    "url": "https://github.com/mecatran/OpenTripPlanner-client-gwt",
    "description": "A Google Web Toolkit-based web interface for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner.js",
    "url": "https://github.com/conveyal/otp.js",
    "description": "A Javascript-based client for OpenTripPlanner (no longer under development)"
  },
  {
    "name": "OTP-UI React Component Library",
    "url": "https://github.com/opentripplanner/otp-ui",
    "description": "React Javascript component library, which can be used to build trip planner webapps. See the Storybook for a demo."
  },
  {
    "name": "GTFS-realtime Alerts Producer Web Application",
    "url": "https://github.com/OneBusAway/onebusaway-service-alerts",
    "description": "A Java-based web application for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "HRT BUS Web app",
    "url": "https://github.com/Code4HR/hrt-bus-api",
    "description": "HRT Bus API publishes real time bus data from Hampton Roads Transit through an application programming interface for developers to make apps from it."
  },
  {
    "name": "Transit-Map",
    "url": "https://github.com/vasile/transit-map",
    "description": "Web app that animates vehicles (markers) on a map using the public transport timetables to interpolate their positions along the routes (polylines)."
  },
  {
    "name": "Transitive.js",
    "url": "https://github.com/conveyal/transitive.js",
    "description": "Creates a customizable web map layer of transit routes using Leaflet or D3."
  },
  {
    "name": "Google I/O Transport Tracker",
    "url": "https://github.com/googlemaps/transport-tracker",
    "description": "Shows shuttle arrival times for Google I/O conference, based on the open-source transport-tracker project.  Note: To implement this yourself, you need a Google Maps APIs Premium Plan license."
  },
  {
    "name": "1-Click",
    "url": "http://camsys.software/products/1-click",
    "description": "A virtual “trip aggregator” that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and biking. Open-source on GitHub."
  },
  {
    "name": "Bustime",
    "url": "https://busti.me",
    "description": "Public transport real-time monitoring with WebSocket updates. Open-source on GitHub."
  },
  {
    "name": "Transit Tracker",
    "url": "https://transittracker.ca/#/",
    "description": "Realtime vehicle position for Greater Montreal & Toronto, Canada"
  },
  {
    "name": "GTFS Builder",
    "url": "http://nationalrtap.org/Web-Apps/GTFS-Builder",
    "description": "A free web-based application to help you create GTFS files. Maintained by the National Rural Transit Assistance Program (RTAP)."
  },
  {
    "name": "Dede",
    "url": "https://dedriver.org",
    "description": "An independent and universal passenger information system (PIS) mapping realtime movement. A message feed with Vehicle Position entities in the GTFS-Realtime format or the Dede app can be used as data source."
  },
  {
    "name": "MBTA tile-server",
    "url": "https://github.com/mbta/tile-server",
    "description": "Scripts to create a Docker container that encapsulates all the elements necessary to develop map tiles for use on MBTA.com"
  },
  {
    "name": "Tiramisu Transit",
    "url": "https://github.com/CMU-RERC-APT/tiramisu3-pr",
    "description": "An adaptive mobile transit app that shows real-time bus arrival information developed and deployed by Carnegie Mellon University. No longer maintained."
  },
  {
    "name": "TransitScreen",
    "url": "http://transitscreen.com/",
    "description": "Custom realtime displays of all local transportation choices"
  },
  {
    "name": "Citylines.co",
    "url": "https://www.citylines.co",
    "description": "A collaborative platform for mapping transit systems, with an emphasis on their historical evolution."
  },
  {
    "name": "Bikeshare Map",
    "url": "http://bikes.oobrien.com/",
    "description": "Status of all worldwide bikeshare stations"
  },
  {
    "name": "Bongo",
    "url": "http://ebongo.org",
    "description": "Real-time Transit Tracking for Iowa City, Coralville and the University of Iowa. Combines three disparate transit systems into one UI."
  },
  {
    "name": "Brand New Subway",
    "url": "http://jpwright.net/subway/",
    "description": "An interactive transportation planning game that lets players alter the NYC subway system to their heart's content."
  },
  {
    "name": "CityMapper Webapp",
    "url": "https://citymapper.com/nyc",
    "description": "Really polished webapp with trip planner and route status for over 30 of cities."
  },
  {
    "name": "YourStop",
    "url": "http://yourstop.info",
    "description": "Mobile friendly web app which consumes GTFS feeds and displays both live and scheduled trips for stops. Launched with MBTA, YRT/Viva and Maryland MTA."
  },
  {
    "name": "DC MetroHero",
    "url": "https://dcmetrohero.com",
    "description": "Realtime vehicle position and arrivals and departure information for the Washington, D.C. region's WMATA Metrorail and Metrobus systems. WebApp, Android, and iOS apps avaliable."
  },
  {
    "name": "OneBusAway Apps",
    "url": "https://play.google.com/store/apps/details?id=com.joulespersecond.seattlebusbot",
    "description": "Android (source code), Fire Phone (source code), iOS  (source code), Windows Phone (source code), Windows 8 (source code), Google Glass GDK (source code), Alexa skill (source code)"
  },
  {
    "name": "OpenTripPlanner Android",
    "url": "https://github.com/CUTR-at-USF/OpenTripPlanner-for-Android/wiki",
    "description": "An Android app for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner iOS",
    "url": "https://github.com/opentripplanner/OpenTripPlanner-iOS",
    "description": "An iOS app for OpenTripPlanner"
  },
  {
    "name": "opentripplanner-client-library",
    "url": "https://github.com/CUTR-at-USF/opentripplanner-client-library",
    "description": "A Kotlin Multiplatform library for making API requests and parsing responses from an OpenTripPlanner v2 server for trip plans, bike rental info, and server metadata for Android, iOS, and web."
  },
  {
    "name": "Transportr An Android app that uses public-transport-enabler in order to connect to many different transport networks worldwide.",
    "url": "https://github.com/grote/Transportr"
  },
  {
    "name": "Offi Directions",
    "url": "https://gitlab.com/oeffi/oeffi",
    "description": "An Android app that provides trip planning, schedules, live departure times, and disruption information for transport authorities in Europe and beyond."
  },
  {
    "name": "Trufi App",
    "url": "https://github.com/trufi-association/trufi-app",
    "description": "A cross-platform Flutter app that uses OpenTripPlanner"
  },
  {
    "name": "Dede App",
    "url": "https://github.com/dancesWithCycles/dede-android",
    "description": "An app making any Android powered phone become an Automatic Vehicle Locating (AVL) device for the Dede passenger information system (PIS)."
  },
  {
    "name": "MACS Transit Android App",
    "url": "https://github.com/yeSpud/MACSTransitApp",
    "description": "A bus tracker app for Android devices for the MACS Transit system in Fairbanks, Alaska. Uses RouteMatch APIs."
  },
  {
    "name": "Tiramisu Transit",
    "url": "https://github.com/CMU-RERC-APT/tiramisu3-pr#mobile-app-client",
    "description": "An adaptive mobile transit app that shows real-time bus arrival information developed and deployed by Carnegie Mellon University. Written using Ionic framework. No longer maintained."
  },
  {
    "name": "ally",
    "url": "http://www.allyapp.com/"
  },
  {
    "name": "Transit",
    "url": "http://transitapp.com/"
  },
  {
    "name": "CityMapper",
    "url": "https://citymapper.com/"
  },
  {
    "name": "Moovit",
    "url": "http://moovitapp.com/"
  },
  {
    "name": "TransLoc Rider",
    "url": "http://translocrider.com/",
    "description": "Real-time transit maps for over 100 transit systems."
  },
  {
    "name": "Transit Display",
    "url": "http://transitdisplay.com/",
    "description": "Multimodal and real-time transit display software."
  },
  {
    "name": "Ualabee",
    "url": "https://ualabee.com/company/",
    "description": "Community driven trip planner with focus on user interaction, users can report anomalies, upload pictures, edit transit data and chat with other passengers."
  },
  {
    "name": "Citymapper SDK",
    "url": "https://citymapper.com/powers",
    "description": "Allows you to add journey planning and turn-by-turn navigation for walking, cycling, scooting and transit into native iOS and Android apps."
  },
  {
    "name": "All Transit",
    "url": "https://all-transit.com",
    "description": "Interactive GTFS route and schedule animation (for U.S. cities) using Mapbox GL JS, Deck.gl and Transitland. Github repository here."
  },
  {
    "name": "fastest-bus-analysis-in-the-west",
    "url": "https://github.com/vta/fastest-bus-analysis-in-the-west",
    "description": "A python Pandas script that combines Ridership/APC, Swiftly speed and dwell data, bus stop inventory, GTFS, and geospatial shapes to create a stop by stop, route by route, time grouping filterable dataset for cross-analyses.  The dataset is then visualized in Tableau to help VTA Planners find places to make bus and rail network faster and more reliable through speedups methods like stop consolidation and dedicated lanes."
  },
  {
    "name": "gtfspy-webviz",
    "url": "https://github.com/CxAalto/gtfspy-webviz",
    "description": "Web application for animation and visualization of GTFS data using gtfspy."
  },
  {
    "name": "gtfs-visualizations",
    "url": "https://github.com/cmichi/gtfs-visualizations",
    "description": "Open-source NodeJS application for visualizing the routes of GTFS datasets."
  },
  {
    "name": "Mapnificent",
    "url": "https://www.mapnificent.net/",
    "description": "Shows areas you can reach with public transport in a given time. Open-source on GitHub, live at https://www.mapnificent.net/."
  },
  {
    "name": "MIT COAXS",
    "url": "http://mittransportanalyst.github.io/",
    "description": "Co-creative Planning of Transit Corridors using Accessibility-Based Stakeholder Engagement (shows route scenarios using OpenTripPlanner Analyst)."
  },
  {
    "name": "MOTIS",
    "url": "https://motis-project.de/",
    "description": "Intermodal Mobility Information System including visualization"
  },
  {
    "name": "MTA Frequency",
    "url": "http://www.tyleragreen.com/maps/new_york/",
    "description": "Frequency visualization of subways and buses in New York City built using Transitland."
  },
  {
    "name": "SEPTA Rail OTP Report",
    "url": "https://apps.phor.net/septa/",
    "description": "An online on-time performance reporing & drill down tool using GTFS."
  },
  {
    "name": "TNExT",
    "url": "https://github.com/ODOT-PTS/TNExT",
    "description": "Transit Network Explorer Tool (TNExT) is a web-based software tool developed for the visualization, analysis, and reporting of regional and statewide transit networks in the state of Oregon."
  },
  {
    "name": "Toronto Transit Explorer",
    "url": "https://github.com/sidewalklabs/totx",
    "description": "A Java application that visualizes transit, biking and walking accessibility across the city of Toronto. Live version hosted here. Uses a modified version of R5 for routing."
  },
  {
    "name": "Transit Vis",
    "url": "https://github.com/zackAemmer/transit_vis",
    "description": "A visualization tool to display performance metrics derived from the King County Metro GTFS-RT feed (OneBusAway API). Viewable here. Used for this paper."
  },
  {
    "name": "TransitFlow Animate GTFS data around the world using Processing and Transitland.",
    "url": "https://github.com/transitland/transitland-processing-animation"
  },
  {
    "name": "TRAVIC Transit Visualization Client",
    "url": "http://tracker.geops.ch/",
    "description": "Visualizes vehicles moving based on static GTFS data (and sometimes realtime data). Supports over 260 cities.  Github account for geOps organization is here."
  },
  {
    "name": "Traze by Veridict",
    "url": "https://traze.app/",
    "description": "Visualization of public transport vehicles from all over the world. Collaborate with other users to get real-time updates even when it is not available from the agency. Based on a number of sources, including GTFS and GTFS-RT. (Previously known as Livemap24)."
  },
  {
    "name": "Visualizing MBTA Data",
    "url": "http://mbtaviz.github.io/",
    "description": "Interactive graphs that show how people use Boston's subway system."
  },
  {
    "name": "GTFS Spec",
    "url": "https://developers.google.com/transit/gtfs/",
    "description": "Specification for the General Transit Data Feed, or GTFS. Also available in Español, Français."
  },
  {
    "name": "GTFS Best Practices",
    "url": "http://gtfs.org/best-practices/",
    "description": "Best practices for producers of a GTFS feed."
  },
  {
    "name": "CGTFS",
    "url": "https://github.com/rakhack/cgtfs",
    "description": "C library for reading static GTFS feeds. Supports reading unpacked feeds into application memory or into SQLite databases."
  },
  {
    "name": "RRRR Rapid Real-time Routing",
    "url": "https://github.com/bliksemlabs/rrrr",
    "description": "RRRR (usually pronounced R4) is a C-language implementation of the RAPTOR public transit routing algorithm."
  },
  {
    "name": "just_gtfs",
    "url": "https://github.com/mapsme/just_gtfs",
    "description": "C++17 header-only library for reading and writing GTFS (used in MAPS.ME). Main features: fast reading and writing of GTFS feeds, support for extended GTFS route types, simple working with GTFS Date and Time formats."
  },
  {
    "name": "ESRI public-transit-tools",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS (license for ArcGIS required)."
  },
  {
    "name": "GTFS Feed Parser",
    "url": "https://github.com/OsmSharp/GTFS",
    "description": ".Net/Mono implementation of a GTFS parser."
  },
  {
    "name": "Go GTFS Parser",
    "url": "https://github.com/geops/gtfsparser",
    "description": "A GTFS parsing library for Go."
  },
  {
    "name": "OneBusAway GTFS Modules",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-modules/wiki",
    "description": "A Java-based library for reading, writing, and transforming public transit data in the GTFS format, including database support."
  },
  {
    "name": "gtfs-sequelize",
    "url": "https://github.com/evansiroky/gtfs-sequelize",
    "description": "Node.js library modeling the static GTFS using sequelize.js."
  },
  {
    "name": "gtfs-utils – Utilities to process GTFS data sets (e.g., \"flattening\" calendar.txt & calendar_dates.txt, computing arrival/departure times of trips).",
    "url": "https://github.com/public-transport/gtfs-utils"
  },
  {
    "name": "gtfs-via-postgres – Yet another tool to process GTFS using PostgreSQL.",
    "url": "https://github.com/derhuerst/gtfs-via-postgres"
  },
  {
    "name": "Node-GTFS",
    "url": "https://github.com/BlinkTagInc/node-gtfs",
    "description": "Loads transit data from GTFS files, unzips it and stores it to a SQLite database. Provides some methods to query for agencies, routes, stops and times."
  },
  {
    "name": "gtfs-schema",
    "url": "https://github.com/tyleragreen/gtfs-schema",
    "description": "PostgreSQL schema for GTFS feeds."
  },
  {
    "name": "gtfs-via-postgres – Yet another tool to process GTFS using PostgreSQL.",
    "url": "https://github.com/derhuerst/gtfs-via-postgres"
  },
  {
    "name": "combine_gtfs_feeds",
    "url": "https://github.com/psrc/combine_gtfs_feeds",
    "description": "A Python tool to combine multiple gtfs feeds into one feed/dataset."
  },
  {
    "name": "ESRI public-transit-tools",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS (license for ArcGIS required)."
  },
  {
    "name": "gtfsdb",
    "url": "https://github.com/OpenTransitTools/gtfsdb",
    "description": "Python library for converting GTFS files into a relational database."
  },
  {
    "name": "gtfslib-python",
    "url": "https://github.com/afimb/gtfslib-python",
    "description": " An open source library in python for reading GTFS files and computing various stats and indicators about Public Transport networks."
  },
  {
    "name": "gtfsman",
    "url": "https://github.com/geops/gtfsman",
    "description": "Repository-like tool in Python to manage and update a huge number of GTFS feeds."
  },
  {
    "name": "gtfspy",
    "url": "https://github.com/CxAalto/gtfspy",
    "description": "Public transport network analysis and travel time computations using Python3. Compatible with Postgres/PostGIS, Oracle, MySQL, and SQLite. Used by gtfspy-webviz."
  },
  {
    "name": "GTFS Kit",
    "url": "https://github.com/mrcagney/gtfs_kit",
    "description": "A Python 3.6+ tool kit for analyzing General Transit Feed Specification (GTFS) data. Supersedes GTFSTK."
  },
  {
    "name": "GTFSTK",
    "url": "https://github.com/araichev/gtfstk",
    "description": "A Python 3 toolkit for analyzing GTFS data in memory. Uses Pandas and Shapely for speed. Superseded by GTFS Kit."
  },
  {
    "name": "Make GTFS",
    "url": "https://github.com/mrcagney/make_gtfs",
    "description": "A Python library to make GTFS feeds from basic route information."
  },
  {
    "name": "Mapzen GTFS",
    "url": "https://github.com/transitland/mapzen-gtfs",
    "description": "A Python GTFS library that supports reading individual GTFS tables, or constructing a graph to represent each agency in a feed."
  },
  {
    "name": "multigtfs",
    "url": "https://github.com/tulsawebdevs/django-multi-gtfs",
    "description": "A Django application to import and export GTFS."
  },
  {
    "name": "partridge",
    "url": "https://github.com/remix/partridge",
    "description": "A fast, forgiving Python GTFS reader built on pandas DataFrames."
  },
  {
    "name": "transit_service_analyst",
    "url": "https://github.com/psrc/transit_service_analyst",
    "description": "A Python library to support transit service analysis."
  },
  {
    "name": "trread",
    "url": "https://github.com/r-gtfs/trread",
    "description": "A transit (GTFS) file reader for R."
  },
  {
    "name": "GTFS-viz",
    "url": "https://github.com/vasile/GTFS-viz",
    "description": "Ruby script that converts a set of GTFS files into a SQLite database + GeoJSONs (needed by the Transit Map web application)"
  },
  {
    "name": "Chouette",
    "url": "http://www.chouette.mobi/",
    "description": "Converts French-Transmodel, SIRI, NETeX. See Chouette.mobi website for more info."
  },
  {
    "name": "extract-gtfs-pathways – Command-line tool to extract pathways as GeoJSON from a GTFS dataset.",
    "url": "https://github.com/derhuerst/extract-gtfs-pathways"
  },
  {
    "name": "extract-gtfs-shapes – Command-line tool to extract shapes as GeoJSON from a GTFS dataset.",
    "url": "https://github.com/derhuerst/extract-gtfs-shapes"
  },
  {
    "name": "GTFS-OSM-Sync",
    "url": "https://github.com/CUTR-at-USF/gtfs-osm-sync",
    "description": "A Java tool for synchronizing data in GTFS format with OpenStreetMap.org."
  },
  {
    "name": "gtfs-service-area",
    "url": "https://github.com/cal-itp/gtfs-service-area",
    "description": "Compute a transit service area from static GTFS. Results are output as single-layer .geojson files. Dockerized version of gtfs-to-geojson."
  },
  {
    "name": "GTFS-route-shapes",
    "url": "https://github.com/kotrc/GTFS-route-shapes",
    "description": "A Python script to generate a single geoJSON shape for each transit route in a GTFS archive."
  },
  {
    "name": "gtfs-to-geojson",
    "url": "https://github.com/BlinkTagInc/gtfs-to-geojson",
    "description": "Javascript tool that converts transit data in GTFS shapes and stops into geoJSON. This is useful for creating maps of transit routes."
  },
  {
    "name": "gtfs2gps",
    "url": "https://github.com/ipeaGIT/gtfs2gps",
    "description": "An R package that converts public transportation data in GTFS format to GPS-like records in a data.table, where each row represents the timestamp of each vehicle at a given spatial resolution."
  },
  {
    "name": "gtsf",
    "url": "https://github.com/r-gtfs/gtsf",
    "description": "general transit (GTFS) simple (geographic) features (sf) in R. can be used to convert from GTFS to Shapefile, GeoJSON, and other formats through GDAL."
  },
  {
    "name": "hafas-generate-gtfs (work-in-progress) – A Javascript tool to generate GTFS dumps from HAFAS endpoints.",
    "url": "https://github.com/derhuerst/hafas-generate-gtfs"
  },
  {
    "name": "Hafas2GTFS",
    "url": "https://github.com/geops/hafas2gtfs",
    "description": "Hafas2GTFS converter written in Python, optimized for SBB HAFAS feeds."
  },
  {
    "name": "kml-to-gtfs-shapes",
    "url": "https://github.com/bdferris/kml-to-gtfs-shapes/tree/gh-pages",
    "description": "Javascript tool to convert polylines from a KML file into a GTFS shapes.txt file. Hosted on GitHub here."
  },
  {
    "name": "NeTEx-to-GTFS Converter Java",
    "url": "https://github.com/entur/netex-gtfs-converter-java",
    "description": "Converts NeTEX datasets into GTFS datasets. The input NeTEx datasets are required to follow the Nordic NeTEx Profile."
  },
  {
    "name": "o2g",
    "url": "https://github.com/hiposfer/o2g",
    "description": "A simple tool to extract GTFS feed from OpenStreetMap."
  },
  {
    "name": "Open-Transport SYNTHESE Convertors",
    "url": "https://github.com/Open-Transport/synthese/wiki",
    "description": "Converts French-Transmodel, SIRI, NETeX, HAFAS, HASTUS, VDV452, and more."
  },
  {
    "name": "onebusaway-gtfs-to-barefoot",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-to-barefoot",
    "description": "A Java tool to create a Barefoot mapfile from a GTFS file."
  },
  {
    "name": "onebusaway-vdv-modules",
    "url": "https://github.com/OneBusAway/onebusaway-vdv-modules",
    "description": "A Java library for working with transit data in the VDV format, including converting VDV-452 schedule data into GTFS."
  },
  {
    "name": "osm2gtfs",
    "url": "https://github.com/grote/osm2gtfs",
    "description": "Turn OpenStreetMap data and schedule information into GTFS."
  },
  {
    "name": "transit_model",
    "url": "https://github.com/hove-io/transit_model",
    "description": "A Rust library to convert to/from the following formats: GTFS, NTFS (for Navitia, see Software for Creating APIs), TransXChange (UK standard format), KV1 (Netherland standard format) or NeTEx (European standard format)."
  },
  {
    "name": "transloc-gtfs-rectifier",
    "url": "https://github.com/laidig/transloc-gtfs-rectifier",
    "description": "Python application that attempts to assign GTFS stop_ids to TransLoc IDs using TransLoc's API (TransLoc doesn't provide GTFS stop_ids in their API)."
  },
  {
    "name": "Transmodel and IFF to GTFS",
    "url": "https://github.com/bliksemlabs/bliksemintegration",
    "description": "Imports and syncs (Transmodel) BISON Koppelvlak1, IFF (a format written by HP/EDS, somewhat similiar to ATCO CIF) to import timetables of the railway networks. The internal pseudo-NETeX datastructure allows to export to GTFS and there are proof-of-concepts to export to other formats such as NETeX, GTFS and IFF."
  },
  {
    "name": "bus-router",
    "url": "https://github.com/atlregional/bus-router",
    "description": "Python script that generates missing shapes.txt for GTFS using routing from Google Maps Directions API or OSRM."
  },
  {
    "name": "gtfs-blocks-to-transfers",
    "url": "https://github.com/TransitApp/GTFS-blocks-to-transfers",
    "description": "A Python tool to convert GTFS blocks, defined by setting trip.block_id into a series of trip-to-trip transfers (proposal)."
  },
  {
    "name": "GTFS Editor",
    "url": "https://github.com/conveyal/gtfs-editor",
    "description": "A (self-hosted) web-based GTFS editing framework. (Note: this project has been deprecated in favor of IBI Data Tools.)"
  },
  {
    "name": "GTFS Editor for Vagrant",
    "url": "https://github.com/laidig/vagrant-gtfs-editor",
    "description": "Quickly set up the GTFS editor (above) using Vagrant"
  },
  {
    "name": "static-GTFS-manager",
    "url": "https://github.com/WRI-Cities/static-GTFS-manager",
    "description": "A (self-hosted) browser-based user interface for creating, editing, exporting static GTFS (see related post).  Live demo here."
  },
  {
    "name": "TransitWand",
    "url": "https://github.com/conveyal/transit-wand",
    "description": "An open source web and mobile application for collecting transit data. Use it to create GTFS feeds, capture passenger counts or generate GIS datasets."
  },
  {
    "name": "IBI Data Tools",
    "url": "https://github.com/ibi-group/datatools-ui",
    "description": "A web application that handles GTFS editing, validating, quality checking, and deploying to OpenTripPlanner. (Combines and builds upon the functionality of the deprecated Gtfs Data Manager and GTFS Editor.)"
  },
  {
    "name": "GTFS.html",
    "url": "https://gtfs.pleasantprogrammer.com",
    "description": "An entirely browser-based tool to view GTFS feeds. Use it to view routes, stops, timetables, etc."
  },
  {
    "name": "pfaedle",
    "url": "https://github.com/ad-freiburg/pfaedle",
    "description": "Precise map-matching for GTFS using OpenStreetMap data"
  },
  {
    "name": "GTFS shape mapfit",
    "url": "https://github.com/HSLdevcom/gtfs_shape_mapfit",
    "description": "Python tool that fits GTFS shape files and stops to a given OSM map file. Uses pymapmatch for the matching."
  },
  {
    "name": "GTFS Builder",
    "url": "http://nationalrtap.org/Web-Apps/GTFS-Builder",
    "description": "A free web-based application to help you create GTFS files. Maintained by the National Rural Transit Assistance Program (RTAP)."
  },
  {
    "name": "gtfs-station-builder",
    "url": "https://github.com/kostjerry/gtfs-station-builder",
    "description": "UI tool to help build the internal structure of stations (including pathways.txt)"
  },
  {
    "name": "GTFS Text-to-Speech Tester",
    "url": "https://github.com/BlinkTagInc/node-gtfs-tts",
    "description": "A command-line tool that reads GTFS stop names out loud using Text-to-Speech to determine which need Text-to-Speech values for tts_stop_name in stops.txt."
  },
  {
    "name": "transit_service_analyst",
    "url": "https://github.com/psrc/transit_service_analyst",
    "description": "A Python library to support transit service analysis."
  },
  {
    "name": "Peartree",
    "url": "https://github.com/kuanb/peartree",
    "description": "A Python library for converting transit data into a directed graph for network analysis."
  },
  {
    "name": "R5: Rapid Realistic Routing on Real-world and Reimagined networks",
    "url": "https://github.com/conveyal/r5",
    "description": "A Java-based routing engine developed by Conveyal for multimodal (transit/bike/walk/car) networks. It currently plans many trips over a time window for scenario planning and analytics purposes. A related R wrapper package (r5r) is developed independently by IPEA. See also the performance comparison from Higgins et al. (2022), linked below."
  },
  {
    "name": "tidytransit",
    "url": "https://github.com/r-transit/tidytransit",
    "description": "An R package to read GTFS data into tibbles and simple features dataframes to map transit stops and routes, calculate travel times and transit frequencies, and validate transit feeds."
  },
  {
    "name": "transitr",
    "url": "https://github.com/tmelliott/transitr",
    "description": "An R package for constructing and modelling a transit network in real time to obtain vehicle ETAs"
  },
  {
    "name": "Busbuzzard",
    "url": "https://github.com/bmander/busbuzzard",
    "description": "Inference of probabilistic schedules from empirical data about transit vehicles."
  },
  {
    "name": "ESRI ArcGIS Public Transit Tools (GTFS)",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS"
  },
  {
    "name": "GTFS-to-Chart",
    "url": "https://github.com/BlinkTagInc/gtfs-to-chart",
    "description": "Creates stringline charts showing all vehicles on a transit route from GTFS data."
  },
  {
    "name": "GTFS-to-HTML",
    "url": "https://gtfstohtml.com",
    "description": "Generate human-readable timetables in HTML or PDF format directly from GTFS."
  },
  {
    "name": "TimeTablePublisher (TTPUB)",
    "url": "https://github.com/OpenTransitTools/ttpub",
    "description": "A web publishing system developed by TriMet that allows a transit agency to examine, modify, and transform raw scheduling data into easy-to-read timetables for customer information purposes"
  },
  {
    "name": "Conveyal's gtfs-validator",
    "url": "https://github.com/conveyal/gtfs-validator",
    "description": "A Java-based GTFS validator based on the OneBusAway GTFS Modules, runs in Java and is faster than the Google provided one."
  },
  {
    "name": "Conveyal's gtfs-lib",
    "url": "https://github.com/conveyal/gtfs-lib/",
    "description": "Conveyal's successor to their own gtfs-validator, a Java-based library for loading and saving GTFS feeds of arbitrary size with disk-backed storage."
  },
  {
    "name": "Google's feedValidator",
    "url": "https://github.com/google/transitfeed/wiki/FeedValidator",
    "description": "Google-supported Python-based GTFS validator."
  },
  {
    "name": "GTFS Data Package Specification",
    "url": "https://github.com/Stephen-Gates/GTFS",
    "description": "A Data Package specification with validation accomplished with Good Tables. Includes a data package, schemas, tests, and uses South East Queensland GTFS data as an example."
  },
  {
    "name": "GTFS Meta-Validator (hosted by Omni)",
    "url": "http://gtfsvalidator.omnimodal.io",
    "description": "A web-based GTFS validator that runs both the Google Python feedValidator and Conveyal's gtfs-validator on uploaded GTFS files."
  },
  {
    "name": "gtfstidy",
    "url": "https://github.com/patrickbr/gtfstidy",
    "description": "A Go-based tool to tidy and validate GTFS feeds."
  },
  {
    "name": "gtfs-validator-api",
    "url": "https://github.com/cal-itp/gtfs-validator-api",
    "description": "This Python package is a thin wrapper around MobilityData/gtfs-validator that handles intermediate files produced and finds gtfs-validator's output file so it can be given a specific name or returned as a string."
  },
  {
    "name": "GTFSVTOR",
    "url": "https://github.com/mecatran/gtfsvtor",
    "description": "An open-source GTFS validator implemented in Java licensed under GPLv3 maintained by Mecatran."
  },
  {
    "name": "MobilityData's gtfs-validator",
    "url": "https://github.com/MobilityData/gtfs-validator",
    "description": "A open-source GTFS validator canonically following the GTFS spec implemented in Java licensed under Apache v2.0 maintained by MobilityData."
  },
  {
    "name": "Reflect GTFS Validator (hosted by Foursquare ITP)",
    "url": "https://reflect.foursquareitp.com",
    "description": "Transit schedule and GTFS validation platform by Foursquare ITP that includes a free, web-based GTFS validator based on gtfs-lib."
  },
  {
    "name": "Transit App's gtfs-fares-v2-validator",
    "url": "https://github.com/TransitApp/gtfs-fares-v2-validator",
    "description": "A Python tool that validators GTFS-Fares-v2 data based on the draft specification."
  },
  {
    "name": "Transport Validator",
    "url": "https://github.com/etalab/transport-validator/",
    "description": "An open-source validator implemented in Rust. Used by the French National Access Point."
  },
  {
    "name": "GTFS-realtime documentation. Also available in Español.",
    "url": "https://github.com/google/transit/tree/master/gtfs-realtime"
  },
  {
    "name": "GTFS-realtime Autodoc",
    "url": "https://laidig.github.io/gtfs-rt-autodoc/index.html",
    "description": "Automatically generated documentation for GTFS-realtime, generated from the official GTFS-realtime protocol buffer specification and including some extensions."
  },
  {
    "name": "gtfs-realtime-bindings",
    "url": "https://github.com/google/gtfs-realtime-bindings",
    "description": "The official bindings for Java, .NET, Node.js, Python, and Ruby generated from the official GTFS-realtime protocol buffer specification."
  },
  {
    "name": "GTFS-realtime Exporter",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-exporter/wiki",
    "description": "A Java-based tool that assists in producing and sharing a GTFS-relatime feed."
  },
  {
    "name": "GTFS-realtime Alerts Producer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-alerts-producer-demo/wiki",
    "description": "A Java-based demo project for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "GTFS-realtime Alerts Producer Web Application",
    "url": "https://github.com/OneBusAway/onebusaway-service-alerts",
    "description": "A Java-based web application for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "GTFS-realtime TripUpdates & VehiclePositions Producer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-trip-updates-producer-demo/wiki",
    "description": "A Java-based demo project for producing GTFS-realtime TripUpdates (estimated arrivals) and Vehicle Positions."
  },
  {
    "name": "GTFS-realtime Vehicle Positions Consumer/Visualizer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-visualizer",
    "description": "A Java-based demo project for consuming a GTFS-realtime Vehicle Positions feed and displaying this info on a map."
  },
  {
    "name": "gtfs-realtime-validator",
    "url": "https://github.com/MobilityData/gtfs-realtime-validator",
    "description": "A GTFS Realtime validation tool originally developed by the Center for Urban Transportation Research at the University of South Florida and now maintained by MobilityData."
  },
  {
    "name": "GTFS-realtime to SQL",
    "url": "https://github.com/OpenMobilityData/GtfsRealTimeToSql",
    "description": "Parses a GTFS-RealTime feed into an SQL database (used in OpenMobilityData.org)"
  },
  {
    "name": "gtfsrdb",
    "url": "https://github.com/CUTR-at-USF/gtfsrdb",
    "description": "A Python tool that supports reading and archiving GTFS-realtime feeds into a database"
  },
  {
    "name": "retro-gtfs",
    "url": "https://github.com/SAUSy-Lab/retro-gtfs",
    "description": "A Python application that collects real-time data from the Nextbus API and archives it into the GTFS format (i.e., retrospective GTFS)."
  },
  {
    "name": "SIRI to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-siri-cli/wiki",
    "description": "A Java-based command-line utility to convert from the SIRI format to GTFS-realtime"
  },
  {
    "name": "OrbCAD SQL Server to GTFS-realtime",
    "url": "https://github.com/CUTR-at-USF/HART-GTFS-realtimeGenerator/",
    "description": "A Java-based command-line utility that extracts vehicle positions and trip updates information from an OrbCAD SQL Server and exports them to the GTFS-realtime TripUpdates and VehiclePositions formats."
  },
  {
    "name": "NextBus API to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-nextbus-cli/wiki",
    "description": "A Java-based command-line utility to convert from the NextBus API format to GTFS-realtime.  Note that NextBus now directly offers a GTFS-realtime API for their products.  See Cubic site and this FAQ."
  },
  {
    "name": "Syncromatics API to GTFS-realtime",
    "url": "https://github.com/CUTR-at-USF/bullrunner-gtfs-realtime-generator",
    "description": "A Java-based command-line utility to convert from the Syncromatics API format to GTFS-realtime TripUpdates and VehiclePositons."
  },
  {
    "name": "KV6,15,17, and ARNU to GTFS-realtime",
    "url": "https://github.com/bliksemlabs/bliksemintegration-realtime",
    "description": "Java-based tool to process incoming KV6,15,17 and ARNU and match them to static transit data present in a RID integration database. It then proceeds to export this data as ARNU RITinfo, GTFS(realtime) and KV78turbo"
  },
  {
    "name": "WMATA BusPositions API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/wmata-gtfsrealtime",
    "description": "Java-based tool to convert from WMATA's BusPositions API and Alert RSS feeds from MetroAlerts to GTFS-realtime TripUpdates, VehiclePositions, and Alerts feeds."
  },
  {
    "name": "SEPTA API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/septa-gtfsrealtime",
    "description": "Java-based tool to convert SEPTA's real-time bus and rail data to GTFS-realtime"
  },
  {
    "name": "CTA API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/ctatt-gtfsrealtime",
    "description": "Java-based tool to convert CTA's Train Tracker data to GTFS-realtime."
  },
  {
    "name": "Detroit DOT to GTFS-realtime",
    "url": "https://github.com/prashtx/ddot-avl",
    "description": "Extract real-time info from DDOT's TransitMaster installation (database) and convert to GTFS-realtime"
  },
  {
    "name": "Live Transit Event Trigger",
    "url": "https://github.com/ipublic/live_transit_event_trigger",
    "description": "Extracts data from Ride On's OrbCAD database and export as GTFS-realtime."
  },
  {
    "name": "SoundTransit to GTFS-realtime",
    "url": "https://github.com/bdferris/onebusaway-sound-transit-realtime",
    "description": "Convert text file feed from Sound Transit to GTFS-realtime"
  },
  {
    "name": "Civic Transit",
    "url": "https://github.com/jestin/CivicTransit",
    "description": "Screen-scrapes KCATA’s TransitMaster WebWatch installation to produce a GTFS-realtime feed."
  },
  {
    "name": "GTFS-realtime VehiclePositions to GTFS-realtime TripUpdates (TransitClock)",
    "url": "http://thetransitclock.org",
    "description": "Java application that can consume raw vehicle positions and generate prediction times in formats such as GTFS-realtime.  Formerly known as \"Transitime\"."
  },
  {
    "name": "gtfs-realtime-translators",
    "url": "https://github.com/Intersection/gtfs-realtime-translators",
    "description": "A Python-based tool to translate custom arrival API formats to GTFS-realtime.  As of July 2019 it supports LA Metro and SEPTA."
  },
  {
    "name": "Transloc API to GTFS-realtime",
    "url": "https://github.com/jonathonwpowell/transloc-to-gtfs-real-time",
    "description": "A Node.js based tool to convert the Transloc API to GTFS-realtime."
  },
  {
    "name": "hafas-gtfs-rt-feed – A Javascript tool to generate a GTFS Realtime feed from a HAFAS endpoint.",
    "url": "https://github.com/derhuerst/hafas-gtfs-rt-feed"
  },
  {
    "name": "GTFS-realtime to SIRI-Lite",
    "url": "https://github.com/etalab/transpo-rt/",
    "description": "A Rust webserver to convert multiple GTFS-RT feeds to a SIRI-Lite API."
  },
  {
    "name": "bus_kalman",
    "url": "https://github.com/cmoscardi/bus_kalman",
    "description": "A Kalman Filter used to interpolate bus travel times using NYC MTA real-time data."
  },
  {
    "name": "Concentrate",
    "url": "https://github.com/mbta/concentrate",
    "description": "Combines realtime transit information from multiple sources into single output files. Maintained by "
  },
  {
    "name": "gtfs-realtime-test-service",
    "url": "https://github.com/CUTR-at-USF/gtfs-realtime-test-service",
    "description": "A tool for mocking GTFS-realtime feed content (e.g., for use in testing a GTFS-realtime consuming application)."
  },
  {
    "name": "GTFS-realtime Munin Plugin",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-munin-plugin",
    "description": "Provides a Munin plugin for logging information about a GTFS-realtime feed."
  },
  {
    "name": "GTFS-realtime Nagio Plugin",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-nagios-plugin",
    "description": "Provides a Nagios plugin for monitoring a GTFS-realtime feed"
  },
  {
    "name": "GTFS-realtime Printer",
    "url": "https://github.com/laidig/gtfs-rt-printer",
    "description": "Java-based utility to print out information from a GTFS-realtime file or URL."
  },
  {
    "name": "gtfs-rt-admin",
    "url": "https://github.com/conveyal/gtfs-rt-admin",
    "description": "An admin tool for managing GTFS-RT service alerts (JavaScript and Java)."
  },
  {
    "name": "gtfs-rt-differential-to-full-dataset – Javascript tool to transform a continuous GTFS Realtime stream of DIFFERENTIAL incrementality data into a FULL_DATASET dump.",
    "url": "https://github.com/derhuerst/gtfs-rt-differential-to-full-dataset"
  },
  {
    "name": "gtfs-rt-dump",
    "url": "https://github.com/kurtraschke/gtfs-rt-dump",
    "description": "Converts protocol buffer format to plain text for easy viewing of a GTFS-realtime feed in plain text (for debugging purposes)"
  },
  {
    "name": "gtfs-rt-inspector – Web app to inspect & analyze any (CORS-enabled) GTFS Realtime feed. Open-source on GitHub.",
    "url": "https://public-transport.github.io/gtfs-rt-inspector/"
  },
  {
    "name": "GTFS Data Pipeline for TfNSW Bus Datasets",
    "url": "https://github.com/teckkean/GTFS-Data-Pipeline-TfNSW-Bus",
    "description": "A data pipeline developed for the TfNSW's GTFS Static and Realtime datasets. The datasets generated using the pipeline have been used to validate the performance of TfNSW's Transit Signal Priority Request via Public Transport Information and Priority System (PTIPS)."
  },
  {
    "name": "manual-gtfsrt",
    "url": "https://github.com/pailakka/manual-gtfsrt",
    "description": "A Go-based tool that serves a GTFS-RT feed created from editable JSON."
  },
  {
    "name": "print-gtfs-rt-cli – Javascript tool to read a GTFS Realtime feed from stdin, print human-readable or as JSON.",
    "url": "https://github.com/derhuerst/print-gtfs-rt-cli"
  },
  {
    "name": "transitcast",
    "url": "https://github.com/OpenTransitTools/transitcast",
    "description": "Uses GTFS and GTFS-RT vehicle position feed generating an estimated transition time it takes for each vehicle to move from scheduled stop to scheduled stop recording these an \"observed_stop_time\" table. These records can later be used to train a machine learning model to make vehicle travel predictions. Created by TriMet as part of an FTA IMI project."
  },
  {
    "name": "transit-feed-quality-calculator",
    "url": "https://github.com/CUTR-at-USF/transit-feed-quality-calculator",
    "description": "A Java project that uses the gtfs-realtime-validator to assess the quality of a large number of transit feeds, fetching the feed URLs from a global directory (TransitFeeds.com/OpenMobilityData.org)."
  },
  {
    "name": "Transit Network Model",
    "url": "https://github.com/tmelliott/TransitNetworkModel",
    "description": "A tool to generate predictions using GTFS-realtime VehiclePositions, a particle filter, and a Kalman Filter."
  },
  {
    "name": "SIRI API",
    "url": "https://github.com/OneBusAway/onebusaway/wiki/SIRI-Resources",
    "description": "Java classes generated from the v1.0 and v1.3 SIRI schemas."
  },
  {
    "name": "SIRI 2.0 API",
    "url": "https://github.com/laidig/siri-20-java",
    "description": "Java classes generated from the v2.0 SIRI schemas."
  },
  {
    "name": "SIRI to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-siri-cli/wiki",
    "description": "A Java-based command-line utility to convert from the SIRI format to GTFS-realtime."
  },
  {
    "name": "SIRI 2.0 Autodoc",
    "url": "https://laidig.github.io/siri-20-java/doc/",
    "description": "Automatically generated documentation from the (incredibly well) annotated SIRI 2.0 Schema Definition."
  },
  {
    "name": "King County Metro Legacy AVL to SIRI",
    "url": "https://github.com/bdferris/onebusaway-king-county-metro/tree/master/onebusaway-king-county-metro-legacy-avl-to-siri",
    "description": "Java-based tool to convert King County Metro's Legacy AVL format to SIRI."
  },
  {
    "name": "SIRI REST Client",
    "url": "https://github.com/CUTR-at-USF/SiriRestClient/wiki",
    "description": "An open-source Android library for interacting with the RESTful SIRI interface for real-time transit data, such as that currently being used by the MTA Bus Time API."
  },
  {
    "name": "SIRI 1.3 POJOs (Android-compatible)",
    "url": "https://github.com/CUTR-at-USF/onebusaway-siri-api-v13-pojos/wiki",
    "description": "Android-compatible Plain Old Java Objects (POJOSs) used for data binding (deserliazing XML/JSON) responses for SIRI v1.3 APIs.  Used by the SIRI REST Client."
  },
  {
    "name": "pysiri2validator",
    "url": "https://github.com/laidig/pysiri2validator",
    "description": "Simple validator for SIRI 2.0 written in Python 3."
  },
  {
    "name": "Edwig",
    "url": "https://github.com/af83/edwig",
    "description": "A golang server for real-time public transport data exchange, using the SIRI protocol."
  },
  {
    "name": "Alliance for Parking Data Standards (APDS)",
    "url": "https://www.allianceforparkingdatastandards.org/",
    "description": "Formed by the International Parking Institute (IPI), the British Parking Association (BPA), and the European Parking Association (EPA), APDS is a not-for-profit organization with the mission to develop, promote, manage, and maintain a uniform global standard that will allow organizations to share parking data across platforms worldwide.  APDS Version 1.0 documents are here."
  },
  {
    "name": "CurbLR",
    "url": "https://github.com/curblr/curblr-spec",
    "description": "A specification for curb regulations."
  },
  {
    "name": "Dyno-Demand",
    "url": "https://github.com/osplanning-data-standards/dyno-demand",
    "description": "A GTFS-based travel demand data format focusing on individual passenger demand suitable for dynamic network modeling developed by San Francisco County Transportation Authority, LMZ LLC, and UrbanLabs LLC."
  },
  {
    "name": "Dyno-Path",
    "url": "https://github.com/osplanning-data-standards/dyno-path",
    "description": "(Under development - see this post) Data for individual passenger trajectories."
  },
  {
    "name": "General Bikeshare Feed Specification (GBFS)",
    "url": "https://github.com/NABSA/gbfs",
    "description": "Open data standard for real-time bikeshare information developed by members of the North American Bikeshare Association (NABSA)."
  },
  {
    "name": "gbfs-validator",
    "url": "https://github.com/PierrickP/gbfs-validator",
    "description": "3rd party tool to validate GBFS feeds."
  },
  {
    "name": "gbfs R package",
    "url": "https://github.com/ds-civic-data/gbfs",
    "description": "Functions to interface with GBFS feeds in R, allowing users to save and accumulate tidy .rds datasets for specified cities/bikeshare programs."
  },
  {
    "name": "GBFS Documentation Platform",
    "url": "https://gbfs.mobilitydata.org/",
    "description": "Documentation platform for the General Bikeshare Feed Specification, maintaned by MobilityData. View the GBFS specification, change proposals, policy guides, and technical tools."
  },
  {
    "name": "GTFS-flex",
    "url": "https://github.com/MobilityData/gtfs-flex",
    "description": "A data format that models flexible public transportation services as an extension to GTFS."
  },
  {
    "name": "GTFS-plus",
    "url": "https://github.com/osplanning-data-standards/GTFS-PLUS",
    "description": "A GTFS-based transit network format for vehicle and capacity data suitable for dynamic transit modeling developed by Puget Sound Regional Council, UrbanLabs LLC, LMZ LLC, and San Francisco County Transportation Authority."
  },
  {
    "name": "GTFS-ride",
    "url": "https://github.com/ODOT-PTS/GTFS-ride",
    "description": "An open, fixed-route transit ridership data standard developed through a partnership between the Oregon Department of Transportation and Oregon State University."
  },
  {
    "name": "GTFS-stat",
    "url": "https://github.com/osplanning-data-standards/GTFS-STAT",
    "description": "An extension to a GTFS transit network with additional files that contain performance data developed by UrbanLabs LLC and San Francisco County Transportation Authority."
  },
  {
    "name": "General Modeling Network Specification (GMNS)",
    "url": "https://github.com/zephyr-data-specs/GMNS",
    "description": "A format for sharing routable road network files designed to be used in multi-modal static and dynamic transportation planning and operations models. Volpe/FHWA partnership with Zephyr Foundation."
  },
  {
    "name": "General Travel Network Specification",
    "url": "https://zephyrtransport.org/trb17projects/7-general-travel-network-specification/",
    "description": "A planned data specification for sharing travel demand model networks."
  },
  {
    "name": "Managed and Tolled Lanes Feed Specification (MTLFS)",
    "url": "https://github.com/vta/Managed-and-Tolled-Lanes-Feed-Specification",
    "description": "Proposal for a schema that comprise the Managed and Tolled Lanes Tolling Feed Specification (MTLFS) and defines the fields used in all of those files developed by Santa Clara Valley Transportation Authority."
  },
  {
    "name": "Mobility as a Service API",
    "url": "http://maas-api.org/",
    "description": "A set of open documents and test suite that defines a MaaS-compatible API (e.g., a MaaS Transport Service Provider Booking API)."
  },
  {
    "name": "Mobility Data Specification (MDS)",
    "url": "https://github.com/openmobilityfoundation/mobility-data-specification",
    "description": "A format to implement realtime data sharing, measurement and regulation for municipalities and mobility as a service providers. It is meant to ensure that governments have the ability to enforce, evaluate and manage providers. Maintained by the Open Mobility Foundation."
  },
  {
    "name": "NCHRP 08-119 Developing Data Standards and Guidance for Transportation Planning and Traffic Operations",
    "url": "http://apps.trb.org/cmsfeed/TRBNetProjectDisplay.asp?ProjectID=4543",
    "description": "Phase 1 (Anticipated) - The objective of this research is to develop standards and/or guidance to be used and adopted by the transportation community in collecting, managing, and sharing static and real-time data for transportation planning and operations."
  },
  {
    "name": "NeTex",
    "url": "http://netex-cen.eu/",
    "description": "A general purpose XML format designed for the exchange of complex static transport data among distributed systems managed by the CEN standards process."
  },
  {
    "name": "OMX: The Open Matrix data file format",
    "url": "https://github.com/osPlanning/omx",
    "description": "A structured collection of two-dimensional array objects and associated metadata, for possible use in the transportation modeling industry."
  },
  {
    "name": "Open Sales and Distribution Model (OSDM)",
    "url": "https://github.com/UnionInternationalCheminsdeFer/OSDM",
    "description": "Aims to substantially simplify the booking process for customers of rail trips and to lower complexity and distribution costs for distributors and railway carriers. Contains a specification of an offline model and on-line API. Maintained by the International Union of Railways (UIC)."
  },
  {
    "name": "SAE Shared and Digital Mobility Committee",
    "url": "http://articles.sae.org/15799/",
    "description": "Appears to be working on a data standard for car share and transportation network companies (TNCs) / rideshare."
  },
  {
    "name": "shared-row",
    "url": "https://github.com/d-wasserman/shared-row",
    "description": "A specification for right-of-way (ROW) for a SharedStreets Reference."
  },
  {
    "name": "TCRP G-16 Development of Transactional Data Specifications for Demand-Responsive Transportation (In progress)",
    "url": "http://apps.trb.org/cmsfeed/TRBNetProjectDisplay.asp?ProjectID=4120",
    "description": "The objective of this research is to develop technical specifications for transactional data for entities involved in the provision of demand-responsive transportation.  Expected completion date is late 2018."
  },
  {
    "name": "TIDES project",
    "url": "https://groups.google.com/forum/#!forum/tidesproject",
    "description": " Transit ITS Data Exchange Specification (TIDES) is a proposed effort to create standard data structures, APIs, and data management tools for historical transit ITS data including AVL, APC and AFC Data."
  },
  {
    "name": "Cal-ITP Operational Data Standard (ODS)",
    "url": "https://docs.calitp.org/operational-data-standard/",
    "description": " Intended to address the lack of a standard format for representing transit schedules used by drivers, dispatchers, and planners to carry out transit operations."
  },
  {
    "name": "Transport Operator Mobility-as-a-service Provider (TOMP)-API",
    "url": "https://github.com/TOMP-WG/TOMP-API",
    "description": "Working group in the Netherlands with a goal to develop an API for use by Transport Operators and Mobility-as-a-service Providers for operator discovery, trip planning, end user interaction, booking, and payment."
  },
  {
    "name": "World Bank",
    "url": "https://olc.worldbank.org/content/introduction-general-transit-feed-specification-gtfs-and-informal-transit-system-mapping",
    "description": "\"Intro. to GTFS\" online course - A free, online, self-paced course for learning about GTFS and GTFS-realtime."
  },
  {
    "name": "Open Transit Data Toolkit",
    "url": "http://transitdatatoolkit.com/",
    "description": "A series of lessons to help people utilize open transit data."
  },
  {
    "name": "MBTA GTFS Onboarding",
    "url": "https://mybinder.org/v2/gh/mbta/gtfs_onboarding/main?urlpath=lab/tree/GTFS_Onboarding.ipynb",
    "description": "An interactive tutorial created by MBTA for GTFS static. A stand-alone Docker image is available on GitHub as well as a hosted/no-install version of the Jupyter notebook."
  },
  {
    "name": "Planetizen \"Building a Transit Map Web App\" course",
    "url": "https://courses.planetizen.com/course/building-transit-map-app",
    "description": "A video tutorial on setting up your own web-based mapping application, with no coding experience required."
  },
  {
    "name": "When(ish) is my bus? Data and code",
    "url": "https://github.com/mjskay/when-ish-is-my-bus",
    "description": "The data and code (R) behind Whenish is my bus? Data includes three days of historical vehicle positions and the survey results."
  },
  {
    "name": "\"Legacy AVL system? It's okay, join the club.\" by Kurt Raschke",
    "url": "https://kurtraschke.com/2015/01/legacy-avl-export",
    "description": "Discussion of options for transforming legacy AVL system data into the GTFS-realtime format."
  },
  {
    "name": "\"GTFS Best Practices now available!\" by Sean Barbeau",
    "url": "https://medium.com/@sjbarbeau/gtfs-best-practices-now-available-88ac67194233",
    "description": "Discusses some of the challenges of an open data format like GTFS and the GTFS Best Practices that were launched in early 2017 to help address data quality."
  },
  {
    "name": "\"What's new in GTFS-realtime v2.0\" by Sean Barbeau",
    "url": "https://medium.com/@sjbarbeau/whats-new-in-gtfs-realtime-v2-0-cd45e6a861e9",
    "description": "Discuss the shortfalls in GTFS-realtime v1.0 and the improvements in v2.0."
  },
  {
    "name": "\"AVL, CAD, and Real-Time Passenger Info for Beginners\" by Tony Laidig",
    "url": "http://transitdata.net/avl-cad-and-real-time-passenger-info-for-beginners/",
    "description": "Provides a general introduction to technology used to track vehicles."
  },
  {
    "name": "\"Visualizing Better Transportation: Data & Tools\" by Steve Pepple",
    "url": "https://medium.com/@stevepepple/visualizing-better-transportation-data-tools-e48b8317a21c",
    "description": "A collection of transportation-related data and tools for the San Francisco Bay Area and other cities in North America, originally collected and discussed at a 2018 Transit Week Event at ARUP in San Francisco."
  },
  {
    "name": "\"How to use GTFS data to track transit vehicles in realtime\" by Tom Camp",
    "url": "https://www.ably.io/blog/gtfs-data-track-transit-vehicles-realtime",
    "description": "Using GTFS and GTFS Realtime to provide continuous realtime updates."
  },
  {
    "name": "Tang et al.",
    "url": "https://www.sciencedirect.com/science/article/pii/S0968090X12000022",
    "description": "\"Ridership effects of real-time bus information system: A case study in the City of Chicago\" - Experiment in Chicago, IL showed modest increase in ridership when riders had access to real-time info via text message or email."
  },
  {
    "name": "Kay et al.",
    "url": "http://faculty.washington.edu/jhullman/busUncertaintyVis.pdf",
    "description": "\"When(ish) is my bus? User-centered Visualizations of Uncertainty in Everyday, Mobile Predictive Systems\" - Paper attempts to answr the question of \"how do we communicate uncertainty in transit predictions?\" Explains the problem, existing solutions and designs a better interface for letting users know when to arrive at the bus stop."
  },
  {
    "name": "Watkins et al.",
    "url": "https://www.sciencedirect.com/science/article/pii/S0965856411001030",
    "description": "\"Where Is My Bus? Impact of mobile real-time information on the perceived and actual wait time of transit riders\" - Experiments in Seattl,e WA showed that riders perceived shorter bus wait times when they had access to real-time info via mobile apps."
  },
  {
    "name": "Brakewood et al.",
    "url": "https://www.sciencedirect.com/science/article/pii/S0965856414002146",
    "description": "“An experiment evaluating the impacts of real-time transit information on bus riders in Tampa, Florida” - Controlled experiment in Tampa, FL showed that riders with access to real-time info via mobile apps perceived nearly 2 minute reduction in wait times compared to riders without real-time info.  Riders with real-time info also had decreases in anxiety and frustration and better reception of agency."
  },
  {
    "name": "Brakewood et al.",
    "url": "https://www.sciencedirect.com/science/article/pii/S0968090X15000297",
    "description": "\"The impact of real-time information on bus ridership in New York City\" - Experiment in NYC showed that ridership increased on long routes when real-time info was made available to riders."
  },
  {
    "name": "Brakewood and Watkins",
    "url": "https://www.tandfonline.com/doi/full/10.1080/01441647.2018.1472147?scroll=top&needAccess=true",
    "description": "\"A literature review of the passenger benefits of real-time transit information\" (2018) - An overview of many different research studies looking at the benefits of real-time transit information."
  },
  {
    "name": "Gramacki et al.",
    "url": "2021",
    "description": "\"gtfs2vec - Learning GTFS Embeddings for comparing Public Transport Offer in Microregions\" - Methology using Uber's H3 spatial index and machine learning to identify areas of \"similar\" public transit service quality in cities. Source code available on GitHub."
  },
  {
    "name": "Higgins et al.",
    "url": "https://doi.org/10.5198/jtlu.2022.2012",
    "description": "\"Calculating place-based transit accessibility: Methods, tools and algorithmic dependence\" (2022) - Compares software tools for calculating accessibility by walking and public transit including ArcGIS Pro, Emme, R5R, and OpenTripPlanner."
  },
  {
    "name": "Aemmer et al.",
    "url": "https://link.springer.com/article/10.1007/s12469-022-00291-7",
    "description": "\"Measurement and classification of transit delays using GTFS-RT data\" - Presents a method for extracting transit performance metrics from a General Transit Feed Specification’s Real-Time (GTFS-RT) component and aggregating them to roadway segments. Used with Transit Vis, viewable here."
  },
  {
    "name": "APTA Policy Development and Research",
    "url": "http://www.apta.com/resources/reportsandpublications/Documents/APTA-Embracing-Open-Data.pdf",
    "description": "Public Transportation Embracing Open Data - APTA's discussion of the benefits and challenges of open transit data (a short summary of the below TCRP report)."
  },
  {
    "name": "TCRP Synthesis 115",
    "url": "http://onlinepubs.trb.org/Onlinepubs/tcrp/tcrp_syn_115.pdf",
    "description": "Open Data: Challenges and Opportunities for Transit Agencies (2015) - A comprehensive report looking at the benefits and challenges of open transit data."
  },
  {
    "name": "TCRP Research Report 213: Data Sharing Guidance for Public Transit Agencies – Now and in the Future (2020)",
    "url": "http://www.trb.org/Main/Blurbs/180188.aspx",
    "description": "A report designed to help agencies make decisions about sharing their data, including how to evaluate benefits, costs, and risks."
  },
  {
    "name": "TCRP G-16 Development of Transactional Data Specifications for Demand-Responsive Transportation (In progress)",
    "url": "http://apps.trb.org/cmsfeed/TRBNetProjectDisplay.asp?ProjectID=4120",
    "description": "The objective of this research is to develop technical specifications for transactional data for entities involved in the provision of demand-responsive transportation.  Expected completion date is late 2018."
  },
  {
    "name": "Vendors Providing GTFS Creation/Maintenance services",
    "url": "https://docs.google.com/spreadsheets/u/1/d/1Gc9mu4BIYC8ORpv2IbbVnT3q8VQ3xkeY7Hz068vT_GQ/pubhtml",
    "description": "Add new vendors here."
  },
  {
    "name": "Entities Providing Transportation Software Development Consulting Services",
    "url": "https://docs.google.com/spreadsheets/u/1/d/1n44CNMCK1vt1nyrsdYz-KD_hYxUMNIm6Me69M6ROBIg/pubhtml",
    "description": "Add new entities here."
  }
]
