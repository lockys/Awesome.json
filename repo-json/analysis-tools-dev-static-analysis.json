[
  {
    "name": "abaplint",
    "url": "https://abaplint.org",
    "description": "Linter for ABAP, written in TypeScript."
  },
  {
    "name": "abapOpenChecks",
    "url": "https://docs.abapopenchecks.org",
    "description": "Enhances the SAP Code Inspector with new and customizable checks."
  },
  {
    "name": "Codepeer ©️",
    "url": "http://www.adacore.com/codepeer",
    "description": "Detects run-time and logic errors."
  },
  {
    "name": "Polyspace for Ada ©️",
    "url": "https://www.mathworks.com/products/polyspace-ada.html",
    "description": "Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in source code."
  },
  {
    "name": "SPARK ©️",
    "url": "https://www.adacore.com/about-spark",
    "description": "Static analysis and formal verification toolset for Ada."
  },
  {
    "name": "STOKE",
    "url": "http://stoke.stanford.edu",
    "description": "A programming-language agnostic stochastic optimizer for the x86_64 instruction set. It uses random search to explore the extremely high-dimensional space of all possible program transformations."
  },
  {
    "name": "gawk --lint",
    "url": "https://www.gnu.org/software/gawk/manual/html_node/Options.html",
    "description": "Warns about constructs that are dubious or nonportable to other awk implementations."
  },
  {
    "name": "Astrée ©️",
    "url": "https://www.absint.com/astree/index.htm",
    "description": "Astrée automatically proves the absence of runtime errors and invalid con­current behavior in C/C++ applications. It is sound for floating-point computations, very fast, and exceptionally precise. The analyzer also checks for MISRA/CERT/CWE/Adaptive Autosar coding rules and supports qualification for ISO 26262, DO-178C level A, and other safety standards. Jenkins and Eclipse plugins are available."
  },
  {
    "name": "CBMC",
    "url": "http://www.cprover.org/cbmc",
    "description": "Bounded model-checker for C programs, user-defined assertions, standard assertions, several coverage metric analyses."
  },
  {
    "name": "clang-tidy",
    "url": "http://clang.llvm.org/extra/clang-tidy",
    "description": "clang static analyser."
  },
  {
    "name": "clazy",
    "url": "https://github.com/KDE/clazy",
    "description": "Qt-oriented static code analyzer based on the Clang framework. clazy is a compiler plugin which allows clang to understand Qt semantics. You get more than 50 Qt related compiler warnings, ranging from unneeded memory allocations to misusage of API, including fix-its for automatic refactoring."
  },
  {
    "name": "CMetrics",
    "url": "https://github.com/MetricsGrimoire/CMetrics",
    "description": "Measures size and complexity for C files."
  },
  {
    "name": "CPAchecker",
    "url": "https://cpachecker.sosy-lab.org",
    "description": "A tool for configurable software verification of C programs.  The name CPAchecker was chosen to reflect that the tool is based on the CPA concepts and is used for checking software programs."
  },
  {
    "name": "cppcheck",
    "url": "http://cppcheck.sourceforge.net",
    "description": "Static analysis of C/C++ code."
  },
  {
    "name": "CppDepend ⚠️ ©️",
    "url": "https://www.cppdepend.com",
    "description": "Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity."
  },
  {
    "name": "cpplint",
    "url": "https://github.com/google/styleguide/tree/gh-pages/cpplint",
    "description": "Automated C++ checker that follows Google's style guide."
  },
  {
    "name": "cqmetrics",
    "url": "https://github.com/dspinellis/cqmetrics",
    "description": "Quality metrics for C code."
  },
  {
    "name": "CScout",
    "url": "https://www.spinellis.gr/cscout",
    "description": "Complexity and quality metrics for for C and C preprocessor code."
  },
  {
    "name": "ESBMC",
    "url": "http://esbmc.org",
    "description": "ESBMC is an open source, permissively licensed, context-bounded model checker based on satisfiability modulo theories for the verification of single- and multi-threaded C/C++ programs."
  },
  {
    "name": "flawfinder",
    "url": "http://dwheeler.com/flawfinder/",
    "description": "Finds possible security weaknesses."
  },
  {
    "name": "flint++",
    "url": "https://github.com/JossWhittle/FlintPlusPlus",
    "description": "Cross-platform, zero-dependency port of flint, a lint program for C++ developed and used at Facebook."
  },
  {
    "name": "Frama-C",
    "url": "http://frama-c.com",
    "description": "A sound and extensible static analyzer for C code."
  },
  {
    "name": "Helix QAC ©️",
    "url": "https://www.perforce.com/products/helix-qac",
    "description": "Enterprise-grade static analysis for embedded software. Supports MISRA, CERT, and AUTOSAR coding standards."
  },
  {
    "name": "IKOS",
    "url": "https://github.com/nasa-sw-vnv/ikos",
    "description": "A sound static analyzer for C/C++ code based on LLVM."
  },
  {
    "name": "Joern",
    "url": "https://joern.io",
    "description": "Open-source code analysis platform for C/C++ based on code property graphs"
  },
  {
    "name": "LDRA ©️",
    "url": "https://ldra.com",
    "description": "A tool suite including static analysis (TBVISION) to various standards including MISRA C & C++, JSF++ AV, CWE, CERT C, CERT C++ & Custom Rules."
  },
  {
    "name": "PC-lint ©️",
    "url": "https://www.gimpel.com",
    "description": "Static analysis for C/C++. Runs natively under Windows/Linux/MacOS. Analyzes code for virtually any platform, supporting C11/C18 and C++17."
  },
  {
    "name": "Phasar",
    "url": "https://phasar.org",
    "description": "A LLVM-based static analysis framework which comes with a taint and type state analysis."
  },
  {
    "name": "Polyspace Bug Finder ©️",
    "url": "https://www.mathworks.com/products/polyspace-bug-finder.html",
    "description": "Identifies run-time errors, concurrency issues, security vulnerabilities, and other defects in C and C++ embedded software."
  },
  {
    "name": "Polyspace Code Prover ©️",
    "url": "https://www.mathworks.com/products/polyspace-code-prover.html",
    "description": "Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in C and C++ source code."
  },
  {
    "name": "scan-build",
    "url": "https://clang-analyzer.llvm.org/scan-build.html",
    "description": "Analyzes C/C++ code using LLVM at compile-time."
  },
  {
    "name": "splint",
    "url": "http://splint.org",
    "description": "Annotation-assisted static program checker."
  },
  {
    "name": "SVF",
    "url": "http://svf-tools.github.io/SVF",
    "description": "A static tool that enables scalable and precise interprocedural dependence analysis for C and C++ programs."
  },
  {
    "name": "vera++",
    "url": "https://bitbucket.org/verateam/vera/wiki/Introduction",
    "description": "Vera++ is a programmable tool for verification, analysis and transformation of C++ source code."
  },
  {
    "name": ".NET Analyzers",
    "url": "https://github.com/DotNetAnalyzers",
    "description": "An organization for the development of analyzers (diagnostics and code fixes) using the .NET Compiler Platform."
  },
  {
    "name": "ArchUnitNET",
    "url": "https://github.com/TNG/ArchUnitNET",
    "description": "A C# architecture test library to specify and assert architecture rules in C# for automated testing."
  },
  {
    "name": "Code Analysis Rule Collection ⚠️",
    "url": "https://carc.codeplex.com",
    "description": "Contains a set of diagnostics, code fixes and refactorings built on the Microsoft .NET Compiler Platform \"Roslyn\"."
  },
  {
    "name": "code-cracker",
    "url": "http://code-cracker.github.io",
    "description": "An analyzer library for C# and VB that uses Roslyn to produce refactorings, code analysis, and other niceties."
  },
  {
    "name": "CSharpEssentials ⚠️",
    "url": "https://github.com/DustinCampbell/CSharpEssentials",
    "description": "C# Essentials is a collection of Roslyn diagnostic analyzers, code fixes and refactorings that make it easy to work with C# 6 language features."
  },
  {
    "name": "Designite ©️",
    "url": "http://www.designite-tools.com",
    "description": "Designite supports detection of various architecture, design, and implementation smells, computation of various code quality metrics, and trend analysis."
  },
  {
    "name": "Gendarme",
    "url": "https://www.mono-project.com/docs/tools+libraries/tools/gendarme",
    "description": "Gendarme inspects programs and libraries that contain code in ECMA CIL format (Mono and .NET)."
  },
  {
    "name": "Infer#",
    "url": "https://github.com/microsoft/infersharp",
    "description": "InferSharp (also referred to as Infer#) is an interprocedural and  scalable static code analyzer for C#. Via the capabilities of Facebook's Infer,  this tool detects null pointer dereferences and resource leaks."
  },
  {
    "name": "NDepend ©️",
    "url": "http://www.ndepend.com",
    "description": "Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity."
  },
  {
    "name": "Puma Scan",
    "url": "https://pumasecurity.io",
    "description": "Puma Scan provides real time secure code analysis for common vulnerabilities (XSS, SQLi, CSRF, LDAPi, crypto, deserialization, etc.) as development teams write code in Visual Studio."
  },
  {
    "name": "Roslynator",
    "url": "https://github.com/JosefPihrt/Roslynator",
    "description": "A collection of 190+ analyzers and 190+ refactorings for C#, powered by Roslyn."
  },
  {
    "name": "VSDiagnostics",
    "url": "https://github.com/Vannevelj/VSDiagnostics",
    "description": "A collection of static analyzers based on Roslyn that integrates with VS."
  },
  {
    "name": "Wintellect.Analyzers",
    "url": "https://github.com/Wintellect/Wintellect.Analyzers",
    "description": ".NET Compiler Platform (\"Roslyn\") diagnostic analyzers and code fixes."
  },
  {
    "name": "Astrée ©️",
    "url": "https://www.absint.com/astree/index.htm",
    "description": "Astrée automatically proves the absence of runtime errors and invalid con­current behavior in C/C++ applications. It is sound for floating-point computations, very fast, and exceptionally precise. The analyzer also checks for MISRA/CERT/CWE/Adaptive Autosar coding rules and supports qualification for ISO 26262, DO-178C level A, and other safety standards. Jenkins and Eclipse plugins are available."
  },
  {
    "name": "CBMC",
    "url": "http://www.cprover.org/cbmc",
    "description": "Bounded model-checker for C programs, user-defined assertions, standard assertions, several coverage metric analyses."
  },
  {
    "name": "clang-tidy",
    "url": "http://clang.llvm.org/extra/clang-tidy",
    "description": "clang static analyser."
  },
  {
    "name": "clazy",
    "url": "https://github.com/KDE/clazy",
    "description": "Qt-oriented static code analyzer based on the Clang framework. clazy is a compiler plugin which allows clang to understand Qt semantics. You get more than 50 Qt related compiler warnings, ranging from unneeded memory allocations to misusage of API, including fix-its for automatic refactoring."
  },
  {
    "name": "CMetrics",
    "url": "https://github.com/MetricsGrimoire/CMetrics",
    "description": "Measures size and complexity for C files."
  },
  {
    "name": "cppcheck",
    "url": "http://cppcheck.sourceforge.net",
    "description": "Static analysis of C/C++ code."
  },
  {
    "name": "CppDepend ⚠️ ©️",
    "url": "https://www.cppdepend.com",
    "description": "Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity."
  },
  {
    "name": "cpplint",
    "url": "https://github.com/google/styleguide/tree/gh-pages/cpplint",
    "description": "Automated C++ checker that follows Google's style guide."
  },
  {
    "name": "cqmetrics",
    "url": "https://github.com/dspinellis/cqmetrics",
    "description": "Quality metrics for C code."
  },
  {
    "name": "CScout",
    "url": "https://www.spinellis.gr/cscout",
    "description": "Complexity and quality metrics for for C and C preprocessor code."
  },
  {
    "name": "ESBMC",
    "url": "http://esbmc.org",
    "description": "ESBMC is an open source, permissively licensed, context-bounded model checker based on satisfiability modulo theories for the verification of single- and multi-threaded C/C++ programs."
  },
  {
    "name": "flawfinder",
    "url": "http://dwheeler.com/flawfinder/",
    "description": "Finds possible security weaknesses."
  },
  {
    "name": "flint++",
    "url": "https://github.com/JossWhittle/FlintPlusPlus",
    "description": "Cross-platform, zero-dependency port of flint, a lint program for C++ developed and used at Facebook."
  },
  {
    "name": "Frama-C",
    "url": "http://frama-c.com",
    "description": "A sound and extensible static analyzer for C code."
  },
  {
    "name": "Helix QAC ©️",
    "url": "https://www.perforce.com/products/helix-qac",
    "description": "Enterprise-grade static analysis for embedded software. Supports MISRA, CERT, and AUTOSAR coding standards."
  },
  {
    "name": "IKOS",
    "url": "https://github.com/nasa-sw-vnv/ikos",
    "description": "A sound static analyzer for C/C++ code based on LLVM."
  },
  {
    "name": "Joern",
    "url": "https://joern.io",
    "description": "Open-source code analysis platform for C/C++ based on code property graphs"
  },
  {
    "name": "LDRA ©️",
    "url": "https://ldra.com",
    "description": "A tool suite including static analysis (TBVISION) to various standards including MISRA C & C++, JSF++ AV, CWE, CERT C, CERT C++ & Custom Rules."
  },
  {
    "name": "PC-lint ©️",
    "url": "https://www.gimpel.com",
    "description": "Static analysis for C/C++. Runs natively under Windows/Linux/MacOS. Analyzes code for virtually any platform, supporting C11/C18 and C++17."
  },
  {
    "name": "Phasar",
    "url": "https://phasar.org",
    "description": "A LLVM-based static analysis framework which comes with a taint and type state analysis."
  },
  {
    "name": "Polyspace Bug Finder ©️",
    "url": "https://www.mathworks.com/products/polyspace-bug-finder.html",
    "description": "Identifies run-time errors, concurrency issues, security vulnerabilities, and other defects in C and C++ embedded software."
  },
  {
    "name": "Polyspace Code Prover ©️",
    "url": "https://www.mathworks.com/products/polyspace-code-prover.html",
    "description": "Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in C and C++ source code."
  },
  {
    "name": "scan-build",
    "url": "https://clang-analyzer.llvm.org/scan-build.html",
    "description": "Analyzes C/C++ code using LLVM at compile-time."
  },
  {
    "name": "splint",
    "url": "http://splint.org",
    "description": "Annotation-assisted static program checker."
  },
  {
    "name": "SVF",
    "url": "http://svf-tools.github.io/SVF",
    "description": "A static tool that enables scalable and precise interprocedural dependence analysis for C and C++ programs."
  },
  {
    "name": "vera++",
    "url": "https://bitbucket.org/verateam/vera/wiki/Introduction",
    "description": "Vera++ is a programmable tool for verification, analysis and transformation of C++ source code."
  },
  {
    "name": "clj-kondo",
    "url": "https://github.com/borkdude/clj-kondo",
    "description": "A linter for Clojure code that sparks joy. It informs you about potential errors while you are typing."
  },
  {
    "name": "coffeelint ⚠️",
    "url": "http://www.coffeelint.org",
    "description": "A style checker that helps keep CoffeeScript code clean and consistent."
  },
  {
    "name": "ameba",
    "url": "https://crystal-ameba.github.io",
    "description": "A static code analysis tool for Crystal."
  },
  {
    "name": "crystal",
    "url": "https://crystal-lang.org",
    "description": "The Crystal compiler has built-in linting functionality."
  },
  {
    "name": "Dart Code Metrics",
    "url": "https://pub.dev/packages/dart_code_metrics",
    "description": "Additional linter for Dart. Reports code metrics, checks for anti-patterns and provides additional rules for Dart analyzer."
  },
  {
    "name": "effective_dart",
    "url": "https://pub.dev/packages/effective_dart",
    "description": "Linter rules corresponding to the guidelines in Effective Dart"
  },
  {
    "name": "lint",
    "url": "https://github.com/passsy/dart-lint",
    "description": "An opinionated, community-driven set of lint rules for Dart and Flutter projects. Like pedantic but stricter"
  },
  {
    "name": "Linter for dart",
    "url": "https://dart-lang.github.io/linter",
    "description": "Style linter for Dart."
  },
  {
    "name": "Fix Insight ©️",
    "url": "https://www.tmssoftware.com/site/fixinsight.asp",
    "description": "A free IDE Plugin for static code analysis. A Pro edition includes a command line tool for automation purposes."
  },
  {
    "name": "Pascal Analyzer ©️",
    "url": "https://peganza.com/products_pal.html",
    "description": "A static code analysis tool with numerous reports. A free Lite version is available with limited reporting."
  },
  {
    "name": "Pascal Expert ©️",
    "url": "https://peganza.com/products_pex.html",
    "description": "IDE plugin for code analysis. Includes a subset of Pascal Analyzer reporting capabilities and is available for Delphi versions 2007 and later."
  },
  {
    "name": "D-scanner",
    "url": "https://github.com/dlang-community/D-Scanner",
    "description": "D-Scanner is a tool for analyzing D source code."
  },
  {
    "name": "credo",
    "url": "https://github.com/rrrene/credo",
    "description": "A static code analysis tool with a focus on code consistency and teaching."
  },
  {
    "name": "dialyxir",
    "url": "https://github.com/jeremyjh/dialyxir",
    "description": "Mix tasks to simplify use of Dialyzer in Elixir projects."
  },
  {
    "name": "sobelow",
    "url": "https://github.com/nccgroup/sobelow",
    "description": "Security-focused static analysis for the Phoenix Framework."
  },
  {
    "name": "elm-analyse ⚠️",
    "url": "https://stil4m.github.io/elm-analyse",
    "description": "A tool that allows you to analyse your Elm code, identify deficiencies and apply best practices."
  },
  {
    "name": "elm-review",
    "url": "https://package.elm-lang.org/packages/jfmengels/elm-review/latest",
    "description": "Analyzes whole Elm projects, with a focus on shareable and custom rules written in Elm that add guarantees the Elm compiler doesn't give you."
  },
  {
    "name": "dialyzer",
    "url": "https://erlang.org/doc/man/dialyzer.html",
    "description": "The DIALYZER, a DIscrepancy AnaLYZer for ERlang programs. Dialyzer is a static analysis tool that identifies software discrepancies,  such as definite type errors, code that has become dead or unreachable  because of programming error, and unnecessary tests,  in single Erlang modules or entire (sets of) applications."
  },
  {
    "name": "elvis",
    "url": "https://github.com/inaka/elvis",
    "description": "Erlang Style Reviewer."
  },
  {
    "name": "Primitive Erlang Security Tool (PEST)",
    "url": "https://github.com/okeuday/pest",
    "description": "A tool to do a basic scan of Erlang source code and report any function calls that may cause Erlang source code to be insecure."
  },
  {
    "name": "FSharpLint",
    "url": "http://fsprojects.github.io/FSharpLint",
    "description": "Lint tool for F#."
  },
  {
    "name": "i-Code CNES for Fortran ⚠️",
    "url": "https://github.com/lequal/i-CodeCNES",
    "description": "An open source static code analysis tool for Fortran 77, Fortran 90 and Shell."
  },
  {
    "name": "aligncheck",
    "url": "https://gitlab.com/opennota/check",
    "description": "Find inefficiently packed structs."
  },
  {
    "name": "bodyclose",
    "url": "https://github.com/timakin/bodyclose",
    "description": "Checks whether HTTP response body is closed."
  },
  {
    "name": "deadcode",
    "url": "https://github.com/tsenart/deadcode",
    "description": "Finds unused code."
  },
  {
    "name": "dingo-hunter ⚠️",
    "url": "https://github.com/nickng/dingo-hunter",
    "description": "Static analyser for finding deadlocks in Go."
  },
  {
    "name": "dogsled",
    "url": "https://github.com/alexkohler/dogsled",
    "description": "Finds assignments/declarations with too many blank identifiers."
  },
  {
    "name": "dupl",
    "url": "https://github.com/mibk/dupl",
    "description": "Reports potentially duplicated code."
  },
  {
    "name": "errcheck",
    "url": "https://github.com/kisielk/errcheck",
    "description": "Check that error return values are used."
  },
  {
    "name": "errwrap",
    "url": "https://github.com/fatih/errwrap",
    "description": "Wrap and fix Go errors with the new %w verb directive.  This tool analyzes fmt.Errorf() calls and reports calls that contain a verb directive that  is different than the new %w verb directive introduced in Go v1.13.  It's also capable of rewriting calls to use the new %w wrap verb directive."
  },
  {
    "name": "flen",
    "url": "https://github.com/lafolle/flen",
    "description": "Get info on length of functions in a Go package."
  },
  {
    "name": "go tool vet --shadow",
    "url": "https://golang.org/cmd/vet#hdr-Shadowed_variables",
    "description": "Reports variables that may have been unintentionally shadowed."
  },
  {
    "name": "go vet",
    "url": "https://golang.org/cmd/vet",
    "description": "Examines Go source code and reports suspicious."
  },
  {
    "name": "go-consistent ⚠️",
    "url": "https://github.com/Quasilyte/go-consistent",
    "description": "Analyzer that helps you to make your Go programs more consistent."
  },
  {
    "name": "go-critic",
    "url": "https://github.com/go-critic/go-critic",
    "description": "Go source code linter that maintains checks which are currently not implemented in other linters."
  },
  {
    "name": "go/ast",
    "url": "https://golang.org/pkg/go/ast",
    "description": "Package ast declares the types used to represent syntax trees for Go packages."
  },
  {
    "name": "gochecknoglobals",
    "url": "https://github.com/leighmcculloch/gochecknoglobals",
    "description": "Checks that no globals are present."
  },
  {
    "name": "goconst",
    "url": "https://github.com/jgautheron/goconst",
    "description": "Finds repeated strings that could be replaced by a constant."
  },
  {
    "name": "gocyclo",
    "url": "https://github.com/fzipp/gocyclo",
    "description": "Calculate cyclomatic complexities of functions in Go source code."
  },
  {
    "name": "gofmt -s",
    "url": "https://golang.org/cmd/gofmt",
    "description": "Checks if the code is properly formatted and could not be further simplified."
  },
  {
    "name": "goimports",
    "url": "https://pkg.go.dev/golang.org/x/tools/cmd/goimports",
    "description": "Checks missing or unreferenced package imports."
  },
  {
    "name": "GolangCI-Lint",
    "url": "https://golangci-lint.run",
    "description": "Alternative to Go Meta Linter: GolangCI-Lint is a linters aggregator."
  },
  {
    "name": "golint",
    "url": "https://github.com/golang/lint",
    "description": "Prints out coding style mistakes in Go source code."
  },
  {
    "name": "goroutine-inspect",
    "url": "https://github.com/linuxerwang/goroutine-inspect",
    "description": "An interactive tool to analyze Golang goroutine dump."
  },
  {
    "name": "gosec (gas)",
    "url": "https://securego.io",
    "description": "Inspects source code for security problems by scanning the Go AST."
  },
  {
    "name": "gotype",
    "url": "https://pkg.go.dev/golang.org/x/tools/cmd/gotype",
    "description": "Syntactic and semantic analysis similar to the Go compiler."
  },
  {
    "name": "ineffassign",
    "url": "https://github.com/gordonklaus/ineffassign",
    "description": "Detect ineffectual assignments in Go code."
  },
  {
    "name": "interfacer ⚠️",
    "url": "https://github.com/mvdan/interfacer",
    "description": "Suggest narrower interfaces that can be used."
  },
  {
    "name": "lll ⚠️",
    "url": "https://github.com/walle/lll",
    "description": "Report long lines."
  },
  {
    "name": "maligned",
    "url": "https://github.com/mdempsky/maligned",
    "description": "Detect structs that would take less memory if their fields were sorted."
  },
  {
    "name": "misspell",
    "url": "https://github.com/client9/misspell",
    "description": "Finds commonly misspelled English words."
  },
  {
    "name": "nakedret",
    "url": "https://github.com/alexkohler/nakedret",
    "description": "Finds naked returns."
  },
  {
    "name": "nargs",
    "url": "https://github.com/alexkohler/nargs",
    "description": "Finds unused arguments in function declarations."
  },
  {
    "name": "prealloc",
    "url": "https://github.com/alexkohler/prealloc",
    "description": "Finds slice declarations that could potentially be preallocated."
  },
  {
    "name": "revive",
    "url": "https://revive.run",
    "description": "Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint."
  },
  {
    "name": "safesql",
    "url": "https://github.com/stripe/safesql",
    "description": "Static analysis tool for Golang that protects against SQL injections."
  },
  {
    "name": "staticcheck",
    "url": "https://staticcheck.io",
    "description": "Go static analysis that specialises in finding bugs, simplifying code and improving performance."
  },
  {
    "name": "structcheck",
    "url": "https://gitlab.com/opennota/check",
    "description": "Find unused struct fields."
  },
  {
    "name": "test",
    "url": "http://golang.org/pkg/testing",
    "description": "Show location of test failures from the stdlib testing module."
  },
  {
    "name": "unconvert ⚠️",
    "url": "https://github.com/mdempsky/unconvert",
    "description": "Detect redundant type conversions."
  },
  {
    "name": "unparam",
    "url": "https://github.com/mvdan/unparam",
    "description": "Find unused function parameters."
  },
  {
    "name": "varcheck",
    "url": "https://gitlab.com/opennota/check",
    "description": "Find unused global variables and constants."
  },
  {
    "name": "wsl",
    "url": "https://github.com/bombsimon/wsl",
    "description": "Enforces empty lines at the right places."
  },
  {
    "name": "CodeNarc",
    "url": "https://codenarc.github.io/CodeNarc",
    "description": "A static analysis tool for Groovy source code, enabling monitoring and enforcement of many coding standards and best practices."
  },
  {
    "name": "brittany",
    "url": "https://github.com/lspitzner/brittany",
    "description": "Haskell source code formatter"
  },
  {
    "name": "HLint",
    "url": "https://github.com/ndmitchell/hlint",
    "description": "HLint is a tool for suggesting possible improvements to Haskell code."
  },
  {
    "name": "Stan",
    "url": "https://kowainik.github.io/projects/stan",
    "description": "Stan is a command-line tool for analysing Haskell projects and outputting discovered vulnerabilities in a helpful way with possible solutions for detected problems."
  },
  {
    "name": "Weeder",
    "url": "https://github.com/ocharles/weeder",
    "description": "A tool for detecting dead exports or package imports in Haskell code."
  },
  {
    "name": "Haxe Checkstyle",
    "url": "http://haxecheckstyle.github.io/docs/haxe-checkstyle/home.html",
    "description": "A static analysis tool to help developers write Haxe code that adheres to a coding standard."
  },
  {
    "name": "Checker Framework",
    "url": "https://checkerframework.org",
    "description": "Pluggable type-checking for Java."
  },
  {
    "name": "checkstyle",
    "url": "https://checkstyle.org",
    "description": "Checking Java source code for adherence to a Code Standard or set of validation rules (best practices)."
  },
  {
    "name": "ck",
    "url": "https://github.com/mauricioaniche/ck",
    "description": "Calculates Chidamber and Kemerer object-oriented metrics by processing the source Java files."
  },
  {
    "name": "ckjm",
    "url": "http://www.spinellis.gr/sw/ckjm",
    "description": "Calculates Chidamber and Kemerer object-oriented metrics by processing the bytecode of compiled Java files."
  },
  {
    "name": "CogniCrypt",
    "url": "https://www.eclipse.org/cognicrypt",
    "description": "Checks Java source and byte code for incorrect uses of cryptographic APIs."
  },
  {
    "name": "DesigniteJava ©️",
    "url": "http://www.designite-tools.com/designitejava",
    "description": "DesigniteJava supports detection of various architecture, design, and implementation smells along with computation of various code quality metrics."
  },
  {
    "name": "Doop",
    "url": "https://bitbucket.org/yanniss/doop",
    "description": "Doop is a declarative framework for static analysis of Java/Android programs, centered on pointer analysis algorithms. Doop provides a large variety of analyses and also the surrounding scaffolding to run an analysis end-to-end (fact generation, processing, statistics, etc.)."
  },
  {
    "name": "Error-prone",
    "url": "https://errorprone.info",
    "description": "Catch common Java mistakes as compile-time errors."
  },
  {
    "name": "fb-contrib ⚠️",
    "url": "http://fb-contrib.sourceforge.net",
    "description": "A plugin for FindBugs with additional bug detectors."
  },
  {
    "name": "forbidden-apis",
    "url": "https://github.com/policeman-tools/forbidden-apis",
    "description": "Detects and forbids invocations of specific method/class/field (like reading from a text stream without a charset). Maven/Gradle/Ant compatible."
  },
  {
    "name": "google-java-format",
    "url": "https://github.com/google/google-java-format",
    "description": "Google Style Reformat."
  },
  {
    "name": "HuntBugs ⚠️",
    "url": "https://github.com/amaembo/huntbugs",
    "description": "Bytecode static analyzer tool based on Procyon Compiler Tools aimed to supersede FindBugs."
  },
  {
    "name": "IntelliJ IDEA ©️",
    "url": "https://www.jetbrains.com/idea",
    "description": "Comes bundled with a lot of inspections for Java and Kotlin and includes tools for refactoring, formatting and more."
  },
  {
    "name": "JArchitect ©️",
    "url": "https://www.jarchitect.com",
    "description": "Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity."
  },
  {
    "name": "JBMC",
    "url": "https://www.cprover.org/jbmc",
    "description": "Bounded model-checker for Java (bytecode), verifies user-defined assertions, standard assertions, several coverage metric analyses."
  },
  {
    "name": "NullAway",
    "url": "https://github.com/uber/NullAway",
    "description": "Type-based null-pointer checker with low build-time overhead; an Error Prone plugin."
  },
  {
    "name": "OWASP Dependency Check",
    "url": "https://owasp.org/www-project-dependency-check",
    "description": "Checks dependencies for known, publicly disclosed, vulnerabilities."
  },
  {
    "name": "qulice ⚠️",
    "url": "https://www.qulice.com",
    "description": "Combines a few (pre-configured) static analysis tools (checkstyle, PMD, Findbugs, ...)."
  },
  {
    "name": "Soot",
    "url": "https://soot-oss.github.io/soot",
    "description": "A framework for analyzing and transforming Java and Android applications."
  },
  {
    "name": "Spoon",
    "url": "http://spoon.gforge.inria.fr",
    "description": "Spoon is a metaprogramming library to analyze and transform Java source code (incl Java 9, 10, 11, 12, 13, 14). It parses source files to build a well-designed AST with powerful analysis and transformation API. Can be integrated in Maven and Gradle."
  },
  {
    "name": "SpotBugs",
    "url": "https://spotbugs.github.io",
    "description": "SpotBugs is FindBugs' successor. A tool for static analysis to look for bugs in Java code."
  },
  {
    "name": "aether ⚠️",
    "url": "http://aetherjs.com",
    "description": "Lint, analyze, normalize, transform, sandbox, run, step through, and visualize user JavaScript, in node or the browser."
  },
  {
    "name": "Closure Compiler",
    "url": "https://developers.google.com/closure/compiler",
    "description": "A compiler tool to increase efficiency, reduce size, and provide code warnings in JavaScript files."
  },
  {
    "name": "ClosureLinter ⚠️",
    "url": "https://github.com/google/closure-linter",
    "description": "Ensures that all of your project's JavaScript code follows the guidelines in the Google JavaScript Style Guide. It can also automatically fix many common errors."
  },
  {
    "name": "complexity-report ⚠️",
    "url": "https://github.com/escomplex/complexity-report",
    "description": "Software complexity analysis for JavaScript projects."
  },
  {
    "name": "DeepScan ©️",
    "url": "https://deepscan.io",
    "description": "An analyzer for JavaScript which targets runtime errors and quality issues rather than coding conventions."
  },
  {
    "name": "es6-plato",
    "url": "https://github.com/the-simian/es6-plato",
    "description": "Visualize JavaScript (ES6) source complexity."
  },
  {
    "name": "escomplex ⚠️",
    "url": "https://github.com/jared-stilwell/escomplex",
    "description": "Software complexity analysis of JavaScript-family abstract syntax trees."
  },
  {
    "name": "Esprima",
    "url": "https://esprima.org",
    "description": "ECMAScript parsing infrastructure for multipurpose analysis."
  },
  {
    "name": "flow",
    "url": "https://flow.org",
    "description": "A static type checker for JavaScript."
  },
  {
    "name": "hegel",
    "url": "https://hegel.js.org",
    "description": "A static type checker for JavaScript with a bias on type inference and strong type systems."
  },
  {
    "name": "jshint ℹ️",
    "url": "https://jshint.com/about",
    "description": "Detect errors and potential problems in JavaScript code and enforce your team's coding conventions."
  },
  {
    "name": "JSLint ℹ️",
    "url": "https://github.com/douglascrockford/JSLint",
    "description": "The JavaScript Code Quality Tool."
  },
  {
    "name": "JSPrime ⚠️",
    "url": "http://dpnishant.github.io/jsprime",
    "description": "Static security analysis tool."
  },
  {
    "name": "plato ⚠️",
    "url": "https://github.com/es-analysis/plato",
    "description": "Visualize JavaScript source complexity."
  },
  {
    "name": "retire.js",
    "url": "http://retirejs.github.io/retire.js",
    "description": "Scanner detecting the use of JavaScript libraries with known vulnerabilities."
  },
  {
    "name": "RSLint",
    "url": "http://rslint.org/",
    "description": "A (WIP) JavaScript linter written in Rust designed to be as fast as possible, customizable, and easy to use."
  },
  {
    "name": "tern",
    "url": "https://ternjs.net",
    "description": "A JavaScript code analyzer for deep, cross-editor language support."
  },
  {
    "name": "TypL",
    "url": "https://typl.dev",
    "description": "With TypL, you just write completely standard JS, and the tool figures out your types via powerful inferencing."
  },
  {
    "name": "xo",
    "url": "https://github.com/xojs/xo",
    "description": "Opinionated but configurable ESLint wrapper with lots of goodies included. Enforces strict and readable code."
  },
  {
    "name": "yardstick ⚠️",
    "url": "https://github.com/calmh/yardstick",
    "description": "Javascript code metrics."
  },
  {
    "name": "StaticLint",
    "url": "https://github.com/julia-vscode/StaticLint.jl",
    "description": "Static Code Analysis for Julia"
  },
  {
    "name": "detekt",
    "url": "https://detekt.github.io/detekt",
    "description": "Static code analysis for Kotlin code."
  },
  {
    "name": "diktat",
    "url": "https://www.cqfn.org/diKTat",
    "description": "Strict coding standard for Kotlin and a linter that detects and auto-fixes code smells."
  },
  {
    "name": "ktlint",
    "url": "https://ktlint.github.io",
    "description": "An anti-bikeshedding Kotlin linter with built-in formatter."
  },
  {
    "name": "luacheck ⚠️",
    "url": "https://github.com/mpeterv/luacheck",
    "description": "A tool for linting and static analysis of Lua code."
  },
  {
    "name": "lualint",
    "url": "https://github.com/philips/lualint",
    "description": "lualint performs luac-based static analysis of global variable usage in Lua source code."
  },
  {
    "name": "Luanalysis",
    "url": "https://plugins.jetbrains.com/plugin/14698-luanalysis",
    "description": "An IDE for statically typed Lua development."
  },
  {
    "name": "mlint ©️",
    "url": "https://mathworks.com/help/matlab/ref/mlint.html",
    "description": "Check MATLAB code files for possible problems."
  },
  {
    "name": "DrNim",
    "url": "https://nim-lang.org/docs/drnim.html",
    "description": "DrNim combines the Nim frontend with the Z3 proof engine in order to allow verify / validate software written in Nim."
  },
  {
    "name": "nimfmt",
    "url": "https://github.com/FedericoCeratto/nimfmt",
    "description": "Nim code formatter / linter / style checker"
  },
  {
    "name": "Sys",
    "url": "https://github.com/PLSysSec/sys",
    "description": "A static/symbolic Tool for finding bugs in (browser) code. It uses the LLVM AST to find bugs like uninitialized memory access."
  },
  {
    "name": "VeriFast",
    "url": "https://github.com/verifast/verifast",
    "description": "A tool for modular formal verification of correctness properties of single-threaded and multithreaded  C and Java programs annotated with preconditions and postconditions written in separation logic.  To express rich specifications, the programmer can define inductive datatypes,  primitive recursive pure functions over these datatypes, and abstract separation logic predicates."
  },
  {
    "name": "churn-php",
    "url": "https://github.com/bmitch/churn-php",
    "description": "Helps discover good candidates for refactoring."
  },
  {
    "name": "dephpend",
    "url": "https://github.com/mihaeu/dephpend",
    "description": "Dependency analysis tool."
  },
  {
    "name": "deprecation-detector",
    "url": "https://github.com/sensiolabs-de/deprecation-detector",
    "description": "Finds usages of deprecated (Symfony) code."
  },
  {
    "name": "deptrac",
    "url": "https://github.com/sensiolabs-de/deptrac",
    "description": "Enforce rules for dependencies between software layers."
  },
  {
    "name": "DesignPatternDetector",
    "url": "https://github.com/Halleck45/DesignPatternDetector",
    "description": "Detection of design patterns in PHP code."
  },
  {
    "name": "EasyCodingStandard",
    "url": "https://www.tomasvotruba.com/blog/2017/05/03/combine-power-of-php-code-sniffer-and-php-cs-fixer-in-3-lines",
    "description": "Combine PHP_CodeSniffer and PHP-CS-Fixer."
  },
  {
    "name": "GrumPHP",
    "url": "https://github.com/phpro/grumphp",
    "description": "Checks code on every commit."
  },
  {
    "name": "Mondrian ⚠️",
    "url": "http://trismegiste.github.io/Mondrian",
    "description": "A set of static analysis and refactoring tools which use graph theory."
  },
  {
    "name": "parallel-lint",
    "url": "https://github.com/php-parallel-lint/PHP-Parallel-Lint",
    "description": "This tool checks syntax of PHP files faster than serial check with a fancier output."
  },
  {
    "name": "Parse",
    "url": "https://github.com/psecio/parse",
    "description": "A Static Security Scanner."
  },
  {
    "name": "pdepend",
    "url": "https://pdepend.org",
    "description": "Calculates software metrics like cyclomatic complexity for PHP code."
  },
  {
    "name": "phan",
    "url": "https://github.com/phan/phan/wiki",
    "description": "A modern static analyzer from etsy."
  },
  {
    "name": "PHP Architecture Tester",
    "url": "https://github.com/carlosas/phpat",
    "description": "Easy to use architecture testing tool for PHP."
  },
  {
    "name": "PHP Assumptions ⚠️",
    "url": "https://github.com/rskuipers/php-assumptions",
    "description": "Checks for weak assumptions."
  },
  {
    "name": "PHP Coding Standards Fixer",
    "url": "https://cs.symfony.com",
    "description": "Fixes your code according to standards like PSR-1, PSR-2, and the Symfony standard."
  },
  {
    "name": "PHP Insights",
    "url": "https://phpinsights.com",
    "description": "Instant PHP quality checks from your console. Analysis of code quality and coding style as well as overview of code architecture and its complexity."
  },
  {
    "name": "Php Inspections (EA Extended)",
    "url": "https://plugins.jetbrains.com/plugin/7622-php-inspections-ea-extended-",
    "description": "A Static Code Analyzer for PHP."
  },
  {
    "name": "PHP Refactoring Browser",
    "url": "http://qafoolabs.github.io/php-refactoring-browser",
    "description": "Refactoring helper."
  },
  {
    "name": "PHP Semantic Versioning Checker",
    "url": "https://github.com/tomzx/php-semver-checker",
    "description": "Suggests a next version according to semantic versioning."
  },
  {
    "name": "PHP-Parser",
    "url": "https://github.com/nikic/PHP-Parser",
    "description": "A PHP parser written in PHP."
  },
  {
    "name": "php-speller",
    "url": "https://github.com/mekras/php-speller",
    "description": "PHP spell check library."
  },
  {
    "name": "PHP-Token-Reflection ⚠️",
    "url": "https://github.com/Andrewsville/PHP-Token-Reflection",
    "description": "Library emulating the PHP internal reflection."
  },
  {
    "name": "php7cc ⚠️",
    "url": "https://github.com/sstalle/php7cc",
    "description": "PHP 7 Compatibility Checker."
  },
  {
    "name": "php7mar ⚠️",
    "url": "https://github.com/Alexia/php7mar",
    "description": "Assist developers in porting their code quickly to PHP 7."
  },
  {
    "name": "PHP_CodeSniffer",
    "url": "https://pear.php.net/package/PHP_CodeSniffer",
    "description": "Detects violations of a defined set of coding standards."
  },
  {
    "name": "phpca ⚠️",
    "url": "https://github.com/wapmorgan/PhpCodeAnalyzer",
    "description": "Finds usage of non-built-in extensions."
  },
  {
    "name": "phpcpd",
    "url": "https://github.com/sebastianbergmann/phpcpd",
    "description": "Copy/Paste Detector for PHP code."
  },
  {
    "name": "phpdcd ⚠️",
    "url": "https://github.com/sebastianbergmann/phpdcd",
    "description": "Dead Code Detector (DCD) for PHP code."
  },
  {
    "name": "PhpDependencyAnalysis ⚠️",
    "url": "https://mamuz.github.io/PhpDependencyAnalysis",
    "description": "Builds a dependency graph for a project."
  },
  {
    "name": "PhpDeprecationDetector",
    "url": "https://github.com/wapmorgan/PhpDeprecationDetector",
    "description": "Analyzer of PHP code to search issues with deprecated functionality in newer interpreter versions.  It finds removed objects (functions, variables, constants and ini-directives),  deprecated functions functionality, and usage of forbidden names or tricks (e.g. reserved identifiers in newer versions)."
  },
  {
    "name": "phpdoc-to-typehint",
    "url": "https://github.com/dunglas/phpdoc-to-typehint",
    "description": "Add scalar type hints and return types to existing PHP projects using PHPDoc annotations."
  },
  {
    "name": "phpDocumentor",
    "url": "https://www.phpdoc.org",
    "description": "Analyzes PHP source code to generate documentation."
  },
  {
    "name": "phploc",
    "url": "https://github.com/sebastianbergmann/phploc",
    "description": "A tool for quickly measuring the size and analyzing the structure of a PHP project."
  },
  {
    "name": "PHPMD",
    "url": "https://phpmd.org",
    "description": "Finds possible bugs in your code."
  },
  {
    "name": "PhpMetrics",
    "url": "http://www.phpmetrics.org",
    "description": "Calculates and visualizes various code quality metrics."
  },
  {
    "name": "phpmnd",
    "url": "https://github.com/povils/phpmnd",
    "description": "Helps to detect magic numbers."
  },
  {
    "name": "PHPQA",
    "url": "https://edgedesigncz.github.io/phpqa",
    "description": "A tool for running QA tools (phploc, phpcpd, phpcs, pdepend, phpmd, phpmetrics)."
  },
  {
    "name": "phpqa",
    "url": "https://github.com/jakzal/phpqa",
    "description": "jakzal - Many tools for PHP static analysis in one container."
  },
  {
    "name": "phpqa",
    "url": "https://github.com/jmolivas/phpqa",
    "description": "jmolivas - PHPQA all-in-one Analyzer CLI tool."
  },
  {
    "name": "phpsa ⚠️",
    "url": "https://github.com/ovr/phpsa",
    "description": "Static analysis tool for PHP."
  },
  {
    "name": "PHPStan",
    "url": "https://phpstan.org",
    "description": "PHP Static Analysis Tool - discover bugs in your code without running it!"
  },
  {
    "name": "Progpilot",
    "url": "https://github.com/designsecurity/progpilot",
    "description": "A static analysis tool for security purposes."
  },
  {
    "name": "Psalm",
    "url": "https://psalm.dev",
    "description": "Static analysis tool for finding type errors in PHP applications."
  },
  {
    "name": "Qafoo Quality Analyzer ⚠️",
    "url": "https://github.com/Qafoo/QualityAnalyzer",
    "description": "Visualizes metrics and source code."
  },
  {
    "name": "Tuli",
    "url": "https://github.com/ircmaxell/Tuli",
    "description": "A static analysis engine."
  },
  {
    "name": "twig-lint",
    "url": "https://github.com/asm89/twig-lint",
    "description": "twig-lint is a lint tool for your twig files."
  },
  {
    "name": "WAP",
    "url": "https://securityonline.info/owasp-wap-web-application-protection-project",
    "description": "Tool to detect and correct input validation vulnerabilities in PHP (4.0 or higher) web applications and predicts false positives by combining static analysis and data mining."
  },
  {
    "name": "ZPA",
    "url": "https://felipezorzo.com.br/zpa/",
    "description": "Z PL/SQL Analyzer (ZPA) is an extensible code analyzer for PL/SQL and Oracle SQL. It can be integrated with SonarQube."
  },
  {
    "name": "Perl::Critic",
    "url": "https://metacpan.org/pod/Perl::Critic",
    "description": "Critique Perl source code for best-practices."
  },
  {
    "name": "bandit",
    "url": "https://bandit.readthedocs.io/en/latest",
    "description": "A tool to find common security issues in Python code."
  },
  {
    "name": "bellybutton",
    "url": "https://github.com/hchasestevens/bellybutton",
    "description": "A linting engine supporting custom project-specific rules."
  },
  {
    "name": "Black",
    "url": "https://black.readthedocs.io/en/stable",
    "description": "The uncompromising Python code formatter."
  },
  {
    "name": "Bowler",
    "url": "https://pybowler.io/",
    "description": "Safe code refactoring for modern Python.  Bowler is a refactoring tool for manipulating Python at the syntax tree level.  It enables safe, large scale code modifications while guaranteeing that the  resulting code compiles and runs. It provides both a simple command line interface  and a fluent API in Python for generating complex code modifications in code."
  },
  {
    "name": "cohesion ⚠️",
    "url": "https://github.com/mschwager/cohesion",
    "description": "A tool for measuring Python class cohesion."
  },
  {
    "name": "Dlint",
    "url": "https://github.com/dlint-py/dlint",
    "description": "A tool for ensuring Python code is secure."
  },
  {
    "name": "fixit",
    "url": "https://pypi.org/project/fixit",
    "description": "A framework for creating lint rules and corresponding auto-fixes for source code."
  },
  {
    "name": "InspectorTiger",
    "url": "https://github.com/thg-consulting/it",
    "description": "IT, Inspector Tiger, is a modern python code review tool / framework. It comes with bunch of pre-defined handlers which warns you about improvements and possible bugs. Beside these handlers, you can write your own or use community ones."
  },
  {
    "name": "jedi",
    "url": "https://jedi.readthedocs.io/en/latest",
    "description": "Autocompletion/static analysis library for Python."
  },
  {
    "name": "linty fresh",
    "url": "https://github.com/lyft/linty_fresh",
    "description": "Parse lint errors and report them to Github as comments on a pull request."
  },
  {
    "name": "mccabe",
    "url": "https://pypi.org/project/mccabe",
    "description": "Check McCabe complexity."
  },
  {
    "name": "mypy",
    "url": "http://www.mypy-lang.org",
    "description": "A static type checker that aims to combine the benefits of duck typing and static typing, frequently used with MonkeyType."
  },
  {
    "name": "py-find-injection ⚠️",
    "url": "https://github.com/uber/py-find-injection",
    "description": "Find SQL injection vulnerabilities in Python code."
  },
  {
    "name": "PyCodeQual ©️",
    "url": "https://pycodequ.al",
    "description": "PyCodeQual gives you insights into complexity and bug risks. It adds automatic reviews to your pull requests."
  },
  {
    "name": "pycodestyle",
    "url": "https://pycodestyle.pycqa.org/en/latest",
    "description": "(Formerly pep8) Check Python code against some of the style conventions in PEP 8."
  },
  {
    "name": "pydocstyle",
    "url": "http://www.pydocstyle.org",
    "description": "Check compliance with Python docstring conventions."
  },
  {
    "name": "pyflakes",
    "url": "https://pypi.org/project/pyflakes",
    "description": "Check Python source files for errors."
  },
  {
    "name": "pylint",
    "url": "http://pylint.pycqa.org/en/latest",
    "description": "Looks for programming errors, helps enforcing a coding standard and sniffs for some code smells. It additionally includes pyreverse (an UML diagram generator) and symilar (a similarities checker)."
  },
  {
    "name": "pyre-check",
    "url": "https://pyre-check.org",
    "description": "A fast, scalable type checker for large Python codebases."
  },
  {
    "name": "pyright",
    "url": "https://github.com/Microsoft/pyright",
    "description": "Static type checker for Python, created to address gaps in existing tools like mypy."
  },
  {
    "name": "pyroma",
    "url": "https://github.com/regebro/pyroma",
    "description": "Rate how well a Python project complies with the best practices of the Python packaging ecosystem, and list issues that could be improved."
  },
  {
    "name": "Pysa",
    "url": "https://pyre-check.org/docs/pysa-basics.html",
    "description": "A tool based on Facebook's pyre-check to identify potential security issues in Python code identified with taint analysis."
  },
  {
    "name": "PyT",
    "url": "https://github.com/python-security/pyt",
    "description": "Python Taint ⚠️ - A static analysis tool for detecting security vulnerabilities in Python web applications."
  },
  {
    "name": "pytype",
    "url": "https://google.github.io/pytype",
    "description": "A static type analyzer for Python code."
  },
  {
    "name": "radon",
    "url": "https://radon.readthedocs.io/en/latest",
    "description": "A Python tool that computes various metrics from the source code."
  },
  {
    "name": "unimport",
    "url": "https://unimport.hakancelik.dev",
    "description": "A linter, formatter for finding and removing unused import statements."
  },
  {
    "name": "vulture",
    "url": "https://github.com/jendrikseipp/vulture",
    "description": "Find unused classes, functions and variables in Python code."
  },
  {
    "name": "wemake-python-styleguide",
    "url": "https://wemake-python-stylegui.de",
    "description": "The strictest and most opinionated python linter ever."
  },
  {
    "name": "wily",
    "url": "https://github.com/tonybaloney/wily",
    "description": "A command-line tool for archiving, exploring and graphing the complexity of Python source code."
  },
  {
    "name": "xenon",
    "url": "https://xenon.readthedocs.io",
    "description": "Monitor code complexity using radon."
  },
  {
    "name": "cyclocomp ⚠️",
    "url": "https://github.com/MangoTheCat/cyclocomp",
    "description": "Quantifies the cyclomatic complexity of R functions / expressions."
  },
  {
    "name": "goodpractice ⚠️",
    "url": "http://mangothecat.github.io/goodpractice",
    "description": "Analyses the source code for R packages and provides best-practice recommendations."
  },
  {
    "name": "lintr",
    "url": "https://github.com/jimhester/lintr",
    "description": "Static Code Analysis for R."
  },
  {
    "name": "styler",
    "url": "https://styler.r-lib.org",
    "description": "Formatting of R source code files and pretty-printing of R code."
  },
  {
    "name": "cane ⚠️",
    "url": "https://github.com/square/cane",
    "description": "Code quality threshold checking as part of your build."
  },
  {
    "name": "Fasterer",
    "url": "https://github.com/DamirSvrtan/fasterer",
    "description": "Common Ruby idioms checker."
  },
  {
    "name": "flay",
    "url": "https://ruby.sadi.st/Flay.html",
    "description": "Flay analyzes code for structural similarities."
  },
  {
    "name": "flog",
    "url": "https://ruby.sadi.st/Flog.html",
    "description": "Flog reports the most tortured code in an easy to read pain report. The higher the score, the more pain the code is in."
  },
  {
    "name": "laser ⚠️",
    "url": "https://github.com/michaeledgar/laser",
    "description": "Static analysis and style linter for Ruby code."
  },
  {
    "name": "pelusa",
    "url": "https://github.com/codegram/pelusa",
    "description": "Static analysis Lint-type tool to improve your OO Ruby code."
  },
  {
    "name": "Querly",
    "url": "https://github.com/soutaro/querly",
    "description": "Pattern Based Checking Tool for Ruby."
  },
  {
    "name": "Railroader ⚠️",
    "url": "https://railroader.org",
    "description": "An open source static analysis security vulnerability scanner for Ruby on Rails applications."
  },
  {
    "name": "rails_best_practices",
    "url": "https://rails-bestpractices.com",
    "description": "A code metric tool for Rails projects"
  },
  {
    "name": "reek",
    "url": "https://github.com/troessner/reek",
    "description": "Code smell detector for Ruby."
  },
  {
    "name": "RuboCop",
    "url": "https://docs.rubocop.org/rubocop",
    "description": "A Ruby static code analyzer, based on the community Ruby style guide."
  },
  {
    "name": "Rubrowser",
    "url": "https://github.com/blazeeboy/rubrowser",
    "description": "Ruby classes interactive dependency graph generator."
  },
  {
    "name": "ruby-lint ⚠️",
    "url": "http://code.yorickpeterse.com/ruby-lint/latest",
    "description": "Static code analysis for Ruby."
  },
  {
    "name": "rubycritic",
    "url": "https://github.com/whitesmith/rubycritic",
    "description": "A Ruby code quality reporter."
  },
  {
    "name": "rufo",
    "url": "https://github.com/ruby-formatter/rufo",
    "description": "An opinionated ruby formatter, intended to be used via the command line as a text-editor plugin, to autoformat files on save or on demand."
  },
  {
    "name": "Saikuro ⚠️",
    "url": "https://metricfu.github.io/Saikuro",
    "description": "A Ruby cyclomatic complexity analyzer."
  },
  {
    "name": "SandiMeter ⚠️",
    "url": "https://rubygems.org/gems/sandi_meter",
    "description": "Static analysis tool for checking Ruby code for Sandi Metz' rules."
  },
  {
    "name": "Sorbet",
    "url": "https://sorbet.org",
    "description": "A fast, powerful type checker designed for Ruby."
  },
  {
    "name": "Standard Ruby",
    "url": "https://github.com/testdouble/standard",
    "description": "Ruby Style Guide, with linter & automatic code fixer"
  },
  {
    "name": "Steep",
    "url": "https://github.com/soutaro/steep",
    "description": "Gradual Typing for Ruby."
  },
  {
    "name": "C2Rust",
    "url": "https://c2rust.com",
    "description": "C2Rust helps you migrate C99-compliant code to Rust. The translator (or transpiler) produces unsafe Rust code that closely mirrors the input C code."
  },
  {
    "name": "cargo udeps",
    "url": "https://github.com/est31/cargo-udeps",
    "description": "Find unused dependencies in Cargo.toml. It either prints out a \"unused crates\" line listing the crates,  or it prints out a line saying that no crates were unused."
  },
  {
    "name": "cargo-audit",
    "url": "https://rustsec.org",
    "description": "Audit Cargo.lock for crates with security vulnerabilities reported to the RustSec Advisory Database."
  },
  {
    "name": "cargo-deny",
    "url": "https://embarkstudios.github.io/cargo-deny",
    "description": "A cargo plugin for linting your dependencies. It can be used either as a command line too, a Rust crate, or a Github action for CI. It checks for valid license information, duplicate crates, security vulnerabilities, and more."
  },
  {
    "name": "cargo-expand",
    "url": "https://github.com/dtolnay/cargo-expand",
    "description": "Cargo subcommand to show result of macro expansion  and #[derive] expansion applied to the current crate.  This is a wrapper around a more verbose compiler command."
  },
  {
    "name": "cargo-inspect",
    "url": "https://github.com/mre/cargo-inspect",
    "description": "Inspect Rust code without syntactic sugar to see what the compiler does behind the curtains."
  },
  {
    "name": "cargo-spellcheck",
    "url": "https://github.com/drahnr/cargo-spellcheck",
    "description": "Checks all your documentation for spelling and grammar mistakes  with hunspell (ready) and languagetool (preview)"
  },
  {
    "name": "clippy",
    "url": "https://rust-lang.github.io/rust-clippy",
    "description": "A code linter to catch common mistakes and improve your Rust code."
  },
  {
    "name": "dylint",
    "url": "https://www.trailofbits.com/post/write-rust-lints-without-forking-clippy",
    "description": "A tool for running Rust lints from dynamic libraries. Dylint makes it easy for developers to maintain their own personal lint collections."
  },
  {
    "name": "electrolysis ⚠️",
    "url": "http://kha.github.io/electrolysis",
    "description": "A tool for formally verifying Rust programs by transpiling them into definitions in the Lean theorem prover."
  },
  {
    "name": "herbie ⚠️",
    "url": "https://github.com/mcarton/rust-herbie-lint",
    "description": "Adds warnings or errors to your crate when using a numerically unstable floating point expression."
  },
  {
    "name": "linter-rust ⚠️",
    "url": "https://github.com/AtomLinter/linter-rust",
    "description": "Linting your Rust-files in Atom, using rustc and cargo."
  },
  {
    "name": "MIRAI",
    "url": "https://github.com/facebookexperimental/MIRAI",
    "description": "And abstract interpreter operating on Rust's mid-level intermediate language, and providing warnings based on taint analysis."
  },
  {
    "name": "Prusti",
    "url": "https://www.pm.inf.ethz.ch/research/prusti.html",
    "description": "A static verifier for Rust, based on the Viper verification infrastructure. By default Prusti verifies absence of panics by proving that statements such as unreachable!() and panic!() are unreachable."
  },
  {
    "name": "Rust Language Server",
    "url": "https://github.com/rust-lang-nursery/rls",
    "description": "Supports functionality such as 'goto definition', symbol search, reformatting, and code completion, and enables renaming and refactorings."
  },
  {
    "name": "rust-analyzer",
    "url": "https://rust-analyzer.github.io",
    "description": "Supports functionality such as 'goto definition', type inference, symbol search, reformatting, and code completion, and enables renaming and refactorings."
  },
  {
    "name": "rust-audit",
    "url": "https://github.com/Shnatsel/rust-audit",
    "description": "Audit Rust binaries for known bugs or security vulnerabilities. This works by embedding data about the dependency tree (Cargo.lock) in JSON format into a dedicated linker section of the compiled executable."
  },
  {
    "name": "rustfix",
    "url": "https://github.com/rust-lang/rustfix",
    "description": "Read and apply the suggestions made by rustc (and third-party lints, like those offered by clippy)."
  },
  {
    "name": "rustfmt",
    "url": "https://github.com/rust-lang/rustfmt",
    "description": "A tool for formatting Rust code according to style guidelines."
  },
  {
    "name": "warnalyzer",
    "url": "https://github.com/est31/warnalyzer",
    "description": "Show unused code from multi-crate Rust projects"
  },
  {
    "name": "sqlcheck",
    "url": "https://github.com/jarulraj/sqlcheck",
    "description": "Automatically identify anti-patterns in SQL queries."
  },
  {
    "name": "SQLFluff",
    "url": "https://www.sqlfluff.com/",
    "description": "Multiple dialect SQL linter and formatter."
  },
  {
    "name": "sqlint",
    "url": "https://github.com/purcell/sqlint",
    "description": "Simple SQL linter."
  },
  {
    "name": "tsqllint",
    "url": "https://github.com/tsqllint/tsqllint",
    "description": "T-SQL-specific linter."
  },
  {
    "name": "TSqlRules ⚠️",
    "url": "https://github.com/ashleyglee/TSqlRules",
    "description": "TSQL Static Code Analysis Rules for SQL Server."
  },
  {
    "name": "Visual Expert ©️",
    "url": "https://www.visual-expert.com",
    "description": "Code analysis for PowerBuilder, Oracle, and SQL Server Explores, analyzes, and documents Code"
  },
  {
    "name": "linter ⚠️",
    "url": "https://github.com/HairyFotr/linter",
    "description": "Linter is a Scala static analysis compiler plugin which adds compile-time checks for various possible bugs, inefficiencies, and style problems."
  },
  {
    "name": "Scalastyle",
    "url": "http://www.scalastyle.org",
    "description": "Scalastyle examines your Scala code and indicates potential problems with it."
  },
  {
    "name": "scapegoat",
    "url": "https://github.com/sksamuel/scapegoat",
    "description": "Scala compiler plugin for static code analysis."
  },
  {
    "name": "WartRemover",
    "url": "https://www.wartremover.org",
    "description": "A flexible Scala code linting tool."
  },
  {
    "name": "bashate",
    "url": "https://github.com/openstack/bashate",
    "description": "Code style enforcement for bash programs. The output format aims to follow pycodestyle (pep8) default output format."
  },
  {
    "name": "i-Code CNES for Shell ⚠️",
    "url": "https://github.com/lequal/i-CodeCNES",
    "description": "An open source static code analysis tool for Shell and Fortran (77 and 90)."
  },
  {
    "name": "kmdr",
    "url": "https://kmdr.sh",
    "description": "CLI tool for learning commands from your terminal. kmdr delivers a break down of commands with every attribute explained."
  },
  {
    "name": "sh",
    "url": "https://pkg.go.dev/mvdan.cc/sh/v3",
    "description": "A shell parser, formatter, and interpreter with bash support; includes shfmt"
  },
  {
    "name": "shellcheck",
    "url": "https://www.shellcheck.net",
    "description": "ShellCheck, a static analysis tool that gives warnings and suggestions for bash/sh shell scripts."
  },
  {
    "name": "shellharden",
    "url": "https://github.com/anordal/shellharden",
    "description": "A syntax highlighter and a tool to semi-automate the rewriting of scripts to ShellCheck conformance, mainly focused on quoting."
  },
  {
    "name": "SwiftFormat",
    "url": "https://github.com/nicklockwood/SwiftFormat",
    "description": "A library and command-line formatting tool for reformatting Swift code."
  },
  {
    "name": "SwiftLint",
    "url": "https://realm.github.io/SwiftLint",
    "description": "A tool to enforce Swift style and conventions."
  },
  {
    "name": "Tailor ⚠️",
    "url": "https://sleekbyte.github.io/tailor",
    "description": "A static analysis and lint tool for source code written in Apple's Swift programming language."
  },
  {
    "name": "Frink",
    "url": "http://catless.ncl.ac.uk/Programs/Frink",
    "description": "A Tcl formatting and static check program (can prettify the program, minimise, obfuscate or just sanity check it)."
  },
  {
    "name": "Nagelfar",
    "url": "https://sourceforge.net/projects/nagelfar",
    "description": "A static syntax checker for Tcl."
  },
  {
    "name": "tclchecker",
    "url": "https://github.com/ActiveState/tdk/blob/master/docs/3.0/TDK_3.0_Checker.txt",
    "description": "A static syntax analysis module (as part of TDK)."
  },
  {
    "name": "Codelyzer",
    "url": "http://codelyzer.com",
    "description": "A set of tslint rules for static code analysis of Angular 2 TypeScript projects."
  },
  {
    "name": "tslint-clean-code",
    "url": "https://www.npmjs.com/package/tslint-clean-code",
    "description": "A set of TSLint rules inspired by the Clean Code handbook."
  },
  {
    "name": "tslint-microsoft-contrib",
    "url": "https://github.com/Microsoft/tslint-microsoft-contrib",
    "description": "A set of tslint rules for static code analysis of TypeScript projects maintained by Microsoft."
  },
  {
    "name": "TypeScript Call Graph",
    "url": "https://github.com/whyboris/TypeScript-Call-Graph",
    "description": "CLI to generate an interactive graph of functions and calls from your TypeScript files"
  },
  {
    "name": "TypeScript ESLint",
    "url": "https://github.com/typescript-eslint/typescript-eslint",
    "description": "TypeScript language extension for eslint."
  },
  {
    "name": "Test Design Studio ©️",
    "url": "http://patterson-consulting.net/tds",
    "description": "A full IDE with static code analysis for Micro Focus Unified Functional Testing VBScript-based automated tests."
  },
  {
    "name": "vint",
    "url": "https://github.com/Kuniwak/vint",
    "description": "Fast and Highly Extensible Vim script Language Lint implemented by Python."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "AzSK",
    "url": "https://azsk.azurewebsites.net/",
    "description": "Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM."
  },
  {
    "name": "angr",
    "url": "https://github.com/angr/angr",
    "description": "Binary code analysis tool that also supports symbolic execution."
  },
  {
    "name": "binbloom",
    "url": "https://github.com/quarkslab/binbloom",
    "description": "Analyzes a raw binary firmware and determines features like endianness or the loading address.  The tool is compatible with all architectures."
  },
  {
    "name": "BinSkim",
    "url": "https://github.com/Microsoft/binskim",
    "description": "A binary static analysis tool that provides security and correctness results for Windows portable executables."
  },
  {
    "name": "Black Duck ©️",
    "url": "https://www.blackducksoftware.com",
    "description": "Tool to analyze source code and binaries for reusable code, necessary licenses and potential security aspects."
  },
  {
    "name": "bloaty",
    "url": "https://github.com/google/bloaty",
    "description": "Ever wondered what's making your binary big? Bloaty McBloatface will show you a size profile of the binary so you can understand what's taking up space inside. Bloaty performs a deep analysis of the binary. Using custom ELF, DWARF, and Mach-O parsers,  Bloaty aims to accurately attribute every byte of the binary to the symbol or compileunit that produced it.  It will even disassemble the binary looking for references to anonymous data. F"
  },
  {
    "name": "cwe_checker",
    "url": "https://github.com/fkie-cad/cwe_checker",
    "description": "cwe_checker finds vulnerable patterns in binary executables."
  },
  {
    "name": "Ghidra",
    "url": "https://ghidra-sre.org",
    "description": "A software reverse engineering (SRE) suite of tools developed by NSA's Research Directorate in support of the Cybersecurity mission"
  },
  {
    "name": "IDA Free ©️",
    "url": "https://www.hex-rays.com/products/ida/support/download_freeware",
    "description": "Binary code analysis tool."
  },
  {
    "name": "Jakstab",
    "url": "https://github.com/jkinder/jakstab",
    "description": "Jakstab is an Abstract Interpretation-based, integrated disassembly and static analysis framework for designing analyses on executables and recovering reliable control flow graphs."
  },
  {
    "name": "JEB Decompiler ©️",
    "url": "https://www.pnfsoftware.com/",
    "description": "Decompile and debug binary code. Break down and analyze document files. Android Dalvik, MIPS, ARM, Intel x86, Java, WebAssembly & Ethereum Decompilers."
  },
  {
    "name": "Manalyze",
    "url": "https://github.com/JusticeRage/Manalyze",
    "description": "A static analyzer, which checks portable executables for malicious content."
  },
  {
    "name": "Nauz File Detector",
    "url": "https://github.com/horsicq/Nauz-File-Detector",
    "description": "Static Linker/Compiler/Tool detector for Windows, Linux and MacOS."
  },
  {
    "name": "Twiggy",
    "url": "https://rustwasm.github.io/twiggy",
    "description": "Analyzes a binary's call graph to profile code size. The goal is to slim down wasm binary size."
  },
  {
    "name": "VMware chap",
    "url": "https://github.com/vmware/chap",
    "description": "chap analyzes un-instrumented ELF core files for leaks, memory growth, and corruption.  It is sufficiently reliable that it can be used in automation to catch leaks before  they are committed. As an interactive tool, it helps explain memory growth,  can identify some forms of corruption, and supplements a debugger  by giving the status of various memory locations."
  },
  {
    "name": "zydis",
    "url": "https://zydis.re",
    "description": "Fast and lightweight x86/x86-64 disassembler library"
  },
  {
    "name": "checkmake",
    "url": "https://github.com/mrtazz/checkmake",
    "description": "Linter / Analyzer for Makefiles."
  },
  {
    "name": "portlint",
    "url": "https://www.freebsd.org/cgi/man.cgi?query=portlint&sektion=1&manpath=FreeBSD+8.1-RELEASE+and+Ports",
    "description": "A verifier for FreeBSD and DragonFlyBSD port directories."
  },
  {
    "name": "CSS Stats",
    "url": "https://cssstats.com",
    "description": "Potentially interesting stats on stylesheets."
  },
  {
    "name": "CSScomb",
    "url": "https://github.com/csscomb/csscomb.js",
    "description": "A coding style formatter for CSS. Supports own configurations to make style sheets beautiful and consistent."
  },
  {
    "name": "CSSLint",
    "url": "http://csslint.net",
    "description": "Does basic syntax checking and finds problematic patterns or signs of inefficiency."
  },
  {
    "name": "GraphMyCSS.com",
    "url": "https://graphmycss.com",
    "description": "CSS Specificity Graph Generator."
  },
  {
    "name": "Nu Html Checker",
    "url": "https://validator.github.io/validator/",
    "description": "Helps you catch problems in your HTML/CSS/SVG"
  },
  {
    "name": "Parker ⚠️",
    "url": "https://github.com/katiefenn/parker",
    "description": "Stylesheet analysis tool."
  },
  {
    "name": "PostCSS",
    "url": "https://postcss.org",
    "description": "A tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more."
  },
  {
    "name": "Project Wallace CSS Analyzer",
    "url": "https://www.projectwallace.com",
    "description": "Analytics for CSS, part of Project Wallace."
  },
  {
    "name": "sass-lint ⚠️",
    "url": "https://github.com/sasstools/sass-lint",
    "description": "A Node-only Sass linter for both sass and scss syntax."
  },
  {
    "name": "scsslint",
    "url": "https://github.com/brigade/scss-lint",
    "description": "Linter for SCSS files."
  },
  {
    "name": "Specificity Graph",
    "url": "https://jonassebastianohlsson.com/specificity-graph",
    "description": "CSS Specificity Graph Generator."
  },
  {
    "name": "Stylelint",
    "url": "http://stylelint.io",
    "description": "Linter for SCSS/CSS files."
  },
  {
    "name": "dotenv-linter",
    "url": "https://dotenv-linter.readthedocs.io/en/latest",
    "description": "Linting dotenv files like a charm."
  },
  {
    "name": "dotenv-linter (Rust)",
    "url": "https://dotenv-linter.github.io/#/",
    "description": "Lightning-fast linter for .env files. Written in Rust"
  },
  {
    "name": "gixy ⚠️",
    "url": "https://github.com/yandex/gixy",
    "description": "A tool to analyze Nginx configuration. The main goal is to prevent misconfiguration and automate flaw detection."
  },
  {
    "name": "ansible-lint",
    "url": "https://docs.ansible.com/ansible-lint",
    "description": "Checks playbooks for practices and behaviour that could potentially be improved."
  },
  {
    "name": "AWS CloudFormation Guard",
    "url": "https://github.com/aws-cloudformation/cloudformation-guard",
    "description": "Check local CloudFormation templates against policy-as-code rules  and generate rules from existing templates."
  },
  {
    "name": "AzSK",
    "url": "https://azsk.azurewebsites.net/",
    "description": "Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM."
  },
  {
    "name": "cfn-lint",
    "url": "https://github.com/awslabs/cfn-python-lint",
    "description": "AWS Labs CloudFormation linter."
  },
  {
    "name": "cfn_nag",
    "url": "https://github.com/stelligent/cfn_nag",
    "description": "A linter for AWS CloudFormation templates."
  },
  {
    "name": "checkov",
    "url": "https://www.checkov.io",
    "description": "Static analysis tool for Terraform files (tf>=v0.12), preventing cloud misconfigs at build time."
  },
  {
    "name": "cookstyle",
    "url": "https://docs.chef.io/cookstyle.html",
    "description": "Cookstyle is a linting tool based on the RuboCop Ruby linting tool for Chef cookbooks."
  },
  {
    "name": "foodcritic",
    "url": "http://www.foodcritic.io",
    "description": "A lint tool that checks Chef cookbooks for common problems."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "Puppet Lint",
    "url": "https://github.com/rodjek/puppet-lint",
    "description": "Check that your Puppet manifests conform to the style guide."
  },
  {
    "name": "terraform-compliance",
    "url": "https://terraform-compliance.com",
    "description": "A lightweight, compliance- and security focused, BDD test framework against Terraform."
  },
  {
    "name": "terrascan",
    "url": "https://github.com/cesar-rodriguez/terrascan",
    "description": "Collection of security and best practice tests for static code analysis of Terraform templates."
  },
  {
    "name": "tflint",
    "url": "https://github.com/wata727/tflint",
    "description": "A Terraform linter for detecting errors that can not be detected by terraform plan."
  },
  {
    "name": "tfsec",
    "url": "https://github.com/tfsec/tfsec",
    "description": "Terraform static analysis tool that prevents potential security issues by checking cloud misconfigurations at build time and directly integrates with the HCL parser for better results. Checks for violations of AWS, Azure and GCP security best practice recommendations."
  },
  {
    "name": "anchore",
    "url": "https://anchore.io",
    "description": "Discover, analyze, and certify container images. A service that analyzes Docker images and applies user-defined acceptance policies  to allow automated container image validation and certification"
  },
  {
    "name": "clair",
    "url": "https://github.com/coreos/clair",
    "description": "Vulnerability Static Analysis for Containers."
  },
  {
    "name": "collector ⚠️",
    "url": "https://github.com/banyanops/collector",
    "description": "Run arbitrary scripts inside containers, and gather useful information."
  },
  {
    "name": "dagda",
    "url": "https://github.com/eliasgranderubio/dagda",
    "description": "Perform static analysis of known vulnerabilities in docker images/containers."
  },
  {
    "name": "Docker Label Inspector ⚠️",
    "url": "https://github.com/garethr/docker-label-inspector",
    "description": "Lint and validate Dockerfile labels."
  },
  {
    "name": "Haskell Dockerfile Linter",
    "url": "https://github.com/lukasmartinelli/hadolint",
    "description": "A smarter Dockerfile linter that helps you build best practice Docker images."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "kube-score",
    "url": "https://kube-score.com",
    "description": "Static code analysis of your Kubernetes object definitions."
  },
  {
    "name": "KubeLinter",
    "url": "https://github.com/stackrox/kube-linter",
    "description": "KubeLinter is a static analysis tool that checks Kubernetes YAML files and Helm charts to ensure the applications represented in them adhere to best practices."
  },
  {
    "name": "kubeval",
    "url": "https://kubeval.instrumenta.dev",
    "description": "Validates your Kubernetes configuration files and supports multiple Kubernetes versions."
  },
  {
    "name": "OpenSCAP",
    "url": "https://www.open-scap.org/",
    "description": "Suite of automated audit tools to examine the configuration and  known vulnerabilities following the NIST-certified Security  Content Automation Protocol (SCAP)."
  },
  {
    "name": "Qualys Container Security ©️",
    "url": "https://www.qualys.com/apps/container-security",
    "description": "Container native application protection to provide visibility and control of containerized applications."
  },
  {
    "name": "sysdig ©️",
    "url": "https://sysdig.com/",
    "description": "A secure DevOps platform for cloud and container forensics. Built on an open source stack, Sysdig provides Docker image scanning and created Falco, the open standard for runtime threat detection for containers, Kubernetes and cloud."
  },
  {
    "name": "Vuls",
    "url": "https://vuls.io/",
    "description": "Agent-less Linux vulnerability scanner based on information from NVD, OVAL, etc.  It has some container image support, although is not a container specific tool."
  },
  {
    "name": "AzSK",
    "url": "https://azsk.azurewebsites.net/",
    "description": "Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM."
  },
  {
    "name": "Code Climate",
    "url": "https://codeclimate.com",
    "description": "The open and extensible static analysis platform, for everyone."
  },
  {
    "name": "PullRequest ©️",
    "url": "https://www.pullrequest.com",
    "description": "Code review as a service with built-in static analysis.  Increase velocity and reduce technical debt through quality code review by expert engineers backed by best-in-class automation."
  },
  {
    "name": "deno_lint",
    "url": "https://github.com/denoland/deno_lint",
    "description": "Official linter for Deno."
  },
  {
    "name": "gherkin-lint",
    "url": "https://github.com/vsiakka/gherkin-lint",
    "description": "A linter for the Gherkin-Syntax written in Javascript."
  },
  {
    "name": "Bootlint",
    "url": "https://github.com/twbs/bootlint",
    "description": "An HTML linter for Bootstrap projects."
  },
  {
    "name": "grunt-bootlint",
    "url": "https://github.com/twbs/grunt-bootlint",
    "description": "A Grunt wrapper for Bootlint, the HTML linter for Bootstrap projects."
  },
  {
    "name": "gulp-bootlint",
    "url": "https://github.com/tschortsch/gulp-bootlint",
    "description": "A gulp wrapper for Bootlint, the HTML linter for Bootstrap projects."
  },
  {
    "name": "HTML Inspector ⚠️",
    "url": "https://github.com/philipwalton/html-inspector",
    "description": "HTML Inspector is a code quality tool to help you and your team write better markup."
  },
  {
    "name": "HTML Tidy",
    "url": "http://www.html-tidy.org",
    "description": "Corrects and cleans up HTML and XML documents by fixing markup errors and upgrading legacy code to modern standards."
  },
  {
    "name": "HTMLHint",
    "url": "https://htmlhint.com",
    "description": "A Static Code Analysis Tool for HTML."
  },
  {
    "name": "Nu Html Checker",
    "url": "https://validator.github.io/validator/",
    "description": "Helps you catch problems in your HTML/CSS/SVG"
  },
  {
    "name": "Spectral",
    "url": "https://stoplight.io/open-source/spectral",
    "description": "A flexible JSON/YAML linter, without of the box support for OpenAPI v2/v3 and AsyncAPI v2."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "ChkTeX",
    "url": "http://www.nongnu.org/chktex",
    "description": "A linter for LaTex which catches some typographic errors LaTeX oversees."
  },
  {
    "name": "lacheck",
    "url": "https://www.ctan.org/pkg/lacheck",
    "description": "A tool for finding common mistakes in LaTeX documents."
  },
  {
    "name": "TeXLab",
    "url": "https://texlab.netlify.app",
    "description": "A Language Server Protocol implementation for TeX/LaTeX, including lint capabilities."
  },
  {
    "name": "checkmake",
    "url": "https://github.com/mrtazz/checkmake",
    "description": "Linter / Analyzer for Makefiles."
  },
  {
    "name": "portlint",
    "url": "https://www.freebsd.org/cgi/man.cgi?query=portlint&sektion=1&manpath=FreeBSD+8.1-RELEASE+and+Ports",
    "description": "A verifier for FreeBSD and DragonFlyBSD port directories."
  },
  {
    "name": "markdownlint",
    "url": "https://github.com/DavidAnson/markdownlint",
    "description": "Node.js -based style checker and lint tool for Markdown/CommonMark files."
  },
  {
    "name": "mdformat",
    "url": "https://mdformat.rtfd.io",
    "description": "CommonMark compliant Markdown formatter"
  },
  {
    "name": "mdl",
    "url": "https://github.com/mivok/markdownlint",
    "description": "A tool to check Markdown files and flag style issues."
  },
  {
    "name": "remark-lint",
    "url": "https://remark.js.org",
    "description": "Pluggable Markdown code style linter written in JavaScript."
  },
  {
    "name": "Android Lint",
    "url": "http://tools.android.com/tips/lint",
    "description": "Run static analysis on Android projects."
  },
  {
    "name": "android-lint-summary ⚠️",
    "url": "https://passy.github.io/android-lint-summary",
    "description": "Combines lint errors of multiple projects into one output, check lint results of multiple sub-projects at once."
  },
  {
    "name": "FlowDroid",
    "url": "https://github.com/secure-software-engineering/FlowDroid",
    "description": "Static taint analysis tool for Android applications."
  },
  {
    "name": "iblessing",
    "url": "https://www.kitploit.com/2020/08/iblessing-ios-security-exploiting.html",
    "description": "iblessing is an iOS security exploiting toolkit. It can be used for reverse engineering, binary analysis and vulnerability mining."
  },
  {
    "name": "Oversecured ©️",
    "url": "https://oversecured.com",
    "description": "A mobile app vulnerability scanner, designed for security researchers and bug bounty hackers. It also allows integrations into the DevOps process for businesses."
  },
  {
    "name": "paprika ⚠️",
    "url": "https://github.com/GeoffreyHecht/paprika",
    "description": "A toolkit to detect some code smells in analyzed Android applications."
  },
  {
    "name": "qark ⚠️",
    "url": "https://github.com/linkedin/qark",
    "description": "Tool to look for several security related Android application vulnerabilities."
  },
  {
    "name": "redex",
    "url": "https://fbredex.com",
    "description": "Redex provides a framework for reading, writing, and analyzing .dex files, and a set of optimization passes  that use this framework to improve the bytecode. An APK optimized by Redex should be smaller and faster."
  },
  {
    "name": "lockfile-lint",
    "url": "https://github.com/lirantal/lockfile-lint",
    "description": "Lint an npm or yarn lockfile to analyze and detect security issues"
  },
  {
    "name": "njsscan",
    "url": "https://opensecurity.in",
    "description": "A static application testing (SAST) tool that can find insecure code patterns in your node.js applications using simple pattern matcher from libsast and syntax-aware semantic code pattern search tool semgrep."
  },
  {
    "name": "lintian ⚠️",
    "url": "https://lintian.debian.org",
    "description": "Static analysis tool for Debian packages."
  },
  {
    "name": "rpmlint",
    "url": "https://github.com/rpm-software-management/rpmlint",
    "description": "Tool for checking common errors in rpm packages."
  },
  {
    "name": "protolint",
    "url": "https://github.com/yoheimuta/protolint",
    "description": "Pluggable linter and fixer to enforce Protocol Buffer style and conventions."
  },
  {
    "name": "Attackflow Extension ©️",
    "url": "https://www.attackflow.com/Extension",
    "description": "Attackflow plugin for Visual Studio, which enables developers to find critical security bugs at real time in the source code without any prior knowledge."
  },
  {
    "name": "AzSK",
    "url": "https://azsk.azurewebsites.net/",
    "description": "Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM."
  },
  {
    "name": "Gitleaks",
    "url": "https://github.com/zricethezav/gitleaks",
    "description": "A SAST tool for detecting hardcoded secrets like passwords, api keys, and tokens in git repos."
  },
  {
    "name": "iblessing",
    "url": "https://www.kitploit.com/2020/08/iblessing-ios-security-exploiting.html",
    "description": "iblessing is an iOS security exploiting toolkit. It can be used for reverse engineering, binary analysis and vulnerability mining."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "lockfile-lint",
    "url": "https://github.com/lirantal/lockfile-lint",
    "description": "Lint an npm or yarn lockfile to analyze and detect security issues"
  },
  {
    "name": "njsscan",
    "url": "https://opensecurity.in",
    "description": "A static application testing (SAST) tool that can find insecure code patterns in your node.js applications using simple pattern matcher from libsast and syntax-aware semantic code pattern search tool semgrep."
  },
  {
    "name": "Oversecured ©️",
    "url": "https://oversecured.com",
    "description": "A mobile app vulnerability scanner, designed for security researchers and bug bounty hackers. It also allows integrations into the DevOps process for businesses."
  },
  {
    "name": "PT Application Inspector ©️",
    "url": "https://www.parasoft.com/",
    "description": "Identifies code flaws and detects vulnerabilities to prevent web attacks. Demonstrates remote code execution by presenting possible exploits."
  },
  {
    "name": "Qualys Container Security ©️",
    "url": "https://www.qualys.com/apps/container-security",
    "description": "Container native application protection to provide visibility and control of containerized applications."
  },
  {
    "name": "SearchDiggity ©️",
    "url": "https://resources.bishopfox.com/resources/tools/google-hacking-diggity/attack-tools/",
    "description": "Identifies vulnerabilities in open source code projects  hosted on Github, Google Code, MS CodePlex, SourceForge, and more.  The tool comes with over 130 default searches that identify SQL injection,  cross-site scripting (XSS), insecure remote and local file includes, hard-coded passwords, etc."
  },
  {
    "name": "tfsec",
    "url": "https://github.com/tfsec/tfsec",
    "description": "Terraform static analysis tool that prevents potential security issues by checking cloud misconfigurations at build time and directly integrates with the HCL parser for better results. Checks for violations of AWS, Azure and GCP security best practice recommendations."
  },
  {
    "name": "Tsunami Security Scanner",
    "url": "https://github.com/google/tsunami-security-scanner",
    "description": "A general purpose network security scanner with an extensible plugin system for  detecting high severity RCE-like vulnerabilities with high confidence. Custom detectors for finding vulnerabilities (e.g. open APIs) can be added."
  },
  {
    "name": "mythril",
    "url": "https://github.com/ConsenSys/mythril",
    "description": "A symbolic execution framework with batteries included, can be used to find and exploit vulnerabilities in smart contracts automatically."
  },
  {
    "name": "MythX ©️",
    "url": "https://mythx.io",
    "description": "MythX is an easy to use analysis platform which integrates several analysis methods like fuzzing, symbolic execution and static analysis to find vulnerabilities with high precision. It can be integrated with toolchains like Remix or VSCode or called from the command-line."
  },
  {
    "name": "slither",
    "url": "https://github.com/trailofbits/slither",
    "description": "Static analysis framework that runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses."
  },
  {
    "name": "solhint",
    "url": "https://protofire.github.io/solhint",
    "description": "Solhint is an open source project created by https://protofire.io. Its goal is to provide a linting utility for Solidity code."
  },
  {
    "name": "solium",
    "url": "https://ethlint.readthedocs.io/en/latest",
    "description": "Solium is a linter to identify and fix style and security issues in Solidity smart contracts."
  },
  {
    "name": "LibVCS4j",
    "url": "https://github.com/uni-bremen-agst/libvcs4j",
    "description": "A Java library that allows existing tools to analyse the evolution of software systems by providing a common API for different version control systems and issue trackers."
  },
  {
    "name": "ember-template-lint",
    "url": "https://github.com/ember-template-lint/ember-template-lint",
    "description": "Linter for Ember or Handlebars templates."
  },
  {
    "name": "haml-lint",
    "url": "https://github.com/sds/haml-lint",
    "description": "Tool for writing clean and consistent HAML."
  },
  {
    "name": "slim-lint",
    "url": "https://github.com/sds/slim-lint",
    "description": "Configurable tool for analyzing Slim templates."
  },
  {
    "name": "yamllint",
    "url": "https://yamllint.readthedocs.io",
    "description": "Checks YAML files for syntax validity, key repetition and cosmetic problems such as lines length, trailing spaces, and indentation."
  },
  {
    "name": "kics",
    "url": "https://kics.io/",
    "description": "Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible"
  },
  {
    "name": "dennis ⚠️",
    "url": "https://github.com/willkg/dennis",
    "description": "A set of utilities for working with PO files to ease development and improve quality."
  },
  {
    "name": "Vetur",
    "url": "https://marketplace.visualstudio.com/items?itemName=octref.vetur",
    "description": "Vue tooling for VS Code, powered by vls (vue language server). Vetur has support for formatting embedded HTML, CSS, SCSS, JS, TypeScript, and more. Vetur only has a \"whole document formatter\" and cannot format arbitrary ranges."
  },
  {
    "name": "Twiggy",
    "url": "https://rustwasm.github.io/twiggy",
    "description": "Analyzes a binary's call graph to profile code size. The goal is to slim down wasm binary size."
  },
  {
    "name": "After the Deadline ⚠️",
    "url": "https://open.afterthedeadline.com",
    "description": "Spell, style and grammar checker."
  },
  {
    "name": "alex",
    "url": "https://alexjs.com",
    "description": "Catch insensitive, inconsiderate writing"
  },
  {
    "name": "codespell",
    "url": "https://github.com/codespell-project/codespell",
    "description": "Check code for common misspellings."
  },
  {
    "name": "languagetool",
    "url": "https://languagetool.org",
    "description": "Style and grammar checker for 25+ languages. It finds many errors that a simple spell checker cannot detect."
  },
  {
    "name": "misspell-fixer",
    "url": "https://github.com/vlajos/misspell-fixer",
    "description": "Quick tool for fixing common misspellings, typos in source code."
  },
  {
    "name": "Misspelled Words In Context",
    "url": "http://jwilk.net/software/mwic",
    "description": "A spell-checker that groups possible misspellings and shows them in their contexts."
  },
  {
    "name": "proselint",
    "url": "http://proselint.com",
    "description": "A linter for English prose with a focus on writing style instead of grammar."
  },
  {
    "name": "vale",
    "url": "https://docs.errata.ai/vale/about",
    "description": "A syntax-aware linter for prose built with speed and extensibility in mind."
  },
  {
    "name": "write-good",
    "url": "https://github.com/btford/write-good",
    "description": "A linter with a focus on eliminating \"weasel words\"."
  },
  {
    "name": "Spectral",
    "url": "https://stoplight.io/open-source/spectral",
    "description": "A flexible JSON/YAML linter, without of the box support for OpenAPI v2/v3 and AsyncAPI v2."
  },
  {
    "name": "yamllint",
    "url": "https://yamllint.readthedocs.io",
    "description": "Checks YAML files for syntax validity, key repetition and cosmetic problems such as lines length, trailing spaces, and indentation."
  },
  {
    "name": "Clean code linters",
    "url": "https://github.com/collections/clean-code-linters",
    "description": "A collection of linters in github collections"
  },
  {
    "name": "Code Quality Checker Tools For PHP Projects",
    "url": "https://github.com/collections/code-quality-in-php",
    "description": "A collection of PHP linters in github collections"
  },
  {
    "name": "go-tools",
    "url": "https://github.com/dominikh/go-tools",
    "description": "A collection of tools and libraries for working with Go code, including linters and static analysis"
  },
  {
    "name": "linters",
    "url": "https://github.com/mcandre/linters",
    "description": "An introduction to static code analysis"
  },
  {
    "name": "OWASP Source Code Analysis Tools",
    "url": "https://owasp.org/www-community/Source_Code_Analysis_Tools",
    "description": "List of tools maintained by the Open Web Application Security Project"
  },
  {
    "name": "php-static-analysis-tools",
    "url": "https://github.com/exakat/php-static-analysis-tools",
    "description": "A reviewed list of useful PHP static analysis tools"
  },
  {
    "name": "Wikipedia",
    "url": "http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis",
    "description": "A list of tools for static code analysis."
  }
]
