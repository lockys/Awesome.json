[
  {
    "name": "asmtools",
    "url": "https://wiki.openjdk.java.net/display/CodeTools/asmtools",
    "description": "Used to develop tools for the production of Java .class files."
  },
  {
    "name": "Byte Buddy",
    "url": "http://bytebuddy.net",
    "description": "Code generation library creating Java classes at runtime without the help of a compiler."
  },
  {
    "name": "Jitescript",
    "url": "https://github.com/qmx/jitescript",
    "description": "Bytecode generation library similar to BiteScript. "
  },
  {
    "name": "Azul Pauseless Garbage Collection",
    "url": "http://www.azulsystems.com/sites/default/files//images/wp_pgc_zing_v5.pdf",
    "description": "Providing continuous, pauseless operation for Java applications."
  },
  {
    "name": "G1",
    "url": "http://www.oracle.com/technetwork/java/javase/tech/g1-intro-jsp-135488.html",
    "description": "The Garbage-First Garbage Collector."
  },
  {
    "name": "Shenandoah",
    "url": "http://openjdk.java.net/jeps/189",
    "description": "Ultra-Low-Pause-Time Garbage Collector."
  },
  {
    "name": "Gatling",
    "url": "http://gatling.io",
    "description": "Asynchronous non-blocking scenario driven load testing tool for testing HTTP servers."
  },
  {
    "name": "wrk2",
    "url": "https://github.com/giltene/wrk2",
    "description": "A constant throughput, correct latency recording variant of wrk."
  },
  {
    "name": "Ceylon",
    "url": "http://ceylon-lang.org/",
    "description": "Object-oriented, strong and static programming language with an emphasis on immutability, created by Red Hat."
  },
  {
    "name": "Clojure",
    "url": "http://clojure.org/",
    "description": "Dialect of Lisp created by Rich Hickey. Dynamically typed with emphasis on functional programming."
  },
  {
    "name": "Erjang",
    "url": "http://www.erjang.org",
    "description": "A JVM-based Erlang VM."
  },
  {
    "name": "Frege",
    "url": "https://github.com/Frege/frege",
    "description": "Pure functional programming language in the spirit of Haskell."
  },
  {
    "name": "Golo",
    "url": "http://golo-lang.org/",
    "description": "A simple dynamic language that makes extensive usage of invokedynamic."
  },
  {
    "name": "Groovy",
    "url": "http://www.groovy-lang.org/",
    "description": "Optionally typed and dynamic language, with static-typing and static compilation capabilities."
  },
  {
    "name": "Java",
    "url": "http://www.oracle.com/technetwork/java/javase/overview/index.html",
    "description": "General-purpose, concurrent, strongly typed, class-based object-oriented language."
  },
  {
    "name": "JRuby",
    "url": "http://jruby.org",
    "description": "Implementation of the Ruby language on the JVM."
  },
  {
    "name": "JPHP",
    "url": "http://j-php.net",
    "description": "PHP on the Java VM."
  },
  {
    "name": "Jython",
    "url": "http://www.jython.org",
    "description": "Python for the Java Platform."
  },
  {
    "name": "Kawa",
    "url": "http://www.gnu.org/software/kawa/",
    "description": "Extension of the Scheme language, which is in the Lisp family of programming languages."
  },
  {
    "name": "Kotlin",
    "url": "http://kotlinlang.org/",
    "description": "Statically typed programming language for the JVM, Android and the browser."
  },
  {
    "name": "LuaJ",
    "url": "http://www.luaj.org/luaj/3.0/README.html",
    "description": "Java-centric implementation of lua vm built to leverage standard Java features."
  },
  {
    "name": "Nashorn",
    "url": "http://openjdk.java.net/projects/nashorn/",
    "description": "Lightweight high-performance JavaScript runtime in Java with a native JVM."
  },
  {
    "name": "Nodyn",
    "url": "http://nodyn.io/",
    "description": "Node.js compatible framework, running on the JVM powered by the DynJS Javascript runtime."
  },
  {
    "name": "OCaml-Java",
    "url": "http://www.ocamljava.org/",
    "description": "Supports OCaml language v4. Generates plain Java bytecode and have seamless integration with Java."
  },
  {
    "name": "Renjin",
    "url": "http://www.renjin.org/",
    "description": "JVM-based interpreter for the R language for the statistical analysis"
  },
  {
    "name": "Scala",
    "url": "http://www.scala-lang.org/",
    "description": "Strong and static programming language that combine object-oriented and functional programming ideas."
  },
  {
    "name": "Xtend",
    "url": "http://www.eclipse.org/xtend/",
    "description": "Flexible and expressive dialect of Java, which compiles into Java 5 source code."
  },
  {
    "name": "Agrona",
    "url": "https://github.com/real-logic/Agrona",
    "description": "Library of data structures and utility methods that are a common need when building high-performance applications."
  },
  {
    "name": "Apache Arrow",
    "url": "http://arrow.apache.org/",
    "description": "A high-performance cross-system data layer for columnar in-memory analytics."
  },
  {
    "name": "bloofi",
    "url": "https://github.com/lemire/bloofi",
    "description": "Java implementation of multidimensional Bloom filters"
  },
  {
    "name": "caffeine",
    "url": "https://github.com/ben-manes/caffeine",
    "description": "A high performance caching library for Java 8."
  },
  {
    "name": "Chronicle-Bytes",
    "url": "https://github.com/OpenHFT/Chronicle-Bytes",
    "description": "Low level memory access wrappers."
  },
  {
    "name": "clj-ds",
    "url": "https://github.com/krukow/clj-ds",
    "description": "Clojure's data structures modified for use outside of Clojure."
  },
  {
    "name": "java-concurrent-hash-trie-map",
    "url": "https://github.com/romix/java-concurrent-hash-trie-map",
    "description": "Java port of a concurrent trie hash map implementation from Scala collections."
  },
  {
    "name": "fasttuple",
    "url": "https://github.com/boundary/fasttuple",
    "description": "Collections that are laid out adjacently in both on- and off-heap memory."
  },
  {
    "name": "FlatBuffers",
    "url": "http://google.github.io/flatbuffers/",
    "description": "Efficient cross platform serialization library for C++, C#, Go, Java, JavaScript, PHP, and Python."
  },
  {
    "name": "gs-collections",
    "url": "https://github.com/goldmansachs/gs-collections",
    "description": "Goldman Sachs collections framework."
  },
  {
    "name": "high-scale-lib",
    "url": "https://github.com/boundary/high-scale-lib",
    "description": "Cliff Click's High Scale Library."
  },
  {
    "name": "hppc",
    "url": "https://github.com/carrotsearch/hppc",
    "description": "High Performance Primitive Collections."
  },
  {
    "name": "javaslang",
    "url": "http://www.javaslang.io/",
    "description": "Functional Library for Java 8+."
  },
  {
    "name": "JCTools",
    "url": "http://jctools.github.io/JCTools/",
    "description": "Concurrent data structures currently missing from the JDK."
  },
  {
    "name": "Koloboke",
    "url": "https://github.com/OpenHFT/Koloboke",
    "description": "Java Collections til the last breadcrumb of memory and performance."
  },
  {
    "name": "lightweight_trie",
    "url": "https://github.com/bryanduxbury/lightweight_trie",
    "description": "A very memory-efficient trie (radix tree) implementation."
  },
  {
    "name": "low-gc-membuffers",
    "url": "https://github.com/cowtowncoder/low-gc-membuffers",
    "description": "In-memory circular buffers that use direct ByteBuffers to minimize GC overhead."
  },
  {
    "name": "netty-buffers",
    "url": "http://netty.io/wiki/using-as-a-generic-library.html#wiki-h2-1",
    "description": "Memory buffer pool implementation similar to jemalloc."
  },
  {
    "name": "ObjectLayout",
    "url": "http://objectlayout.org",
    "description": "A layout-optimized Java data structure package."
  },
  {
    "name": "ohc",
    "url": "https://github.com/snazy/ohc",
    "description": "Java large off heap cache developed for Apache Cassandra 3.0."
  },
  {
    "name": "okio",
    "url": "https://github.com/square/okio",
    "description": "Modern Java IO library that do clever things to save CPU and memory."
  },
  {
    "name": "PauselessHashMap",
    "url": "https://github.com/giltene/PauselessHashMap",
    "description": "A java.util.HashMap compatible map that won't stall puts or gets when resizing."
  },
  {
    "name": "pcollections",
    "url": "https://github.com/hrldcpr/pcollections",
    "description": "A Persistent Java Collections Library."
  },
  {
    "name": "Quasar",
    "url": "http://www.paralleluniverse.co/quasar/",
    "description": "Lightweight threads and actors for the JVM."
  },
  {
    "name": "Reactive Streams",
    "url": "http://www.reactive-streams.org/",
    "description": "Standard for asynchronous stream processing with non-blocking back pressure."
  },
  {
    "name": "RoaringBitmap",
    "url": "https://github.com/RoaringBitmap/RoaringBitmap",
    "description": "A better compressed bitset in Java."
  },
  {
    "name": "Reactor",
    "url": "http://projectreactor.io/",
    "description": "Reactive data applications on the JVM for Java, Groovy, Clojure and other."
  },
  {
    "name": "RxJava",
    "url": "https://github.com/ReactiveX/RxJava",
    "description": "Library for composing asynchronous and event-based programs using observable sequences."
  },
  {
    "name": "SmoothieMap",
    "url": "https://github.com/OpenHFT/SmoothieMap",
    "description": "java.util.Map impl with worst put latencies more than 100 times smaller than java.util.HashMap."
  },
  {
    "name": "Simple Binary Encoding",
    "url": "https://github.com/real-logic/simple-binary-encoding",
    "description": "High Performance Message Codec."
  },
  {
    "name": "stormpot",
    "url": "https://github.com/chrisvest/stormpot",
    "description": "A fast object pool for the JVM."
  },
  {
    "name": "stream-lib",
    "url": "https://github.com/addthis/stream-lib",
    "description": "A Java library for summarizing data in streams for which it is infeasible to store all events."
  },
  {
    "name": "transducers-java",
    "url": "https://github.com/cognitect-labs/transducers-java",
    "description": "Composable algorithmic transformations independent from the context of their input and output sources."
  },
  {
    "name": "Antlr",
    "url": "http://www.antlr.org/",
    "description": "Parser generator for reading, processing, executing, or translating structured text or binary files."
  },
  {
    "name": "Apache Calcite",
    "url": "http://calcite.apache.org/docs/",
    "description": "Dynamic data management framework and SQL parser plugin."
  },
  {
    "name": "compile-testing",
    "url": "https://github.com/google/compile-testing",
    "description": "Testing tools for javac and annotation processors."
  },
  {
    "name": "derive4j",
    "url": "https://github.com/derive4j/derive4j",
    "description": "Algebraic data types constructors, pattern-matching, morphisms, optics and typeclasses."
  },
  {
    "name": "error-prone",
    "url": "https://github.com/google/error-prone",
    "description": "Catch common Java mistakes as compile-time errors."
  },
  {
    "name": "Graal",
    "url": "http://openjdk.java.net/projects/graal/",
    "description": "New experimental just-in-time compiler for Java that is integrated with the HotSpot virtual machine."
  },
  {
    "name": "javacc",
    "url": "https://javacc.java.net/",
    "description": "Parser generator for use with Java."
  },
  {
    "name": "javaparser",
    "url": "https://github.com/javaparser/javaparser",
    "description": "Java 1.8 Parser and Abstract Syntax Tree for Java."
  },
  {
    "name": "JavaPoet",
    "url": "https://github.com/square/javapoet",
    "description": "A Java API for generating .java source files."
  },
  {
    "name": "jparsec",
    "url": "https://github.com/jparsec/jparsec",
    "description": "Builds mini parsers in pure Java a la Haskell Parsec."
  },
  {
    "name": "MPS",
    "url": "https://www.jetbrains.com/mps/",
    "description": "Design and build extensible DSLs and editors."
  },
  {
    "name": "parboiled",
    "url": "https://github.com/sirthias/parboiled",
    "description": "Parsing of arbitrary input text based on parsing expression grammars."
  },
  {
    "name": "Sulong",
    "url": "https://github.com/graalvm/sulong",
    "description": "LLVM IR interpreter written in Java using Truffle and Graal."
  },
  {
    "name": "Truffle",
    "url": "https://github.com/graalvm/truffle",
    "description": "Framework for implementing languages as simple interpreters."
  },
  {
    "name": "Xtext",
    "url": "https://eclipse.org/Xtext/",
    "description": "Framework for development of programming languages and DSLs."
  },
  {
    "name": "hawtjni",
    "url": "https://github.com/fusesource/hawtjni",
    "description": "A JNI code generator based on the JNI generator used in Eclipse SWT."
  },
  {
    "name": "j2v8",
    "url": "https://github.com/eclipsesource/j2v8",
    "description": "Java API for Google's V8 JavaScript engine."
  },
  {
    "name": "JavaCPP",
    "url": "https://github.com/bytedeco/javacpp",
    "description": "JavaCPP provides efficient access to native C++ inside Java."
  },
  {
    "name": "jnr-ffi",
    "url": "https://github.com/jnr/jnr-ffi",
    "description": "Load native libraries without writing JNI code by hand."
  },
  {
    "name": "jssembly",
    "url": "https://github.com/dvx/jssembly",
    "description": "Execution of native assembly from Java."
  },
  {
    "name": "Project Panama",
    "url": "http://openjdk.java.net/projects/panama/",
    "description": "Enriching the connections between the JVM and APIs used by C programmers."
  },
  {
    "name": "comcast",
    "url": "https://github.com/tylertreat/comcast",
    "description": "Simulating shitty network connections."
  },
  {
    "name": "gor",
    "url": "https://github.com/buger/gor",
    "description": "HTTP traffic replay in real-time."
  },
  {
    "name": "jRT",
    "url": "https://github.com/LatencyUtils/jRT",
    "description": "Measures response time of a java application to socket-based requests."
  },
  {
    "name": "K3PO",
    "url": "https://github.com/k3po/k3po",
    "description": "Create arbitrary network traffic and behavior to certify whether a network endpoint behaves correctly."
  },
  {
    "name": "muxy",
    "url": "https://github.com/mefellows/muxy",
    "description": "Simulating real-world distributed system failures."
  },
  {
    "name": "SimianArmy",
    "url": "https://github.com/Netflix/SimianArmy",
    "description": "Resiliency tool that helps ensure that your applications can tolerate random instance failures."
  },
  {
    "name": "pcap4j",
    "url": "https://github.com/kaitoy/pcap4j",
    "description": "Java library for capturing, crafting, and sending packets using libpcap."
  },
  {
    "name": "pig",
    "url": "https://github.com/rafael-santiago/pig",
    "description": "A Linux packet crafting tool."
  },
  {
    "name": "tcpdump",
    "url": "http://www.tcpdump.org/",
    "description": "Packet analyzer for network traffic capture."
  },
  {
    "name": "tcpflow",
    "url": "https://github.com/simsong/tcpflow",
    "description": "Captures TCP connections flows in a way that is convenient for protocol analysis and debugging."
  },
  {
    "name": "tcpreplay",
    "url": "https://github.com/appneta/tcpreplay",
    "description": "Pcap editing and replay tools."
  },
  {
    "name": "atoptool",
    "url": "http://www.atoptool.nl/",
    "description": "Logging of system and process activity for long-term analysis, highlighting overloaded system."
  },
  {
    "name": "Flame Graphs",
    "url": "http://www.brendangregg.com/flamegraphs.html",
    "description": "Visualization of profiled software, allowing the most frequent code-paths to be identified quickly and accurately."
  },
  {
    "name": "javap",
    "url": "http://docs.oracle.com/javase/8/docs/technotes/tools/unix/javap.html",
    "description": "Disassembles class files into code that reflects the java bytecode."
  },
  {
    "name": "jhat",
    "url": "http://docs.oracle.com/javase/8/docs/technotes/tools/unix/jhat.html",
    "description": "Java Heap Analysis Tool"
  },
  {
    "name": "jinfo",
    "url": "http://docs.oracle.com/javase/8/docs/technotes/tools/unix/jinfo.html",
    "description": "Prints configuration information for a given process."
  },
  {
    "name": "jstack",
    "url": "http://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstack.html",
    "description": "Prints stack traces of threads for a given Java process."
  },
  {
    "name": "jstat",
    "url": "https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html",
    "description": "Monitors GC and compiler statistics in the JVM."
  },
  {
    "name": "hwloc",
    "url": "http://linux.die.net/man/7/hwloc",
    "description": "Reports the structure of the processor, number of cores, hyperthreads and cache size."
  },
  {
    "name": "likwid",
    "url": "https://github.com/RRZE-HPC/likwid",
    "description": "Read hardware performance counters on Intel and AMD processors."
  },
  {
    "name": "numactl",
    "url": "http://linux.die.net/man/8/numactl",
    "description": "Control NUMA policy for processes or shared memory."
  },
  {
    "name": "oprofile",
    "url": "http://oprofile.sourceforge.net/news/",
    "description": "System-wide hardware performance monitoring with easy-to-use interface at low overhead."
  },
  {
    "name": "perf",
    "url": "https://perf.wiki.kernel.org/index.php/Main_Page",
    "description": "Linux profiling with performance counters."
  },
  {
    "name": "perf-tools",
    "url": "https://github.com/brendangregg/perf-tools",
    "description": "Performance analysis tools based on Linux perf_events (aka perf) and ftrace."
  },
  {
    "name": "sysstat",
    "url": "http://sebastien.godard.pagesperso-orange.fr",
    "description": "Performance monitoring tools for Linux."
  },
  {
    "name": "taskset",
    "url": "http://linuxcommand.org/man_pages/taskset1.html",
    "description": "Retrieve or set a processes’s CPU affinity."
  },
  {
    "name": "allocation-instrumenter",
    "url": "https://github.com/google/allocation-instrumenter",
    "description": "Java agent that rewrites bytecode to instrument allocation sites."
  },
  {
    "name": "aprof",
    "url": "https://github.com/Devexperts/aprof",
    "description": "Java memory allocation profiler."
  },
  {
    "name": "BTrace",
    "url": "https://github.com/jbachorik/btrace",
    "description": "a safe, dynamic tracing tool for the Java platform."
  },
  {
    "name": "Chronon",
    "url": "http://chrononsystems.com",
    "description": "Record your entire java program. Replay on any machine."
  },
  {
    "name": "GCViewer",
    "url": "https://github.com/chewiebug/GCViewer",
    "description": "GCViewer is a tool that visualizes verbose GC output."
  },
  {
    "name": "hawkshaw",
    "url": "https://github.com/jClarity/hawkshaw",
    "description": "Tools for tracking down memory / JVM problems & generating predictable-as-possible VM behaviour."
  },
  {
    "name": "HdrHistogram",
    "url": "http://hdrhistogram.github.io/HdrHistogram/",
    "description": "A Histogram that supports recording and analyzing sampled data value counts."
  },
  {
    "name": "hdrhistogram-metrics-reservoir",
    "url": "https://bitbucket.org/marshallpierce/hdrhistogram-metrics-reservoir",
    "description": "A Metrics Reservoir implementation backed by HdrHistogram."
  },
  {
    "name": "heapster",
    "url": "https://github.com/mariusae/heapster",
    "description": "Production heap profiling for the JVM."
  },
  {
    "name": "honest-profiler",
    "url": "https://github.com/RichardWarburton/honest-profiler",
    "description": "Sampling JVM profiler without the safepoint sample bias."
  },
  {
    "name": "jamm",
    "url": "https://github.com/jbellis/jamm",
    "description": "Measure actual object memory use including JVM overhead."
  },
  {
    "name": "Java Mission Control",
    "url": "http://www.oracle.com/technetwork/java/javaseproducts/mission-control/java-mission-control-1998576.html",
    "description": "Continuously collect low level and detailed runtime information enabling after-the-fact incident analysis."
  },
  {
    "name": "java-sizeof",
    "url": "https://github.com/dweiss/java-sizeof",
    "description": "Memory consumption estimator for Java."
  },
  {
    "name": "jitwatch",
    "url": "https://github.com/AdoptOpenJDK/jitwatch",
    "description": "Log analyser / visualiser for Java HotSpot JIT compiler."
  },
  {
    "name": "jHiccup",
    "url": "http://www.azul.com/jhiccup/",
    "description": "jHiccup is an open source tool designed to measure the pauses and stalls associated with an application’s underlying Java runtime platform."
  },
  {
    "name": "jmh",
    "url": "http://openjdk.java.net/projects/code-tools/jmh/",
    "description": "Micro benchmarks written in Java and other languages targetting the JVM."
  },
  {
    "name": "JOL",
    "url": "http://openjdk.java.net/projects/code-tools/jol/",
    "description": "Analyze actual object layout schemes, footprint, and references in JVMs."
  },
  {
    "name": "JProfiler",
    "url": "https://www.ej-technologies.com/products/jprofiler/overview.html",
    "description": "Helps resolve performance bottlenecks, pin down memory leaks and understand threading issues."
  },
  {
    "name": "JVMTI",
    "url": "https://docs.oracle.com/javase/8/docs/technotes/guides/jvmti/",
    "description": "Provide a native API to inspect the state and to control the execution of applications running in the JVM."
  },
  {
    "name": "jvmtop",
    "url": "https://github.com/patric-r/jvmtop",
    "description": "Lightweight console application to monitor running jvms on a machine in top-like manner."
  },
  {
    "name": "MAT",
    "url": "https://eclipse.org/mat/",
    "description": "Java heap analyzer that help find memory leaks and reduce memory consumption."
  },
  {
    "name": "leakcanary",
    "url": "https://github.com/square/leakcanary",
    "description": "A memory leak detection library for Android and Java."
  },
  {
    "name": "metrics",
    "url": "http://metrics.dropwizard.io/",
    "description": "Measure the behavior of critical components in production environment."
  },
  {
    "name": "Overseer",
    "url": "http://www.peternier.com/projects/overseer/overseer.php",
    "description": "Low-Level Hardware Monitoring and Management for Java."
  },
  {
    "name": "perf-map-agent",
    "url": "https://github.com/jrudolph/perf-map-agent",
    "description": "Generate method mappings to use with the linux perf tool."
  },
  {
    "name": "perfj",
    "url": "https://github.com/coderplay/perfj",
    "description": "Linux perf for java programs."
  },
  {
    "name": "polarbear",
    "url": "https://github.com/Cue/polarbear",
    "description": "A tool to help diagnose OutOfMemoryError conditions."
  },
  {
    "name": "Riemann JVM Profiler",
    "url": "https://github.com/riemann/riemann-jvm-profiler",
    "description": "JVM agent which sends function-level profiler telemetry to a Riemann server for analysis, visualization, and storage."
  },
  {
    "name": "statsd-jvm-profiler",
    "url": "https://github.com/etsy/statsd-jvm-profiler",
    "description": "JVM agent profiler that sends profiling data to StatsD."
  },
  {
    "name": "Swiss Java Knife",
    "url": "https://github.com/aragozin/jvm-tools",
    "description": "Small set of tools for JVM troublshooting, monitoring and profiling."
  },
  {
    "name": "Takipi",
    "url": "https://www.takipi.com/",
    "description": "Tells you when and why code breaks in production."
  },
  {
    "name": "YourKit",
    "url": "https://www.yourkit.com/",
    "description": "Fully featured, easy to use, low overhead profiler."
  },
  {
    "name": "Zipkin",
    "url": "https://github.com/openzipkin/zipkin",
    "description": "A distributed tracing system gather timing data for disparate services developed by Twitter."
  },
  {
    "name": "CRaSH",
    "url": "http://www.crashub.org/",
    "description": "The shell for the Java Platform."
  },
  {
    "name": "Drip",
    "url": "https://github.com/ninjudd/drip",
    "description": "Fast JVM launching without the hassle of persistent JVMs."
  },
  {
    "name": "HotswapAgent",
    "url": "https://github.com/HotswapProjects/HotswapAgent",
    "description": "Redefine classes at runtime and skip the redeploy process."
  },
  {
    "name": "jvmkill",
    "url": "https://github.com/airlift/jvmkill",
    "description": "Agent that forcibly terminates the JVM when it is unable to allocate memory or create a thread."
  },
  {
    "name": "Nailgun",
    "url": "http://martiansoftware.com/nailgun/",
    "description": "Nailgun is a client, protocol, and server for running Java programs from the command line without incurring the JVM startup overhead."
  },
  {
    "name": "Avian",
    "url": "https://github.com/ReadyTalk/avian",
    "description": "Lightweight highly portable JVM with an option for AOT compilation."
  },
  {
    "name": "Dalvik",
    "url": "https://source.android.com/devices/tech/dalvik/",
    "description": "Android runtime (ART) is the managed runtime used by applications and some system services on Android."
  },
  {
    "name": "DCEVM",
    "url": "http://dcevm.github.io",
    "description": "Modification of Java HotSwap VM with unlimited support for reloading classes at runtime."
  },
  {
    "name": "HotSpot",
    "url": "http://openjdk.java.net/groups/hotspot/",
    "description": "HotSpot virtual machine maintained and distributed by Oracle Corporation."
  },
  {
    "name": "IBM J9",
    "url": "http://www.ibm.com/developerworks/java/jdk/",
    "description": "JVM developed by IBM."
  },
  {
    "name": "J2ObjC",
    "url": "https://github.com/google/j2objc",
    "description": "Translator from Java source to Objective-C code. Keeps shared code between iOS native apps and Android native apps. "
  },
  {
    "name": "jvm.go",
    "url": "https://github.com/zxh0/jvm.go",
    "description": "A JVM written in Go."
  },
  {
    "name": "ParparVM",
    "url": "https://github.com/codenameone/CodenameOne/tree/master/vm",
    "description": "An Open Source Java bytecode to C translator for iOS native development. Designed as a part of the Codename One WORA for mobile project."
  },
  {
    "name": "RoboVM",
    "url": "https://robovm.com/",
    "description": "Create native iOS and Android apps in Java."
  },
  {
    "name": "Zing",
    "url": "https://www.azul.com/products/zing/",
    "description": "The only JVM that eliminates Java garbage collection pauses for large heap sizes."
  },
  {
    "name": "Zulu",
    "url": "https://www.azul.com/products/zulu/",
    "description": "The only certified multi-platform build of OpenJDK: Free, 100% open source Java."
  },
  {
    "name": "Coordinated Omission problem",
    "url": "https://groups.google.com/forum/#!msg/mechanical-sympathy/icNZJejUHfE/BfDekfBEs_sJ",
    "description": "Discussion on Mechanical Sympathy."
  },
  {
    "name": "False sharing",
    "url": "http://mechanical-sympathy.blogspot.se/2011/07/false-sharing.html",
    "description": "Threads impact the performance of each other while modifying independent variables sharing the same cache line. Martin Thompson."
  },
  {
    "name": "The JVM specification",
    "url": "https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf",
    "description": "The Java Virtual"
  },
  {
    "name": "The Java Memory Model",
    "url": "http://www.cs.umd.edu/%7Epugh/java/memoryModel/",
    "description": "Starting point for discussions of and information concerning the Java Memory Model."
  },
  {
    "name": "The JSR-133 Cookbook for Compiler Writers",
    "url": "http://gee.cs.oswego.edu/dl/jmm/cookbook.html",
    "description": "Unofficial guide to implementing the new Java Memory Model (JMM) specified by JSR-133."
  },
  {
    "name": "Garbage Collection Tuning Guide",
    "url": "http://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/",
    "description": "HotSpot Virtual Machine Garbage Collection Tuning Guide."
  },
  {
    "name": "Safepoints",
    "url": "http://psy-lob-saw.blogspot.se/2014/03/where-is-my-safepoint.html",
    "description": "Where is my safepoint? Nitsan Wakart."
  },
  {
    "name": "Topics in High-Performance Messaging",
    "url": "https://www.informatica.com/downloads/1568_high_perf_messaging_wp/Topics-in-High-Performance-Messaging.htm",
    "description": "Design decisions, experience and constraints explained in high performance messaging systems."
  },
  {
    "name": "concurrency-interest",
    "url": "http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest",
    "description": "Discussion list for JSR-166."
  },
  {
    "name": "hotspot-compiler-dev",
    "url": "http://mail.openjdk.java.net/mailman/listinfo/hotspot-compiler-dev",
    "description": "Technical discussion about the development of the HotSpot bytecode compilers."
  },
  {
    "name": "hotspot-dev",
    "url": "http://mail.openjdk.java.net/mailman/listinfo/hotspot-dev",
    "description": "HotSpot development mailing list."
  },
  {
    "name": "hotspot-gc-dev",
    "url": "http://mail.openjdk.java.net/mailman/listinfo/hotspot-gc-dev",
    "description": "Technical discussion about the development of the HotSpot garbage collectors."
  },
  {
    "name": "mechanical-sympathy",
    "url": "https://groups.google.com/forum/#!forum/mechanical-sympathy",
    "description": "Discussing how to code sympathetically to and measure the underlying stack/platform so good performance can be extracted."
  },
  {
    "name": "Virtual Machine Meetup",
    "url": "http://vmmeetup.github.io/2015/",
    "description": "Venue for discussing the latest research and developments in the area of managed language execution. "
  },
  {
    "name": "Java Profiling from the Ground Up",
    "url": "https://www.youtube.com/watch?v=_6vJyciXkwo",
    "description": "Nitsan Wakart."
  },
  {
    "name": "The Illusion of Execution",
    "url": "https://www.youtube.com/watch?v=3g9R-RVIkOE",
    "description": "Nitsan Wakart."
  },
  {
    "name": "Mythbusting Modern Hardware to Gain 'Mechanical Sympathy'",
    "url": "https://www.youtube.com/watch?v=MC1EKLQ2Wmg",
    "description": "Martin Thompson."
  },
  {
    "name": "Designing for Performance",
    "url": "https://www.youtube.com/watch?v=fDGWWpHlzvw",
    "description": "Martin Thompson."
  },
  {
    "name": "How NOT to Measure Latency",
    "url": "https://www.youtube.com/watch?v=lJ8ydIuPFeU",
    "description": "Gil Tene."
  },
  {
    "name": "JVM Language Summit 2015",
    "url": "http://openjdk.java.net/projects/mlvm/jvmlangsummit/",
    "description": "JVM Language Summit 2015."
  },
  {
    "name": "Bits of advice for VM writers",
    "url": "https://www.youtube.com/watch?v=vzzABBxo44g",
    "description": "Cliff Click."
  },
  {
    "name": "Understanding Java garbage collection ...",
    "url": "https://www.youtube.com/watch?v=_e5hujoTkgY",
    "description": "Gil Tene."
  },
  {
    "name": "Faster Object Arrays",
    "url": "https://www.youtube.com/watch?v=bZuPTCaciLU",
    "description": "Gil Tene at GOTO Conferences."
  },
  {
    "name": "Java Memory Model Pragmatics",
    "url": "https://www.youtube.com/watch?v=TxqsKzxyySo",
    "description": "Aleksey Shipilev."
  },
  {
    "name": "Aleksey Shipilëv",
    "url": "http://shipilev.net/",
    "description": "Developing Oracle/Open JDK/Hotspot and other Java-related technologies."
  },
  {
    "name": "Brian Goetz",
    "url": "https://twitter.com/BrianGoetz",
    "description": "Java Language Architect at Oracle."
  },
  {
    "name": "Ben Christensen",
    "url": "https://twitter.com/benjchristensen",
    "description": "Facebook, Netflix, Apple engineering."
  },
  {
    "name": "Charles Nutter",
    "url": "https://twitter.com/headius",
    "description": "JRuby guy."
  },
  {
    "name": "Cliff Click",
    "url": "http://www.cliffc.org/blog/",
    "description": "Creator of the HotSpot Server Compiler."
  },
  {
    "name": "Dave Dice",
    "url": "https://blogs.oracle.com/dave/",
    "description": "Senior research scientist in the Scalable Synchronization Research Group within Oracle."
  },
  {
    "name": "Doug Lea",
    "url": "http://g.oswego.edu/",
    "description": "Author of the Java memory model."
  },
  {
    "name": "Gil Tene",
    "url": "https://twitter.com/giltene",
    "description": "Azul Systems."
  },
  {
    "name": "John Rose",
    "url": "https://blogs.oracle.com/jrose/",
    "description": "HotSpot developer."
  },
  {
    "name": "Marcus Lagergren",
    "url": "https://twitter.com/lagergren",
    "description": "Java language team alumnus."
  },
  {
    "name": "Mark Reinhold",
    "url": "https://twitter.com/mreinhold",
    "description": "Chief Architect, Java Platform Group, Oracle."
  },
  {
    "name": "Martin Thompson",
    "url": "http://mechanical-sympathy.blogspot.se/",
    "description": "Pasty faced performance gangster."
  },
  {
    "name": "Martijn Verburg",
    "url": "https://twitter.com/karianna",
    "description": "Java Champion."
  },
  {
    "name": "Nitsan Wakart",
    "url": "http://psy-lob-saw.blogspot.se/2014/03/where-is-my-safepoint.html",
    "description": "Azul Systems."
  },
  {
    "name": "Norman Maurer",
    "url": "https://twitter.com/normanmaurer",
    "description": "Netty developer."
  },
  {
    "name": "Todd L. Montgomery",
    "url": "https://twitter.com/toddlmontgomery",
    "description": "Ex-CTO, Ex-NASA researcher, network geek, messaging middleware designer."
  },
  {
    "name": "Viktor Klang",
    "url": "https://twitter.com/viktorklang",
    "description": "Deputy CTO at Typesafe Inc."
  }
]
