[
  {
    "name": "Personal thoughts on the current functional programming bandwagon\nDespite the name, this post actually clarifies some baisc concepts on Functional Programming, explains some of the History of FP and the implementation of FPs features on imperative languages and talks about all the fuss on declarative programming and why it has become so popular in the last few years.",
    "url": "http://www.akitaonrails.com/2015/10/28/personal-thoughts-on-the-current-functional-programming-bandwagon"
  },
  {
    "name": "A Monad in Practicality",
    "url": "http://robotlolita.me/2014/03/20/a-monad-in-practicality-controlling-time.html",
    "description": "Controlling Time"
  },
  {
    "name": "A Monad in Practicality",
    "url": "http://robotlolita.me/2013/12/08/a-monad-in-practicality-first-class-failures.html",
    "description": "First Class Failures"
  },
  {
    "name": "The Algebra of Algebraic Data Types",
    "url": "http://chris-taylor.github.io/blog/2013/02/10/the-algebra-of-algebraic-data-types/"
  },
  {
    "name": "How to desugar Haskell Code",
    "url": "http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html"
  },
  {
    "name": "Functors, Applicatives, And Monads In Pictures",
    "url": "http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html"
  },
  {
    "name": "Monads Made Difficult",
    "url": "http://www.stephendiehl.com/posts/monads.html"
  },
  {
    "name": "Tradeoffs between Unique Types and Monads",
    "url": "http://lambda-the-ultimate.org/node/1180"
  },
  {
    "name": "The implementation of Functional Programming Languages",
    "url": "http://research.microsoft.com/en-us/um/people/simonpj/papers/slpj-book-1987/start.htm",
    "description": "A paper by Simon Paper Jones"
  },
  {
    "name": "Sound and Decidable Type Inference for Functional Dependencies",
    "url": "http://research.microsoft.com/en-us/um/people/simonpj/papers/fd-chr/esop04.pdf",
    "description": "Another very famous paper on Type Inference by the main creator of Haskell and GHC"
  },
  {
    "name": "Template Meta-Programming for Haskell",
    "url": "http://research.microsoft.com/en-us/um/people/simonpj/papers/meta-haskell/meta-haskell.pdf",
    "description": "Paper about generating code at compile-time in Haskell"
  },
  {
    "name": "Why Functional Programming Matters",
    "url": "http://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf"
  },
  {
    "name": "From Higher-Order Logic to Haskell: There and Back Again",
    "url": "http://isabelle.in.tum.de/%7Ehaftmann/pdf/from_hol_to_haskell_haftmann.pdf"
  },
  {
    "name": "Translating Haskell to Isabelle",
    "url": "http://es.cs.uni-kl.de/events/TPHOLs-2007/proceedings/B-178.pdf"
  },
  {
    "name": "nLab",
    "url": "http://ncatlab.org/nlab/show/HomePage",
    "description": "A wiki-lab with articles, discussion and tools from the point of view of category theory, which is the main math behind FP."
  },
  {
    "name": "Haskell/Category Theory",
    "url": "https://en.wikibooks.org/wiki/Haskell/Category_theory",
    "description": "A good overview on Category Theory applied to Haskell from Wikibooks."
  },
  {
    "name": "Haskell Wiki",
    "url": "https://wiki.haskell.org/Haskell"
  },
  {
    "name": "The Little Prover",
    "url": "https://books.google.com.br/books?id=I9E_CgAAQBAJ&pg=PR13#v=onepage&q&f=false",
    "description": "Talks about"
  },
  {
    "name": "Isabelle/HOL",
    "url": "http://isabelle.in.tum.de/doc/tutorial.pdf",
    "description": "A Proof Assistant for Higher-Order Logic - A Book on implementing logical formalisms in Isabelle/HOL."
  },
  {
    "name": "The Little MLer",
    "url": "http://www.ccs.neu.edu/home/matthias/BTML/",
    "description": "A book focused on teaching types, recursive thinking and other important subjects in Standard ML."
  },
  {
    "name": "Introduction to Programming using SML",
    "url": "http://catalogue.pearsoned.co.uk/educator/product/Introduction-to-Programming-using-SML/9780201398205.page",
    "description": "Introduces you to programming design in a very mathematical way."
  },
  {
    "name": "How to Design Programs / Second Edition",
    "url": "http://www.htdp.org/"
  },
  {
    "name": "Introduction to Functional Programming",
    "url": "http://www.amazon.com/Introduction-Functional-Programming-International-Computing/dp/0134841891"
  },
  {
    "name": "Lambda the Ultimate",
    "url": "http://lambda-the-ultimate.org/",
    "description": "Community focused on discussing researches, papers"
  },
  {
    "name": "FP Complete",
    "url": "https://www.fpcomplete.com/",
    "description": "Community focused on helping companies and students on learning and implementing Functional Programming in Haskell. Hosters of one of the most famous Haskell learning centers: School of Haskell"
  },
  {
    "name": "Haskellers",
    "url": "http://www.haskellers.com/",
    "description": "The meeting point for Haskell Programmers"
  },
  {
    "name": "Why dont more programmers use Haskell",
    "url": "https://www.quora.com/Why-dont-more-programmers-use-Haskell"
  },
  {
    "name": "Hidden complexities of tail-call/tail-recursion optimization",
    "url": "http://lambda-the-ultimate.org/classic/message1532.html"
  },
  {
    "name": "Dont fear the Monad",
    "url": "https://www.youtube.com/watch?v=ZhuHCtR3xq8",
    "description": "Explanation on"
  },
  {
    "name": "Haskell is useless",
    "url": "https://www.youtube.com/watch?v=iSmkqocn0oQ",
    "description": "Simon Peyton Jones being"
  },
  {
    "name": "Brian Beckman: The Zen of Stateless State",
    "url": "https://www.youtube.com/watch?v=XxzzJiXHOJs"
  },
  {
    "name": "Erik Meijer: Functional Programming",
    "url": "https://www.youtube.com/watch?v=z0N1aZ6SnBk"
  },
  {
    "name": "Scala Monads: Declutter Your Code With Monadic Design",
    "url": "https://www.youtube.com/watch?v=Mw_Jnn_Y5iA"
  },
  {
    "name": "Philip Wadler and Erik Meijer: On Programming Language Theory and Practice",
    "url": "https://www.youtube.com/watch?v=9SBR_SnrEiI"
  },
  {
    "name": "C9 Lectures: Dr. Erik Meijer",
    "url": "https://www.youtube.com/playlist?list=PLTA0Ta9Qyspa5Nayx0VCHj5AHQJqp1clD",
    "description": "Functional Programming Fundamentals - Series of Lectures from one of the creators of Haskell"
  },
  {
    "name": "Adventure with types in Haskell",
    "url": "https://www.youtube.com/watch?v=6COvD8oynmI&list=RD6COvD8oynmI#t=0",
    "description": "Simon Peyton Jones - Lectures about Haskells strong Type System by Simon Peyton Jones."
  },
  {
    "name": "The Algebra of Algebraic Data Types",
    "url": "https://www.youtube.com/watch?v=YScIPA8RbVE",
    "description": "Very good explanation"
  },
  {
    "name": "Isabelle/HOL",
    "url": "https://www.cl.cam.ac.uk/research/hvg/Isabelle/",
    "description": "Generic proof assistant based on Higher Order Logic"
  },
  {
    "name": "Idris Koans",
    "url": "https://github.com/idris-hackers/idris-koans",
    "description": "Project for teaching Idris. A General Purpose Functional Programming with Dependent Types"
  },
  {
    "name": "Functional Javascript Workshop",
    "url": "https://github.com/timoxley/functional-javascript-workshop",
    "description": "A functional Javascript workshop."
  },
  {
    "name": "J-Bob",
    "url": "https://github.com/the-little-prover/j-bob",
    "description": "The proof assistant from the book The Little Prover"
  },
  {
    "name": "Haskell Must Watch",
    "url": "https://github.com/olehkuchuk/haskell-must-watch",
    "description": "A list of videos, talks and courses on Haskell."
  },
  {
    "name": "Intro SML",
    "url": "http://www.it.dtu.dk/introSML/",
    "description": "Code, corrections and info on the book: Introduction to Programming using SML"
  },
  {
    "name": "Functional Programming In JavaScript",
    "url": "https://github.com/busypeoples/functional-programming-javascript",
    "description": "List of functional programming resources in JavaScript."
  },
  {
    "name": "Functional Programming Jargon",
    "url": "https://github.com/hemanth/functional-programming-jargon",
    "description": "Project for providing a glossary for FP, and make learning FP easier."
  },
  {
    "name": "Simon Peyton Jones",
    "url": "http://research.microsoft.com/en-us/people/simonpj/",
    "description": "One of the creators of the Haskell Language and the Glasgow Haskell Compiler. Microsoft Researcher."
  },
  {
    "name": "Philip Wadler",
    "url": "http://homepages.inf.ed.ac.uk/wadler/",
    "description": "Professor of Theoretical Computer Science at the University of Edinburgh, author of the famous paper Propositions as Types. One of the main people behind Java Generics Types."
  },
  {
    "name": "Matthias Felleisen",
    "url": "http://www.ccs.neu.edu/home/matthias/",
    "description": "Author of many books such as How to Design Programs, and The Little Schemer."
  },
  {
    "name": "Erik Meijer",
    "url": "https://www.linkedin.com/pub/erik-meijer/0/5ba/924",
    "description": "Former software architect for Microsoft, Functional Programming researcher, gives lectures on\tFP, Software Design and Reactive programming."
  },
  {
    "name": "Brian Beckman",
    "url": "https://www.linkedin.com/in/brianbeckman",
    "description": "Former Microsoft Researcher, actual Software Engineer at Amazon. Contributed to implementing FP features to inumerous Microsoft technologies such as C#, LINQ and F#"
  }
]
