[
  {
    "name": "ebpf.io",
    "url": "https://ebpf.io/",
    "description": "A gateway to discover all the basics of eBPF, including a listing of the main related projects and of community resources."
  },
  {
    "name": "Cilium's BPF and XDP Reference Guide",
    "url": "http://docs.cilium.io/en/latest/bpf/",
    "description": "In-depth documentation about most features and aspects of eBPF."
  },
  {
    "name": "BPF Documentation",
    "url": "https://www.kernel.org/doc/html/latest/bpf/index.html",
    "description": "Index for BPF-related documentation coming with the Linux kernel."
  },
  {
    "name": "linux/Documentation/networking/filter.rst",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/filter.rst",
    "description": "eBPF specification (somewhat outdated; information should still be valid, but not exhaustive)."
  },
  {
    "name": "BPF Design Q&A",
    "url": "https://www.kernel.org/doc/html/latest/bpf/bpf_design_QA.html",
    "description": "Frequently Asked Questions on the decisions behind the BPF infrastructure."
  },
  {
    "name": "HOWTO interact with BPF subsystem",
    "url": "https://www.kernel.org/doc/html/latest/bpf/bpf_devel_QA.html",
    "description": "Frequently Asked Questions about contributing to eBPF development."
  },
  {
    "name": "bpf(2)",
    "url": "http://man7.org/linux/man-pages/man2/bpf.2.html",
    "description": "Manual page about the bpf() system call, used to manage BPF programs and maps from userspace."
  },
  {
    "name": "tc-bpf(8)",
    "url": "http://man7.org/linux/man-pages/man8/tc-bpf.8.html",
    "description": "Manual page about using BPF with tc, including example commands and samples of code."
  },
  {
    "name": "bpf-helpers(7) man page",
    "url": "http://man7.org/linux/man-pages/man7/bpf-helpers.7.html",
    "description": "Description of the in-kernel helper functions forming the BPF standard library."
  },
  {
    "name": "bpf.h and you...",
    "url": "https://www.spinics.net/lists/xdp-newbies/msg00179.html"
  },
  {
    "name": "Contextually speaking...",
    "url": "https://www.spinics.net/lists/xdp-newbies/msg00181.html"
  },
  {
    "name": "BPF Verifier Overview",
    "url": "https://www.spinics.net/lists/xdp-newbies/msg00185.html"
  },
  {
    "name": "Part 1: Introduction",
    "url": "https://www.collabora.com/news-and-blog/blog/2019/04/05/an-ebpf-overview-part-1-introduction/"
  },
  {
    "name": "Part 2: Machine & Bytecode",
    "url": "https://www.collabora.com/news-and-blog/blog/2019/04/15/an-ebpf-overview-part-2-machine-and-bytecode/"
  },
  {
    "name": "Part 1: Past, Present, and Future",
    "url": "https://ferrisellis.com/content/ebpf_past_present_future/"
  },
  {
    "name": "Part 2: Syscall and Map Types",
    "url": "https://ferrisellis.com/content/ebpf_syscall_and_maps/"
  },
  {
    "name": "A Tour of Program Types",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-1",
    "description": "A description of all existing hooks for BPF program types, and of their interest."
  },
  {
    "name": "BPF helper functions",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-2",
    "description": "A review of the kernel functions that can be called from within eBPF programs."
  },
  {
    "name": "Communicating with Userspace",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-3",
    "description": "How BPF communicates with userspace - BPF maps, perf events, bpf_trace_printk."
  },
  {
    "name": "Building BPF Programs",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-4",
    "description": "Setting up your environment to build BPF programs."
  },
  {
    "name": "The BPF Bytecode and the BPF Verifier",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-5",
    "description": "How does BPF ensure that programs are safe?"
  },
  {
    "name": "Using BPF to do Packet Transformation",
    "url": "https://blogs.oracle.com/linux/notes-on-bpf-6",
    "description": "One eBPF usage about packet transformation."
  },
  {
    "name": "eBPF and XDP walkthrough and recent (2017) updates",
    "url": "https://fosdem.org/2017/schedule/event/ebpf_xdp/"
  },
  {
    "name": "Advanced programmability and recent updates with tc's cls_bpf",
    "url": "http://netdevconf.org/1.2/session.html?daniel-borkmann",
    "description": "Details on eBPF, its use for tunneling and encapsulation, direct packet access, and more."
  },
  {
    "name": "cls_bpf/eBPF updates since netdev 1.1",
    "url": "http://netdevconf.org/1.2/slides/oct5/07_tcws_daniel_borkmann_2016_tcws.pdf",
    "description": "Part of this tc workshop."
  },
  {
    "name": "On getting tc classifier fully programmable with cls_bpf",
    "url": "http://www.netdevconf.org/1.1/proceedings/slides/borkmann-tc-classifier-cls-bpf.pdf",
    "description": "Introduction to eBPF, including several features (map management, tail calls, verifier). The full paper is also available here."
  },
  {
    "name": "Linux tc and eBPF",
    "url": "https://archive.fosdem.org/2016/schedule/event/ebpf/attachments/slides/1159/export/events/attachments/ebpf/slides/1159/ebpf.pdf"
  },
  {
    "name": "Full-system dynamic tracing on Linux using eBPF and bpftrace",
    "url": "https://www.joyfulbikeshedding.com/blog/2019-01-31-full-system-dynamic-tracing-on-linux-using-ebpf-and-bpftrace.html",
    "description": "A detailed introduction to tracing with eBPF, from listing the available trace points to running bpftrace programs."
  },
  {
    "name": "Meet-cute between eBPF and Kernel Tracing",
    "url": "http://www.slideshare.net/vh21/meet-cutebetweenebpfandtracing",
    "description": "Kprobes, uprobes, ftrace."
  },
  {
    "name": "Linux Kernel Tracing",
    "url": "http://www.slideshare.net/vh21/linux-kernel-tracing",
    "description": "Systemtap, Kernelshark, trace-cmd, LTTng, perf-tool, ftrace, hist-trigger, perf, function tracer, tracepoint, kprobe/uprobe, and more."
  },
  {
    "name": "Brendan Gregg's blog, and in particular Linux BPF Superpowers article.",
    "url": "http://www.brendangregg.com/blog/2016-03-05/linux-bpf-superpowers.html"
  },
  {
    "name": "XDP − eXpress Data Path, Intro and future use-cases",
    "url": "http://people.netfilter.org/hawk/presentations/xdp2016/xdp_intro_and_use_cases_sep2016.pdf",
    "description": "Linux Kernel's fight against DPDK. Future plans (as of this writing) for XDP and comparison with DPDK."
  },
  {
    "name": "Network Performance Workshop",
    "url": "http://netdevconf.org/1.2/session.html?jesper-performance-workshop",
    "description": "Additional hints about XDP internals and expected evolution."
  },
  {
    "name": "XDP – eXpress Data Path, Used for DDoS protection",
    "url": "http://people.netfilter.org/hawk/presentations/OpenSourceDays2017/XDP_DDoS_protecting_osd2017.pdf",
    "description": "Details and use cases about XDP, with benchmark results, and code snippets for benchmarking as well as for basic DDoS protection with eBPF/XDP (based on an IP blacklisting scheme)."
  },
  {
    "name": "Memory vs. Networking, Provoking and fixing memory bottlenecks",
    "url": "http://people.netfilter.org/hawk/presentations/MM-summit2017/MM-summit2017-JesperBrouer.pdf",
    "description": "Advanced details about current memory issues faced by XDP developers."
  },
  {
    "name": "XDP for the Rest of Us",
    "url": "http://netdevconf.org/2.1/session.html?gospodarek",
    "description": "How to get started with eBPF and XDP for normal humans. Also summarized by Julia Evans on her blog."
  },
  {
    "name": "XDP now with REDIRECT",
    "url": "http://people.netfilter.org/hawk/presentations/LLC2018/XDP_LLC2018_redirect.pdf",
    "description": "Update on XDP, and in particular on the redirect actions."
  },
  {
    "name": "AF_XDP",
    "url": "https://www.kernel.org/doc/html/latest/networking/af_xdp.html",
    "description": "Kernel documentation on the AF_XDP address family."
  },
  {
    "name": "Fast Packet Processing in Linux with AF_XDP",
    "url": "https://archive.fosdem.org/2018/schedule/event/af_xdp/"
  },
  {
    "name": "Why is the kernel community replacing iptables with BPF?",
    "url": "https://cilium.io/blog/2018/04/17/why-is-the-kernel-community-replacing-iptables/",
    "description": "A blog post by Cilium on the the motivations behind eBPF and bpfilter, with a couple examples and links to other projects using eBPF and bpfilter."
  },
  {
    "name": "bpfilter: Linux firewall with eBPF sauce",
    "url": "https://qmo.fr/docs/talk_20180316_frnog_bpfilter.pdf",
    "description": "Slides from a talk by Quentin Monnet with a background on eBPF and comparing bpfilter to iptables."
  },
  {
    "name": "BPF Type Format (BTF)",
    "url": "https://www.kernel.org/doc/html/latest/bpf/btf.html",
    "description": "Kernel documentation about BTF, explaining how to use it."
  },
  {
    "name": "Enhancing the Linux kernel with BTF type information",
    "url": "https://facebookmicrosites.github.io/bpf/blog/2018/11/14/btf-enhancement.html",
    "description": "A description of the work done with BTF to provide debugging information for BPF programs."
  },
  {
    "name": "The BSD Packet Filter: A New Architecture for User-level Packet Capture",
    "url": "http://www.tcpdump.org/papers/bpf-usenix93.pdf",
    "description": "The original paper about (classic) BPF."
  },
  {
    "name": "The FreeBSD manual page about BPF",
    "url": "https://www.freebsd.org/cgi/man.cgi?query=bpf&sektion=4"
  },
  {
    "name": "Linux' packet mmap(2), BPF, and Netsniff-NG",
    "url": "http://borkmann.ch/talks/2013_devconf.pdf"
  },
  {
    "name": "tc and cls bpf: lightweight packet classifying with BPF",
    "url": "http://borkmann.ch/talks/2014_devconf.pdf"
  },
  {
    "name": "Introducing Cloudflare's BPF Tools",
    "url": "https://blog.cloudflare.com/introducing-the-bpf-tools/",
    "description": "Usage of BPF bytecode with the xt_bpf module for iptables."
  },
  {
    "name": "Libpcap filters syntax",
    "url": "http://biot.com/capstats/bpf.html"
  },
  {
    "name": "eBPF/XDP hardware offload to SmartNICs",
    "url": "http://netdevconf.org/1.2/session.html?jakub-kicinski",
    "description": "Hardware offload for eBPF with TC or XDP (Linux kernel 4.9+), introduced by Netronome."
  },
  {
    "name": "Comprehensive XDP offload---Handling the edge cases",
    "url": "https://www.netdevconf.org/2.2/session.html?viljoen-xdpoffload-talk",
    "description": "An update on the topic above."
  },
  {
    "name": "bcc Reference Guide",
    "url": "https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md",
    "description": "Many incremental steps to start using bcc and eBPF, mostly centered on tracing and monitoring."
  },
  {
    "name": "bcc Python Developer Tutorial",
    "url": "https://github.com/iovisor/bcc/blob/master/docs/tutorial_bcc_python_developer.md",
    "description": "Comes with bcc, but targets the Python bits across seventeen \"lessons\"."
  },
  {
    "name": "Building BPF applications with libbpf-bootstrap",
    "url": "https://nakryiko.com/posts/libbpf-bootstrap/",
    "description": "Helps generate minimal or advanced templates to bootstrap your own applications (kernel side and user space management for maps and programs) with features like CO-RE, global variables, and ring buffer."
  },
  {
    "name": "How I ended up writing opensnoop in pure C using eBPF",
    "url": "https://bolinfest.github.io/opensnoop-native/",
    "description": "A thorough walk-through of how to write eBPF programs, first using only bpf() syscall, and then libbpf library, with reproducible code examples."
  },
  {
    "name": "Linux Tracing Workshops Materials",
    "url": "https://github.com/goldshtn/linux-tracing-workshop",
    "description": "Involves the use of several BPF tools for tracing."
  },
  {
    "name": "Tracing a packet journey using Linux tracepoints, perf and eBPF",
    "url": "https://blog.yadutaf.fr/2017/07/28/tracing-a-packet-journey-using-linux-tracepoints-perf-ebpf/",
    "description": "Troubleshooting ping requests and replies with perf and bcc programs."
  },
  {
    "name": "Open NFP platform",
    "url": "https://open-nfp.org/dataplanes-ebpf/technical-papers/",
    "description": "Operated by Netronome: some tutorials for network-related eBPF use cases, including an eBPF Offload Starting Guide."
  },
  {
    "name": "XDP for the Rest of Us",
    "url": "http://netdevconf.org/2.1/session.html?gospodarek",
    "description": "First edition of a workshop to get started with XDP."
  },
  {
    "name": "XDP for the Rest of Us",
    "url": "https://www.netdevconf.org/2.2/session.html?gospodarek-xdp-workshop",
    "description": "Second edition, with new contents."
  },
  {
    "name": "Load XDP programs using the ip (iproute2) command",
    "url": "https://medium.com/@fntlnz/load-xdp-programs-using-the-ip-iproute2-command-502043898263"
  },
  {
    "name": "XDP Hands-On Tutorial",
    "url": "https://github.com/xdp-project/xdp-tutorial",
    "description": "A progressive (three levels of difficulty) tutorial to learn how to process packets with XDP."
  },
  {
    "name": "All your tracing are belong to BPF",
    "url": "https://www.trailofbits.com/post/all-your-tracing-are-belong-to-bpf",
    "description": "A step-by-step walkthrough to integrate tracing capabilities in your C++ applications with the LLVM libraries."
  },
  {
    "name": "linux/samples/bpf/",
    "url": "https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/samples/bpf",
    "description": "In the kernel tree: some sample eBPF programs."
  },
  {
    "name": "linux/tools/testing/selftests/bpf",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/testing/selftests/bpf",
    "description": "In the kernel tree: Linux BPF selftests, with many eBPF programs."
  },
  {
    "name": "prototype-kernel/kernel/samples/bpf",
    "url": "https://github.com/netoptimizer/prototype-kernel/tree/master/kernel/samples/bpf",
    "description": "Jesper Dangaard Brouer's prototype-kernel repository contains some additional examples that can be compiled outside of kernel infrastructure."
  },
  {
    "name": "iproute2/examples/bpf/",
    "url": "https://git.kernel.org/pub/scm/network/iproute2/iproute2-next.git/tree/examples/bpf",
    "description": "Some networking programs to attach to the TC interface."
  },
  {
    "name": "Netronome sample network applications",
    "url": "https://github.com/Netronome/bpf-samples/",
    "description": "Provides basic but complete examples of eBPF applications also compatible with hardware offload."
  },
  {
    "name": "bcc/examples",
    "url": "https://github.com/iovisor/bcc/tree/master/examples",
    "description": "Examples coming along with the bcc tools, mostly about tracing."
  },
  {
    "name": "bcc/tools",
    "url": "https://github.com/iovisor/bcc/tree/master/tools",
    "description": "These tools themselves can be seen as example use cases for BPF programs, mostly for tracing and monitoring. bcc tools have been packaged for some Linux distributions."
  },
  {
    "name": "MPLSinIP sample",
    "url": "https://github.com/fzakaria/eBPF-mpls-encap-decap",
    "description": "A heavily commented sample demonstrating how to encapsulate & decapsulate MPLS within IP. The code is commented for those new to BPF development."
  },
  {
    "name": "ebpf-samples",
    "url": "https://github.com/vbpf/ebpf-samples",
    "description": "A collection of compiled (as ELF object files) samples gathered from several projects, primarily intended to serve as test cases for user space verifiers."
  },
  {
    "name": "ebpf-kill-example",
    "url": "https://github.com/niclashedam/ebpf-kill-example",
    "description": "A fully documented and tested example of an eBPF probe that logs all force-kills and prints them out in user-space."
  },
  {
    "name": "bcc",
    "url": "https://github.com/iovisor/bcc/",
    "description": "Framework and set of tools - One way to handle BPF programs, in particular for tracing and monitoring. Also includes some utilities that may help inspect maps or programs on the system."
  },
  {
    "name": "P4 compiler for BPF targets for bcc",
    "url": "https://github.com/iovisor/bcc/tree/master/src/cc/frontends/p4/compiler",
    "description": "An alternative to the restricted C."
  },
  {
    "name": "Lua front-end for BCC",
    "url": "https://github.com/iovisor/bcc/tree/master/src/lua",
    "description": "Another alternative to C, and even to most of the Python code used in bcc."
  },
  {
    "name": "iproute2",
    "url": "https://git.kernel.org/pub/scm/network/iproute2/iproute2.git",
    "description": "Package containing tools for network management on Linux. In particular, it contains tc, used to manage eBPF filters and actions, and ip, used to manage XDP programs. Most of the code related to BPF is in lib/bpf.c."
  },
  {
    "name": "iproute2-next",
    "url": "https://git.kernel.org/pub/scm/network/iproute2/iproute2-next.git",
    "description": "The development tree, synchronised with net-next."
  },
  {
    "name": "clang is used to compile C to eBPF object file under the ELF format (clang v3.7.1+). The BPF backend was added with this commit.",
    "url": "https://reviews.llvm.org/D6494"
  },
  {
    "name": "libbpf",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git/tree/tools/lib/bpf",
    "description": "A C library used for handling BPF objects (programs and maps), and manipulating ELF object files containing them. It is shipped with the kernel and mirrored on GitHub."
  },
  {
    "name": "libbpf-bootstrap",
    "url": "https://github.com/libbpf/libbpf-bootstrap",
    "description": "Scaffolding for BPF application development with libbpf and BPF CO-RE."
  },
  {
    "name": "bpftool",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/tools/bpf/bpftool",
    "description": "A generic utility that can be used to interact with eBPF programs and maps from userspace, for example to show, dump, load, disassemble, pin programs, or to show, create, pin, update, delete maps, or to attach and detach programs to cgroups."
  },
  {
    "name": "bpf_asm",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/tools/bpf/bpf_asm.c",
    "description": "A minimal cBPF assembler."
  },
  {
    "name": "bpf_dbg",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/tools/bpf/bpf_dbg.c",
    "description": "A small debugger for cBPF programs."
  },
  {
    "name": "bpf_jit_disasm",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/tools/bpf/bpf_jit_disasm.c",
    "description": "A disassembler for both BPF flavors and could be highly useful for JIT debugging."
  },
  {
    "name": "uBPF",
    "url": "https://github.com/iovisor/ubpf/",
    "description": "Written in C. Contains an interpreter, a JIT compiler for x86_64 architecture, an assembler and a disassembler."
  },
  {
    "name": "A generic implementation",
    "url": "https://github.com/YutaroHayakawa/generic-ebpf",
    "description": "With support for FreeBSD kernel, FreeBSD user space, Linux kernel, Linux user space and macOS user space. Used for the VALE software switch's BPF extension module."
  },
  {
    "name": "rbpf",
    "url": "https://github.com/qmonnet/rbpf",
    "description": "Written in Rust. Interpreter for Linux, macOS and Windows, and JIT-compiler for x86_64 under Linux."
  },
  {
    "name": "PREVAIL",
    "url": "https://github.com/vbpf/ebpf-verifier",
    "description": "A user space verifier for eBPF using an abstract interpretation layer, with support for loops."
  },
  {
    "name": "oster",
    "url": "https://github.com/grantseltzer/oster",
    "description": "Written in Go. A tool for tracing execution of Go programs by attaching eBPF to uprobes."
  },
  {
    "name": "A Vagrant setup",
    "url": "https://github.com/iovisor/xdp-vagrant",
    "description": "To easily test XDP. Less useful now that generic XDP (driver-independant, mostly for testing) exists."
  },
  {
    "name": "bcc in a Docker container",
    "url": "https://github.com/zlim/bcc-docker"
  },
  {
    "name": "P4 on the Edge",
    "url": "https://schd.ws/hosted_files/2016p4workshop/1d/Intel%20Fastabend-P4%20on%20the%20Edge.pdf",
    "description": "P4 with eBPF to create high-performance programmable switches."
  },
  {
    "name": "OvS Orbit episode (#11), called P4 on the Edge",
    "url": "https://ovsorbit.org/#e11",
    "description": "Related to the former item. Audio interview of John Fastabend by Ben Pfaff, one of the core maintainers of Open vSwitch."
  },
  {
    "name": "P4, EBPF and Linux TC Offload",
    "url": "https://open-nfp.org/m/documents/Open_NFP_P4_EBPF_Linux_TC_Offload_FINAL_5JHLETS.pdf",
    "description": "P4 with some elements related to eBPF hardware offload on Netronome's NFP (Network Flow Processor) architecture."
  },
  {
    "name": "Old documentation for P4 usage with eBPF",
    "url": "https://github.com/iovisor/bcc/tree/master/src/cc/frontends/p4",
    "description": "From bcc repository; deprecated by the P4_16 backend linked below."
  },
  {
    "name": "P4_16 backend for eBPF",
    "url": "https://github.com/p4lang/p4c/blob/master/backends/ebpf/README.md"
  },
  {
    "name": "Cilium: Networking & Security for Containers with BPF & XDP",
    "url": "http://www.slideshare.net/ThomasGraf5/clium-container-networking-with-bpf-xdp",
    "description": "Also featuring a load balancer use case"
  },
  {
    "name": "Cilium: Networking & Security for Containers with BPF & XDP",
    "url": "http://www.slideshare.net/Docker/cilium-bpf-xdp-for-containers-66969823",
    "description": "video"
  },
  {
    "name": "Cilium: Fast IPv6 container Networking with BPF and XDP",
    "url": "http://www.slideshare.net/ThomasGraf5/cilium-fast-ipv6-container-networking-with-bpf-and-xdp"
  },
  {
    "name": "Cilium: BPF & XDP for containers",
    "url": "https://fosdem.org/2017/schedule/event/cilium/"
  },
  {
    "name": "OvS Orbit episode (#4)",
    "url": "https://ovsorbit.benpfaff.org/",
    "description": "Interview of Thomas Graf by Ben Pfaff."
  },
  {
    "name": "A generic introduction to Cilium",
    "url": "https://opensource.googleblog.com/2016/11/cilium-networking-and-security.html"
  },
  {
    "name": "A podcast interviewing Thomas Graf",
    "url": "http://blog.ipspace.net/2016/10/fast-linux-packet-forwarding-with.html",
    "description": "Ivan Pepelnjak interviewing Thomas, October 2016, on eBPF, P4, XDP and Cilium."
  },
  {
    "name": "Offloading OVS Flow Processing using eBPF",
    "url": "http://openvswitch.org/support/ovscon2016/7/1120-tu.pdf"
  },
  {
    "name": "Coupling the Flexibility of OVN with the Efficiency of IOVisor",
    "url": "http://openvswitch.org/support/ovscon2016/7/1245-bertrone.pdf"
  },
  {
    "name": "\"eBPF and XDP\" section of Suricata documentation",
    "url": "http://suricata.readthedocs.io/en/latest/capture-hardware/ebpf-xdp.html?highlight=XDP#ebpf-and-xdp"
  },
  {
    "name": "SEPTun-Mark-II",
    "url": "https://github.com/pevma/SEPTun-Mark-II",
    "description": "Extreme Performance Tuning guide - Mark II."
  },
  {
    "name": "A blog post introducing the feature",
    "url": "https://www.stamus-networks.com/2016/09/28/suricata-bypass-feature/"
  },
  {
    "name": "The adventures of a Suricate in eBPF land",
    "url": "http://netdevconf.org/1.2/slides/oct6/10_suricata_ebpf.pdf"
  },
  {
    "name": "eBPF and XDP seen from the eyes of a meerkat",
    "url": "https://www.slideshare.net/ennael/kernel-recipes-2017-ebpf-and-xdp-eric-leblond"
  },
  {
    "name": "syscall.c",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/syscall.c",
    "description": "Different operations permitted by the system call, such as program loading or map management."
  },
  {
    "name": "core.c",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/core.c",
    "description": "BPF interpreter."
  },
  {
    "name": "verifier.c",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/verifier.c",
    "description": "BPF verifier."
  },
  {
    "name": "The bpf-next tree",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/",
    "description": "BPF patches land in this tree. It is regularly merged into net-next, which is itself merged for each release to Linus' tree."
  },
  {
    "name": "Kernel documentation",
    "url": "https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git/tree/Documentation/bpf/bpf_devel_QA.rst",
    "description": "About contributions to BPF."
  },
  {
    "name": "The netdev mailing list",
    "url": "http://lists.openwall.net/netdev/",
    "description": "Mailing list for Linux kernel networking stack development. All patches are sent there for review and inclusion."
  },
  {
    "name": "XDP-newbies",
    "url": "http://vger.kernel.org/vger-lists.html#xdp-newbies",
    "description": "A mailing list specially dedicated to XDP programming (both for architecture or for asking for help)."
  },
  {
    "name": "IO Visor mailing list",
    "url": "http://lists.iovisor.org/pipermail/iovisor-dev/",
    "description": "BPF is at the heart of the project, and is regularly discussed on the mailing list."
  },
  {
    "name": "@IOVisor Twitter account",
    "url": "https://twitter.com/IOVisor"
  },
  {
    "name": "The XDP Collaboration Project",
    "url": "https://github.com/xdp-project/xdp-project",
    "description": "A GitHub repository with notes and ideas regarding the future evolutions of XDP."
  },
  {
    "name": "IO Visor's bcc documentation",
    "url": "https://github.com/iovisor/bcc/tree/master/docs"
  },
  {
    "name": "IO Visor's bpf-docs repository",
    "url": "https://github.com/iovisor/bpf-docs/"
  },
  {
    "name": "Dive into BPF: A List of Reading Material",
    "url": "https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/"
  }
]
