[
  {
    "name": "#cmake on Freenode",
    "url": "http://webchat.freenode.net/?channels=cmake"
  },
  {
    "name": "/r/cmake on Reddit",
    "url": "https://www.reddit.com/r/cmake/"
  },
  {
    "name": "/r/cpp on Reddit",
    "url": "https://www.reddit.com/r/cpp/"
  },
  {
    "name": "Official Discourse Forum",
    "url": "https://discourse.cmake.org/"
  },
  {
    "name": "Stack Overflow",
    "url": "http://stackoverflow.com/questions/tagged/cmake"
  },
  {
    "name": "Latest Documentation",
    "url": "https://cmake.org/cmake/help/latest/"
  },
  {
    "name": "FAQ",
    "url": "https://gitlab.kitware.com/cmake/community/-/wikis/FAQ"
  },
  {
    "name": "Wiki",
    "url": "https://gitlab.kitware.com/cmake/community/-/wikis/home"
  },
  {
    "name": "Webinars",
    "url": "https://cmake.org/webinars/"
  },
  {
    "name": "Web Book",
    "url": "https://github.com/ruslo/CGold",
    "description": "CGold: The Hitchhikerâ€™s Guide to the CMake. [BSD2]"
  },
  {
    "name": "Modern CMake",
    "url": "https://github.com/toeb/moderncmake",
    "description": "Modern CMake PDF and samples by the creator of cmakepp. [MIT]"
  },
  {
    "name": "Tutorial",
    "url": "https://www.siliceum.com/en/blog/post/cmake_01_cmake-basics",
    "description": "Modern CMake tutorials part1: CMake basics"
  },
  {
    "name": "Article",
    "url": "http://foonathan.net/blog/2016/03/03/cmake-install.html",
    "description": "Easily supporting CMake install and find_package()."
  },
  {
    "name": "Article",
    "url": "http://foonathan.net/blog/2016/07/07/cmake-dependency-handling.html",
    "description": "Easy dependency management for C++ with CMake and Git."
  },
  {
    "name": "Article",
    "url": "https://steveire.wordpress.com/2016/08/09/opt-in-header-only-libraries-with-cmake/",
    "description": "Opt-in header-only libraries with CMake."
  },
  {
    "name": "Article",
    "url": "https://rix0r.nl/blog/2015/08/13/cmake-guide/",
    "description": "Ultimate Guide to Modern CMake."
  },
  {
    "name": "Article",
    "url": "https://web.archive.org/web/20190116071957/http://voices.canonical.com/jussi.pakkanen/2013/03/26/a-list-of-common-cmake-antipatterns/",
    "description": "A list of common CMake antipatterns (from 2013 but still relevant)."
  },
  {
    "name": "Article",
    "url": "http://preshing.com/20170511/how-to-build-a-cmake-based-project/",
    "description": "How to Build a CMake-Based Project."
  },
  {
    "name": "Article",
    "url": "http://preshing.com/20170522/learn-cmakes-scripting-language-in-15-minutes/",
    "description": "Learn CMake's Scripting Language in 15 Minutes."
  },
  {
    "name": "Article",
    "url": "http://aosabook.org/en/cmake.html",
    "description": "The architecture of CMake."
  },
  {
    "name": "Lecture",
    "url": "https://www.youtube.com/watch?v=bsXLMQ6WgIk",
    "description": "Effective CMake - by Daniel Pfeifer, C++Now 2017."
  },
  {
    "name": "Article",
    "url": "https://devblogs.nvidia.com/parallelforall/building-cuda-applications-cmake/",
    "description": "Building Cross-Platform CUDA Applications with CMake."
  },
  {
    "name": "Tutorial",
    "url": "https://github.com/Wigner-GPU-Lab/Teaching/tree/master/CMake",
    "description": "A step-by-step guide for understanding CMake."
  },
  {
    "name": "Article + Lecture",
    "url": "https://steveire.wordpress.com/2017/11/05/embracing-modern-cmake/",
    "description": "Embracing Modern CMake - by Stephen Kelly."
  },
  {
    "name": "Lecture",
    "url": "https://www.youtube.com/watch?v=eC9-iRN2b04",
    "description": "Modern CMake for Modular Design - by Mathieu Ropert, CppCon 2017."
  },
  {
    "name": "Article",
    "url": "https://pabloariasal.github.io/2018/02/19/its-time-to-do-cmake-right/",
    "description": "It's Time To Do CMake Right (one of the best articles about CMake)."
  },
  {
    "name": "Basic CMake usage.",
    "url": "https://codingnest.com/basic-cmake/"
  },
  {
    "name": "Basic CMake, part 2: libraries.",
    "url": "https://codingnest.com/basic-cmake-part-2/"
  },
  {
    "name": "Lecture",
    "url": "https://www.youtube.com/watch?v=jt3meXdP-QI",
    "description": "Introduction to CMake - by Florent Castelli, C++ Sweden 2018."
  },
  {
    "name": "Article",
    "url": "http://bastian.rieck.me/blog/posts/2018/cmake_tips/",
    "description": "Some nice and accurate CMake tips."
  },
  {
    "name": "Article",
    "url": "http://unclejimbo.github.io/2018/06/08/Modern-CMake-for-Library-Developers/",
    "description": "Modern CMake for Library Developers."
  },
  {
    "name": "Article",
    "url": "https://gist.github.com/mbinna/c61dbb39bca0e4fb7d1f73b0d66a4fd1",
    "description": "Effective Modern CMake: a great summary of most good practices - by Manuel Binna."
  },
  {
    "name": "Book",
    "url": "https://crascit.com/professional-cmake/",
    "description": "Professional CMake: A Practical Guide (paid)."
  },
  {
    "name": "Book",
    "url": "https://leanpub.com/effective-cmake",
    "description": "Effective CMake: Practical Advice to Write Better CMake (not fully written yet)."
  },
  {
    "name": "Web Book",
    "url": "https://cliutils.gitlab.io/modern-cmake/",
    "description": "An Introduction to Modern CMake."
  },
  {
    "name": "YouTube Series",
    "url": "https://vector-of-bool.github.io/2018/08/12/cmake-good.html",
    "description": "How to CMake Good. [CC0-1.0]"
  },
  {
    "name": "Lecture",
    "url": "https://www.youtube.com/watch?v=y7ndUhdQuU8",
    "description": "More Modern CMake (slides & examples)- by Deniz Bahadir, Meeting C++ 2018."
  },
  {
    "name": "Lecture",
    "url": "https://www.youtube.com/watch?v=y9kSr5enrSk",
    "description": "Oh No! More Modern CMake (slides)- by Deniz Bahadir, Meeting C++ 2019."
  },
  {
    "name": "Article",
    "url": "https://cristianadam.eu/20190223/modifying-the-default-cmake-build-types/",
    "description": "Modifying the default CMake build types/flags, toolchains and patches - Oh my! - by Cristian Adam."
  },
  {
    "name": "Tutorial",
    "url": "https://github.com/schweitzer/modern-cmake-tutorial",
    "description": "Tutorial and Example on How to Properly Use Modern CMake."
  },
  {
    "name": "hunter",
    "url": "https://github.com/ruslo/hunter",
    "description": "Cross-platform package manager for C++ (based on CMake ExternalProject). [BSD2]"
  },
  {
    "name": "cget",
    "url": "https://github.com/pfultz2/cget",
    "description": "CMake package retrieval. This can be used to download and install CMake packages. [BOOST]"
  },
  {
    "name": "cppan",
    "url": "https://cppan.org/",
    "description": "C++ Archive Network - C++ Package Manager based on CMake, implemented in C++14. [APACHE2]"
  },
  {
    "name": "cpm",
    "url": "https://github.com/iauns/cpm",
    "description": "C++ Package Manager based on CMake and Git. [MIT]"
  },
  {
    "name": "conan",
    "url": "https://github.com/conan-io/conan",
    "description": "Conan C++ Package Manager, implemented in Python and has a CMake integration backend. [MIT]"
  },
  {
    "name": "fips",
    "url": "https://github.com/floooh/fips",
    "description": "High-level build system/dependency management for distributed, multi-platform C/C++ projects. [MIT]"
  },
  {
    "name": "Ninja",
    "url": "https://github.com/ninja-build/ninja",
    "description": "Build system that differs from others in two major respects: it is designed to have its input files generated by a higher-level build system (like CMake), and it is designed to run builds as fast as possible. [APACHE2]"
  },
  {
    "name": "vcpkg",
    "url": "https://github.com/Microsoft/vcpkg",
    "description": "A tool to acquire and build C++ open source libraries. Uses CMake internally as a build script language. [MIT]"
  },
  {
    "name": "pmm",
    "url": "https://github.com/AnotherFoxGuy/pmm",
    "description": "PMM is a module for CMake that manages... package managers. [MIT]"
  },
  {
    "name": "cpm",
    "url": "https://github.com/TheLartians/CPM",
    "description": "A setup-free CMake + git dependency manager. [MIT]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/rpavlik/cmake-modules",
    "description": "Ryan Pavlik's collection of CMake modules. There are a number of find modules, especially for virtual reality and physical simulation, some utility modules, and some patches or workarounds for CMake itself. [BOOST]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/bilke/cmake-modules",
    "description": "This is a collection of additional CMake modules. Most of them are from Ryan Pavlik. [BOOST]"
  },
  {
    "name": "CMake",
    "url": "https://github.com/Eyescale/CMake",
    "description": "Eyescale's common CMake modules. [BSD3]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/jedbrown/cmake-modules",
    "description": "CMake modules for some scientific libraries. [BSD2]"
  },
  {
    "name": "cgcmake",
    "url": "https://github.com/chadmv/cgcmake",
    "description": "CMake modules for common applications related to computer graphics. [MIT]"
  },
  {
    "name": "FindMathematica",
    "url": "https://github.com/sakra/FindMathematica",
    "description": "CMake module for Mathematica. [MIT]"
  },
  {
    "name": "extra-cmake-modules",
    "url": "https://github.com/KDE/extra-cmake-modules",
    "description": "KDE's extra modules and scripts for CMake. [BSD3]"
  },
  {
    "name": "FindICU.cmake",
    "url": "https://github.com/julp/FindICU.cmake",
    "description": "CMake module to find International Components for Unicode (ICU) Library. [BSD2]"
  },
  {
    "name": "FindTBB",
    "url": "https://github.com/justusc/FindTBB",
    "description": "CMake find module for Intel Threading Building Blocks. [MIT]"
  },
  {
    "name": "FindWiX",
    "url": "https://github.com/apriorit/FindWiX",
    "description": "CMake module for building Windows Installer packages with WiX toolset. [BSD3]"
  },
  {
    "name": "FindIDL",
    "url": "https://github.com/apriorit/FindIDL",
    "description": "CMake module for building IDL files with MIDL and generating CLR DLL using Tlbimp. [MIT]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/hanjianwei/cmake-modules",
    "description": "hanjianwei's CMake module collection. [MIT]"
  },
  {
    "name": "YCM",
    "url": "https://github.com/robotology/ycm",
    "description": "Extra CMake Modules for Yet Another Robot Platform and friends. [BSD3]"
  },
  {
    "name": "CMakeCM",
    "url": "https://github.com/AnotherFoxGuy/CMakeCM",
    "description": "CMake Community Modules. [NO LICENSE]"
  },
  {
    "name": "Metabench",
    "url": "https://github.com/ldionne/metabench",
    "description": "CMake module for compile-time microbenchmarks. [BOOST]"
  },
  {
    "name": "cotire",
    "url": "https://github.com/sakra/cotire",
    "description": "Cotire (compile time reducer) is a CMake module that speeds up the build process of CMake based build systems by fully automating techniques as precompiled headers and unity builds for C and C++. [MIT]"
  },
  {
    "name": "ucm",
    "url": "https://github.com/onqtam/ucm",
    "description": "For managing compiler/linker flags, collecting sources, precompiled headers, unity builds and others. [MIT]"
  },
  {
    "name": "cmakepp",
    "url": "https://github.com/toeb/cmakepp",
    "description": "Enhancement Suite for the CMake Build System. [MIT]"
  },
  {
    "name": "sugar",
    "url": "https://github.com/ruslo/sugar",
    "description": "CMake tools and examples: collecting source files, warnings suppression, etc. [BSD2]"
  },
  {
    "name": "DownloadProject",
    "url": "https://github.com/Crascit/DownloadProject",
    "description": "CMake module for downloading an external project's source at configure time. [MIT]"
  },
  {
    "name": "buildem",
    "url": "https://github.com/janelia-flyem/buildem",
    "description": "Modular CMake-based system that leverages ExternalProject to simplify builds. [LICENSE]"
  },
  {
    "name": "coveralls-cmake",
    "url": "https://github.com/JoakimSoderberg/coveralls-cmake",
    "description": "Coveralls JSON coverage generator and uploader for CMake. [MIT]"
  },
  {
    "name": "compatibility",
    "url": "https://github.com/foonathan/compatibility",
    "description": "Improved version of cmake-compile-features. [LICENSE]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/Tronic/cmake-modules",
    "description": "LibFindMacros development repository and other cool CMake stuff. [LICENSE]"
  },
  {
    "name": "GreatCMakeCookOff",
    "url": "https://github.com/UCL/GreatCMakeCookOff",
    "description": "This is a repository of useful and less than useful CMake recipes. [MIT]"
  },
  {
    "name": "cppcheck-target-cmake",
    "url": "https://github.com/polysquare/cppcheck-target-cmake",
    "description": "Per-target CPPCheck for CMake. [MIT]"
  },
  {
    "name": "clang-tidy-target-cmake",
    "url": "https://github.com/polysquare/clang-tidy-target-cmake",
    "description": "Add clang-tidy checks to a target using CMake. [MIT]"
  },
  {
    "name": "cmake-unit",
    "url": "https://github.com/polysquare/cmake-unit",
    "description": "Unit testing framework for CMake. [MIT]"
  },
  {
    "name": "cmake-header-language",
    "url": "https://github.com/polysquare/cmake-header-language",
    "description": "CMake macro to determine the language of a header file. [MIT]"
  },
  {
    "name": "tooling-cmake-util",
    "url": "https://github.com/polysquare/tooling-cmake-util",
    "description": "Utility and common library for all polysquare CMake tools. [MIT]"
  },
  {
    "name": "iwyu-target-cmake",
    "url": "https://github.com/polysquare/iwyu-target-cmake",
    "description": "CMake integration for include-what-you-use. [MIT]"
  },
  {
    "name": "sanitizers-cmake",
    "url": "https://github.com/arsenm/sanitizers-cmake",
    "description": "CMake module to enable sanitizers for binary targets. [MIT]"
  },
  {
    "name": "cmake-precompiled-header",
    "url": "https://github.com/larsch/cmake-precompiled-header",
    "description": "Visual Studio and GCC precompiled header macro. [LICENSE]"
  },
  {
    "name": "CMakePCHCompiler",
    "url": "https://github.com/nanoant/CMakePCHCompiler",
    "description": "CMake precompiled headers via custom compiler extension - with reuse support! [MIT]"
  },
  {
    "name": "CMake-codecov",
    "url": "https://github.com/RWTH-ELP/CMake-codecov",
    "description": "Enables code coverage and generates coverage reports with CMake targets. [GPL]"
  },
  {
    "name": "cmake-get",
    "url": "https://github.com/pfultz2/cmake-get",
    "description": "Get dependencies in config or script mode. [NO LICENSE]"
  },
  {
    "name": "ixm",
    "url": "https://github.com/slurps-mad-rips/ixm",
    "description": "Make CMake less painful when trying to write Modern Flexible CMake.  [MIT]"
  },
  {
    "name": "CMakeCooking",
    "url": "https://github.com/hakuch/CMakeCooking",
    "description": "Flexible development environments for CMake projects with external dependencies"
  },
  {
    "name": "dockcross",
    "url": "https://github.com/dockcross/dockcross",
    "description": "Cross compiling toolchains in Docker images. [MIT]"
  },
  {
    "name": "android-cmake",
    "url": "https://github.com/taka-no-me/android-cmake",
    "description": "CMake toolchain file and other scripts for the Android NDK. [BSD3]"
  },
  {
    "name": "ios-cmake",
    "url": "https://github.com/cristeab/ios-cmake",
    "description": "Toolchain file and examples using CMake for iOS development. [BSD3]"
  },
  {
    "name": "qt-android-cmake",
    "url": "https://github.com/LaurentGomila/qt-android-cmake",
    "description": "For building and deploying Qt based apps on Android without QtCreator. [LICENSE]"
  },
  {
    "name": "mingw-w64-cmake",
    "url": "https://github.com/lachs0r/mingw-w64-cmake",
    "description": "CMake-based MinGW-w64 Cross Toolchain - to build Windows binaries of mpv. [ISC]"
  },
  {
    "name": "cmake-avr",
    "url": "https://github.com/mkleemann/cmake-avr",
    "description": "CMake toolchain for AVR. [LICENSE]"
  },
  {
    "name": "arduino-cmake",
    "url": "https://github.com/francoiscampbell/arduino-cmake",
    "description": "This is the CMake project settings for the Arduino platform. [MPL]"
  },
  {
    "name": "polly",
    "url": "https://github.com/ruslo/polly",
    "description": "Collection of CMake toolchain files and scripts for cross-platform build and CI testing. [BSD2]"
  },
  {
    "name": "toolchains",
    "url": "https://github.com/mosra/toolchains",
    "description": "For cross-compiling with CMake. They are meant to be mainly used on ArchLinux. [NO LICENSE]"
  },
  {
    "name": "cmake",
    "url": "https://github.com/staticlibs/cmake/tree/master/toolchains",
    "description": "Collection of CMake toolchain files, mostly for static linking. [APACHE2]"
  },
  {
    "name": "Arduino-CMake-Toolchain",
    "url": "https://github.com/a9183756-gh/Arduino-CMake-Toolchain",
    "description": "CMake toolchain for all official and 3rd party Arduino platforms. [MIT]"
  },
  {
    "name": "cmake-init",
    "url": "https://github.com/cginternals/cmake-init",
    "description": "Template for reliable, cross-platform C++ project setup using CMake. [LICENSE]"
  },
  {
    "name": "android-cmake",
    "url": "https://github.com/forexample/android-cmake",
    "description": "Examples of using ruslo/hunter package manager for an Android application. [BSD2]"
  },
  {
    "name": "hunter-simple",
    "url": "https://github.com/forexample/hunter-simple",
    "description": "Example of downloading/installing dependencies using ruslo/hunter package manager. [BSD2]"
  },
  {
    "name": "package-example",
    "url": "https://github.com/forexample/package-example",
    "description": "Config mode of find_package (examples for this Stack Overflow question). [NO LICENSE]"
  },
  {
    "name": "minimal_cmake_example",
    "url": "https://github.com/krux02/minimal_cmake_example",
    "description": "Minimal CMake example, that covers dependencies and packaging. [CC0-1.0]"
  },
  {
    "name": "cmake-example",
    "url": "https://github.com/bast/cmake-example",
    "description": "Example project which demonstrates various CMake features. [BSD3]"
  },
  {
    "name": "cmake-examples",
    "url": "https://github.com/ttroy50/cmake-examples",
    "description": "Useful CMake examples in a tutorial format. [MIT]"
  },
  {
    "name": "mini-cmake-qt",
    "url": "https://github.com/euler0/mini-cmake-qt",
    "description": "Minimal CMake template for Qt 5 projects. [LICENSE]"
  },
  {
    "name": "BASIS",
    "url": "https://github.com/cmake-basis/BASIS",
    "description": "CMake BASIS makes it easy to create sharable software and libraries that work together. [BSD2]"
  },
  {
    "name": "cpp-boilerplate",
    "url": "https://github.com/Lectem/cpp-boilerplate",
    "description": "Template that aims to be a reference for modern CMake and CI. [MIT]"
  },
  {
    "name": "how-to-export-cpp-library",
    "url": "https://github.com/robotology/how-to-export-cpp-library",
    "description": "An OS-agnostic template project for exporting either shared, static or header-only C++ library, sporting ctest and CI support, written in plain CMake with line-by-line tutorial comments. [MIT]"
  },
  {
    "name": "modern-cmake-sample",
    "url": "https://github.com/pabloariasal/modern-cmake-sample",
    "description": "Best practices and proper usage of CMake by using targets. [NO LICENSE]"
  },
  {
    "name": "CMakeInstallExample",
    "url": "https://github.com/DeveloperPaul123/CMakeInstallExample",
    "description": "Installation example for a C++ project (Windows) with Cmake. [NO LICENSE]"
  },
  {
    "name": "cpp14-project-template",
    "url": "https://github.com/arnavb/cpp14-project-template",
    "description": "A C++14 template with CI, tests, code coverage, docs and static analysis integration. [CC0-1.0]"
  },
  {
    "name": "cmake_templates",
    "url": "https://github.com/acdemiralp/cmake_templates",
    "description": "Templates for creating C++ libraries and executables (including conan). [NO LICENSE]"
  },
  {
    "name": "cmake_snippets",
    "url": "https://github.com/adishavit/cmake_snippets",
    "description": "Short copy-pasteable CMake snippets. [BSD3]"
  },
  {
    "name": "cmake-cookbook",
    "url": "https://github.com/dev-cafe/cmake-cookbook",
    "description": "A huge CMake cookbook full of recipes. [MIT]"
  },
  {
    "name": "cpp-template",
    "url": "https://github.com/joshpeterson/cpp-template",
    "description": "A template C++ repository, using CMake and Catch. [NO LICENSE]"
  },
  {
    "name": "pitchfork",
    "url": "https://github.com/vector-of-bool/pitchfork",
    "description": "A set of conventions for native C and C++ projects. [MIT]"
  },
  {
    "name": "cmake-examples",
    "url": "https://github.com/pr0g/cmake-examples",
    "description": "A collection of as simple as possible, modern CMake projects. [MIT]"
  },
  {
    "name": "cpp-project",
    "url": "https://github.com/bsamseth/cpp-project",
    "description": "Boiler plate for C++ projects - tests, CI, coverage, docs. [UNLICENSE]"
  },
  {
    "name": "ModernCppStarter",
    "url": "https://github.com/TheLartians/ModernCppStarter",
    "description": "A template for modern C++ projects using CMake, CI, code coverage, clang-format, reproducible dependency management, tests using doctest and much more. [UNLICENSE]"
  },
  {
    "name": "autocmake",
    "url": "https://github.com/coderefinery/autocmake",
    "description": "Using a autocmake.yml file Autocmake composes CMake building blocks into a CMake project and generates CMakeLists.txt as well as a setup script, which serves as a front-end to CMakeLists.txt. [BSD3]"
  },
  {
    "name": "UseLATEX",
    "url": "https://gitlab.kitware.com/kmorel/UseLATEX",
    "description": "Collection of CMake macros to simplify building LaTeX files. [BSD3]"
  },
  {
    "name": "scikit-build",
    "url": "https://github.com/scikit-build/scikit-build",
    "description": "Improved build system generator for CPython C extensions. [MIT]"
  },
  {
    "name": "node-cmake",
    "url": "https://github.com/cjntaylor/node-cmake",
    "description": "CMake-based build system for node.js native modules. [ISC]"
  },
  {
    "name": "cmake-font-lock",
    "url": "https://github.com/Lindydancer/cmake-font-lock",
    "description": "Advanced syntax coloring support for CMake scripts inside Emacs. [GPL]"
  },
  {
    "name": "autovala",
    "url": "https://github.com/rastersoft/autovala",
    "description": "Program that automatically generates CMake configuration files for your Vala project. [GPL]"
  },
  {
    "name": "catkin",
    "url": "https://github.com/ros/catkin",
    "description": "CMake-based build system that is used to build all packages in Robot Operating System (ROS). [BSD3]"
  },
  {
    "name": "suitesparse-metis-for-windows",
    "url": "https://github.com/jlblancoc/suitesparse-metis-for-windows",
    "description": "CMake scripts for painless usage of SuiteSparse+METIS. [BSD3]"
  },
  {
    "name": "osg-3rdparty-cmake",
    "url": "https://github.com/bjornblissing/osg-3rdparty-cmake",
    "description": "CMake scripts for building OpenSceneGraph third party libraries. [MIXED LICENSE]"
  },
  {
    "name": "cmake-d",
    "url": "https://github.com/dcarp/cmake-d",
    "description": "CMake for D2. [MIT]"
  },
  {
    "name": "cmakeprojectmanager2",
    "url": "https://github.com/h4tr3d/cmakeprojectmanager2",
    "description": "Enhanced CMake Project Manager plugin for Qt Creator. [NO LICENSE]"
  },
  {
    "name": "cmake-lint",
    "url": "https://github.com/richq/cmake-lint",
    "description": "Check for coding style issues in CMake files. cmakelint requires Python. [APACHE2]"
  },
  {
    "name": "git-cmake-format",
    "url": "https://github.com/kbenzie/git-cmake-format",
    "description": "Integrate clang-format into your CMake project hosted in a git repository. [LICENSE]"
  },
  {
    "name": "configure-cmake",
    "url": "https://github.com/nemequ/configure-cmake",
    "description": "configure-cmake is an autotools-style configure script for CMake-based projects. [CC0-1.0]"
  },
  {
    "name": "cmake-ast",
    "url": "https://github.com/polysquare/cmake-ast",
    "description": "Python module to reduce a CMake file to an AST. [MIT]"
  },
  {
    "name": "cmake-checks-cache",
    "url": "https://github.com/cristianadam/cmake-checks-cache",
    "description": "CMake checks cache helper modules. [MIT]"
  },
  {
    "name": "cmake_check",
    "url": "https://github.com/DaelDe/cmake_check",
    "description": "Static analysis (linter) for the CMake language (e.g. to enforce modern CMake rules). [MIT]"
  },
  {
    "name": "cmake-language-server",
    "url": "https://github.com/regen100/cmake-language-server",
    "description": "CMake Language Server Protocol Implementation. [MIT]"
  },
  {
    "name": "cmake-maven-plugin",
    "url": "https://github.com/cmake-maven-project/cmake-maven-project",
    "description": "CMake integration for Maven builds. [APACHE2]"
  }
]
