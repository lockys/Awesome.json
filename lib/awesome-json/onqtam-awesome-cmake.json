[
  {
    "name": "#cmake on Freenode",
    "url": "http://webchat.freenode.net/?channels=cmake"
  },
  {
    "name": "/r/cmake on Reddit",
    "url": "https://www.reddit.com/r/cmake/"
  },
  {
    "name": "/r/cpp on Reddit",
    "url": "https://www.reddit.com/r/cpp/"
  },
  {
    "name": "Mailing Lists",
    "url": "https://cmake.org/mailing-lists/"
  },
  {
    "name": "Stack Overflow",
    "url": "http://stackoverflow.com/questions/tagged/cmake"
  },
  {
    "name": "Latest Documentation",
    "url": "https://cmake.org/cmake/help/latest/"
  },
  {
    "name": "FAQ",
    "url": "https://cmake.org/Wiki/CMake_FAQ"
  },
  {
    "name": "Wiki",
    "url": "https://cmake.org/Wiki/CMake"
  },
  {
    "name": "Webinars",
    "url": "https://cmake.org/webinars/"
  },
  {
    "name": "CGold",
    "url": "https://github.com/ruslo/CGold",
    "description": "The Hitchhikerâ€™s Guide to the CMake. [BSD2]"
  },
  {
    "name": "Modern CMake",
    "url": "https://github.com/toeb/moderncmake",
    "description": "Modern CMake PDF and samples by the creator of cmakepp. [MIT]"
  },
  {
    "name": "Article",
    "url": "https://foonathan.github.io/blog/2016/07/07/cmake-dependency-handling.html",
    "description": "Easy dependency management for C++ with CMake and Git."
  },
  {
    "name": "Article",
    "url": "https://steveire.wordpress.com/2016/08/09/opt-in-header-only-libraries-with-cmake/",
    "description": "Opt-in header-only libraries with CMake."
  },
  {
    "name": "Article",
    "url": "https://rix0r.nl/blog/2015/08/13/cmake-guide/",
    "description": "Ultimate Guide to Modern CMake"
  },
  {
    "name": "Article",
    "url": "http://voices.canonical.com/jussi.pakkanen/2013/03/26/a-list-of-common-cmake-antipatterns/",
    "description": "A list of common CMake antipatterns (from 2013 but still relevant)."
  },
  {
    "name": "Article",
    "url": "http://preshing.com/20170511/how-to-build-a-cmake-based-project/",
    "description": "How to Build a CMake-Based Project."
  },
  {
    "name": "Article",
    "url": "http://aosabook.org/en/cmake.html",
    "description": "The architecture of CMake."
  },
  {
    "name": "hunter",
    "url": "https://github.com/ruslo/hunter",
    "description": "Cross-platform package manager for C++ (based on CMake ExternalProject). [BSD2]"
  },
  {
    "name": "cget",
    "url": "https://github.com/pfultz2/cget",
    "description": "CMake package retrieval. This can be used to download and install CMake packages. [BOOST]"
  },
  {
    "name": "cppan",
    "url": "https://cppan.org/",
    "description": "C++ Archive Network - C++ Package Manager based on CMake, implemented in C++14. [APACHE2]"
  },
  {
    "name": "cpm",
    "url": "https://github.com/iauns/cpm",
    "description": "C++ Package Manager based on CMake and Git. [MIT]"
  },
  {
    "name": "conan",
    "url": "https://github.com/conan-io/conan",
    "description": "Conan C++ Package Manager, implemented in Python and has a CMake integration backend. [MIT]"
  },
  {
    "name": "fips",
    "url": "https://github.com/floooh/fips",
    "description": "High-level build system/dependency management for distributed, multi-platform C/C++ projects. [MIT]"
  },
  {
    "name": "Ninja",
    "url": "https://github.com/ninja-build/ninja",
    "description": "Build system that differs from others in two major respects: it is designed to have its input files generated by a higher-level build system (like CMake), and it is designed to run builds as fast as possible. [APACHE2]"
  },
  {
    "name": "Vcpkg",
    "url": "https://github.com/Microsoft/vcpkg",
    "description": "A tool to acquire and build C++ open source libraries on Windows. Vcpkg uses CMake internally as a build scripting language. [MIT]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/rpavlik/cmake-modules",
    "description": "Ryan Pavlik's collection of CMake modules. There are a number of find modules, especially for virtual reality and physical simulation, some utility modules, and some patches or workarounds for CMake itself. [BOOST]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/bilke/cmake-modules",
    "description": "This is a collection of additional CMake modules. Most of them are from Ryan Pavlik. [BOOST]"
  },
  {
    "name": "CMake",
    "url": "https://github.com/Eyescale/CMake",
    "description": "Eyescale's common CMake modules. [BSD3]"
  },
  {
    "name": "sdl2-cmake-scripts",
    "url": "https://github.com/tcbrindle/sdl2-cmake-scripts",
    "description": "CMake scripts for finding the SDL2, SDL2_image and SDL2_ttf libraries and headers. [BSD2]"
  },
  {
    "name": "vfxcmake",
    "url": "https://github.com/nerdvegas/vfxcmake",
    "description": "CMake Find modules for common vfx software, and general CMake utility code. [LGPL]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/jedbrown/cmake-modules",
    "description": "CMake modules for some scientific libraries. [BSD2]"
  },
  {
    "name": "cgcmake",
    "url": "https://github.com/chadmv/cgcmake",
    "description": "CMake modules for common applications related to computer graphics. [MIT]"
  },
  {
    "name": "FindMathematica",
    "url": "https://github.com/sakra/FindMathematica",
    "description": "CMake module for Mathematica. [MIT]"
  },
  {
    "name": "extra-cmake-modules",
    "url": "https://github.com/KDE/extra-cmake-modules",
    "description": "KDE's extra modules and scripts for CMake. [BSD3]"
  },
  {
    "name": "FindICU.cmake",
    "url": "https://github.com/julp/FindICU.cmake",
    "description": "CMake module to find International Components for Unicode (ICU) Library. [BSD2]"
  },
  {
    "name": "FindTBB",
    "url": "https://github.com/justusc/FindTBB",
    "description": "CMake find module for Intel Threading Building Blocks. [MIT]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/hanjianwei/cmake-modules",
    "description": "hanjianwei's CMake module collection. [MIT]"
  },
  {
    "name": "cotire",
    "url": "https://github.com/sakra/cotire",
    "description": "Cotire (compile time reducer) is a CMake module that speeds up the build process of CMake based build systems by fully automating techniques as precompiled headers and unity builds for C and C++. [MIT]"
  },
  {
    "name": "ucm",
    "url": "https://github.com/onqtam/ucm",
    "description": "For managing compiler/linker flags, collecting sources, precompiled headers, unity builds and others. [MIT]"
  },
  {
    "name": "cmakepp",
    "url": "https://github.com/toeb/cmakepp",
    "description": "Enhancement Suite for the CMake Build System. [MIT]"
  },
  {
    "name": "sugar",
    "url": "https://github.com/ruslo/sugar",
    "description": "CMake tools and examples: collecting source files, warnings suppression, etc. [BSD2]"
  },
  {
    "name": "DownloadProject",
    "url": "https://github.com/Crascit/DownloadProject",
    "description": "CMake module for downloading an external project's source at configure time. [MIT]"
  },
  {
    "name": "buildem",
    "url": "https://github.com/janelia-flyem/buildem",
    "description": "Modular CMake-based system that leverages ExternalProject to simplify builds. [LICENSE]"
  },
  {
    "name": "coveralls-cmake",
    "url": "https://github.com/JoakimSoderberg/coveralls-cmake",
    "description": "Coveralls JSON coverage generator and uploader for CMake. [MIT]"
  },
  {
    "name": "compatibility",
    "url": "https://github.com/foonathan/compatibility",
    "description": "Improved version of cmake-compile-features. [LICENSE]"
  },
  {
    "name": "cmake-modules",
    "url": "https://github.com/Tronic/cmake-modules",
    "description": "LibFindMacros development repository and other cool CMake stuff. [LICENSE]"
  },
  {
    "name": "GreatCMakeCookOff",
    "url": "https://github.com/UCL/GreatCMakeCookOff",
    "description": "This is a repository of useful and less than useful CMake recipes. [MIT]"
  },
  {
    "name": "cppcheck-target-cmake",
    "url": "https://github.com/polysquare/cppcheck-target-cmake",
    "description": "Per-target CPPCheck for CMake. [MIT]"
  },
  {
    "name": "clang-tidy-target-cmake",
    "url": "https://github.com/polysquare/clang-tidy-target-cmake",
    "description": "Add clang-tidy checks to a target using CMake. [MIT]"
  },
  {
    "name": "cmake-unit",
    "url": "https://github.com/polysquare/cmake-unit",
    "description": "Unit testing framework for CMake. [MIT]"
  },
  {
    "name": "cmake-header-language",
    "url": "https://github.com/polysquare/cmake-header-language",
    "description": "CMake macro to determine the language of a header file. [MIT]"
  },
  {
    "name": "tooling-cmake-util",
    "url": "https://github.com/polysquare/tooling-cmake-util",
    "description": "Utility and common library for all polysquare CMake tools. [MIT]"
  },
  {
    "name": "iwyu-target-cmake",
    "url": "https://github.com/polysquare/iwyu-target-cmake",
    "description": "CMake integration for include-what-you-use. [MIT]"
  },
  {
    "name": "sanitizers-cmake",
    "url": "https://github.com/arsenm/sanitizers-cmake",
    "description": "CMake module to enable sanitizers for binary targets. [MIT]"
  },
  {
    "name": "cmake-precompiled-header",
    "url": "https://github.com/larsch/cmake-precompiled-header",
    "description": "Visual Studio and GCC precompiled header macro. [LICENSE]"
  },
  {
    "name": "CMakePCHCompiler",
    "url": "https://github.com/nanoant/CMakePCHCompiler",
    "description": "CMake precompiled headers via custom compiler extension - with reuse support! [MIT]"
  },
  {
    "name": "CMake-codecov",
    "url": "https://github.com/RWTH-ELP/CMake-codecov",
    "description": "Enables code coverage and generates coverage reports with CMake targets. [GPL]"
  },
  {
    "name": "leatherman",
    "url": "https://github.com/puppetlabs/leatherman",
    "description": "Collection of C++ and CMake utility libraries. [APACHE2]"
  },
  {
    "name": "dockcross",
    "url": "https://github.com/dockcross/dockcross",
    "description": "Cross compiling toolchains in Docker images. [MIT]"
  },
  {
    "name": "android-cmake",
    "url": "https://github.com/taka-no-me/android-cmake",
    "description": "CMake toolchain file and other scripts for the Android NDK. [BSD3]"
  },
  {
    "name": "ios-cmake",
    "url": "https://github.com/cristeab/ios-cmake",
    "description": "Toolchain file and examples using CMake for iOS development. [BSD3]"
  },
  {
    "name": "qt-android-cmake",
    "url": "https://github.com/LaurentGomila/qt-android-cmake",
    "description": "For building and deploying Qt based apps on Android without QtCreator. [LICENSE]"
  },
  {
    "name": "mingw-w64-cmake",
    "url": "https://github.com/lachs0r/mingw-w64-cmake",
    "description": "CMake-based MinGW-w64 Cross Toolchain - to build Windows binaries of mpv. [ISC]"
  },
  {
    "name": "cmake-avr",
    "url": "https://github.com/mkleemann/cmake-avr",
    "description": "CMake toolchain for AVR. [LICENSE]"
  },
  {
    "name": "arduino-cmake",
    "url": "https://github.com/francoiscampbell/arduino-cmake",
    "description": "This is the CMake project settings for the Arduino platform. [MPL]"
  },
  {
    "name": "polly",
    "url": "https://github.com/ruslo/polly",
    "description": "Collection of CMake toolchain files and scripts for cross-platform build and CI testing. [BSD2]"
  },
  {
    "name": "toolchains",
    "url": "https://github.com/mosra/toolchains",
    "description": "For crosscompiling with CMake. They are meant to be mainly used on ArchLinux. [NO LICENSE]"
  },
  {
    "name": "cmake",
    "url": "https://github.com/staticlibs/cmake/tree/master/toolchains",
    "description": "Collection of CMake toolchain files, mostly for static linking. [APACHE2]"
  },
  {
    "name": "cmake-init",
    "url": "https://github.com/cginternals/cmake-init",
    "description": "Template for reliable, cross-platform C++ project setup using CMake. [LICENSE]"
  },
  {
    "name": "learning-cmake",
    "url": "https://github.com/Akagi201/learning-cmake",
    "description": "This is a simple CMake practice project which contains some different scenarios. [GPL2]"
  },
  {
    "name": "cmake_test",
    "url": "https://github.com/skebanga/cmake_test",
    "description": "Small example project using CMake. [NO LICENSE]"
  },
  {
    "name": "android-cmake",
    "url": "https://github.com/forexample/android-cmake",
    "description": "Examples of using ruslo/hunter package manager for an Android application. [BSD2]"
  },
  {
    "name": "hunter-simple",
    "url": "https://github.com/forexample/hunter-simple",
    "description": "Example of downloading/installing dependencies using ruslo/hunter package manager. [BSD2]"
  },
  {
    "name": "weather",
    "url": "https://github.com/ruslo/weather",
    "description": "Example of using Hunter cross-platform package manager for CMake to build application which use Boost, CppNetlib.URI, GTest, JSON Spirit. Platforms: Windows (Visual Studio), Linux, Mac OS X + iOS. [BSD2]"
  },
  {
    "name": "package-example",
    "url": "https://github.com/forexample/package-example",
    "description": "Config mode of find_package (examples for this Stack Overflow question). [NO LICENSE]"
  },
  {
    "name": "CMakeTemplates",
    "url": "https://github.com/OutOfOrder/CMakeTemplates",
    "description": "Set of initial CMake templates that I use for every game port I work on. [NO LICENSE]"
  },
  {
    "name": "minimal_cmake_example",
    "url": "https://github.com/krux02/minimal_cmake_example",
    "description": "Minimal CMake example, that covers dependencies and packaging. [CC0-1.0]"
  },
  {
    "name": "cmake-example",
    "url": "https://github.com/bast/cmake-example",
    "description": "Example project which demonstrates various CMake features. [BSD3]"
  },
  {
    "name": "cmake-examples",
    "url": "https://github.com/ttroy50/cmake-examples",
    "description": "Useful CMake examples in a tutorial format. [MIT]"
  },
  {
    "name": "cmake-templates",
    "url": "https://github.com/district10/cmake-templates",
    "description": "Some CMake Templates. Qt, Boost, OpenCV, C++11, etc. [MIT]"
  },
  {
    "name": "CppProjectTemplate",
    "url": "https://github.com/Barthelemy/CppProjectTemplate",
    "description": "Basic, but working, C++ project using CMake, boost and Doxygen. [MIT]"
  },
  {
    "name": "mini-cmake-qt",
    "url": "https://github.com/euler0/mini-cmake-qt",
    "description": "Minimal CMake template for Qt 5 projects. [LICENSE]"
  },
  {
    "name": "CMake-VisualStudio-Example",
    "url": "https://github.com/cognitivewaves/CMake-VisualStudio-Example",
    "description": "CMake example for Visual Studio developers - blog post. [NO LICENSE]"
  },
  {
    "name": "Cpp-Project-Template",
    "url": "https://github.com/NewProggie/Cpp-Project-Template",
    "description": "C++ bootstrap project template including CMake build system. [MIT]"
  },
  {
    "name": "BASIS",
    "url": "https://github.com/cmake-basis/BASIS",
    "description": "CMake BASIS makes it easy to create sharable software and libraries that work together. [BSD2]"
  },
  {
    "name": "OpenGL_CMake_Skeleton",
    "url": "https://github.com/ArthurSonzogni/OpenGL_CMake_Skeleton",
    "description": " A ready to use CMake skeleton using GLFW, Glew and glm. [MIT]"
  },
  {
    "name": "coveralls-cmake-example",
    "url": "https://github.com/JoakimSoderberg/coveralls-cmake-example",
    "description": "Example project for coveralls-cmake. [NO LICENSE]"
  },
  {
    "name": "cppbase",
    "url": "https://github.com/kartikkumar/cppbase",
    "description": "Template for a simple CMake-based C++ project. [MIT]"
  },
  {
    "name": "Arduino-CMake-Template",
    "url": "https://github.com/maxbader/Arduino-CMake-Template",
    "description": "Starting point for Arduino development using CMake. [NO LICENSE]"
  },
  {
    "name": "c-template",
    "url": "https://github.com/fletcher/c-template",
    "description": "Boilerplate to set up a c project, include CuTest, CMake build setup. [MIT]"
  },
  {
    "name": "cpp_project_template",
    "url": "https://github.com/duckie/cpp_project_template",
    "description": "Simple template to start quickly a C++ project managed by CMake. [NO LICENSE]"
  },
  {
    "name": "autocmake",
    "url": "https://github.com/coderefinery/autocmake",
    "description": "Using a autocmake.yml file Autocmake composes CMake building blocks into a CMake project and generates CMakeLists.txt as well as a setup script, which serves as a front-end to CMakeLists.txt. [BSD3]"
  },
  {
    "name": "UseLATEX",
    "url": "https://github.com/kmorel/UseLATEX",
    "description": "Collection of CMake macros to simplify building LaTeX files. [BSD3]"
  },
  {
    "name": "python-cmake-buildsystem",
    "url": "https://github.com/python-cmake-buildsystem/python-cmake-buildsystem",
    "description": "Replacement buildsystem for CPython. [APACHE2]"
  },
  {
    "name": "scikit-build",
    "url": "https://github.com/scikit-build/scikit-build",
    "description": "Improved build system generator for CPython C extensions. [MIT]"
  },
  {
    "name": "protobuf-cmake",
    "url": "https://github.com/jesperes/protobuf-cmake",
    "description": "CMake build support for Google Protobufs. [BSD3]"
  },
  {
    "name": "node-cmake",
    "url": "https://github.com/cjntaylor/node-cmake",
    "description": "CMake-based build system for node.js native modules. [ISC]"
  },
  {
    "name": "cmake-font-lock",
    "url": "https://github.com/Lindydancer/cmake-font-lock",
    "description": "Advanced syntax coloring support for CMake scripts inside Emacs. [GPL]"
  },
  {
    "name": "stm32-cmake",
    "url": "https://github.com/ObKo/stm32-cmake",
    "description": "Used to develop applications for the STM32 - ST's ARM Cortex-M0(3,4,7) MCUs. [NO LICENSE]"
  },
  {
    "name": "autovala",
    "url": "https://github.com/rastersoft/autovala",
    "description": "Program that automatically generates CMake configuration files for your Vala project. [GPL]"
  },
  {
    "name": "catkin",
    "url": "https://github.com/ros/catkin",
    "description": "CMake-based build system that is used to build all packages in Robot Operating System (ROS). [BSD3]"
  },
  {
    "name": "suitesparse-metis-for-windows",
    "url": "https://github.com/jlblancoc/suitesparse-metis-for-windows",
    "description": "CMake scripts for painless usage of SuiteSparse+METIS. [BSD3]"
  },
  {
    "name": "cython-cmake-example",
    "url": "https://github.com/thewtex/cython-cmake-example",
    "description": "Utilities and example for using CMake to build Cython modules. [LICENSE]"
  },
  {
    "name": "osg-3rdparty-cmake",
    "url": "https://github.com/bjornblissing/osg-3rdparty-cmake",
    "description": "CMake scripts for building OpenSceneGraph third party libraries. [MIXED LICENSE]"
  },
  {
    "name": "cmake-d",
    "url": "https://github.com/dcarp/cmake-d",
    "description": "CMake for D2. [MIT]"
  },
  {
    "name": "cmakeprojectmanager2",
    "url": "https://github.com/h4tr3d/cmakeprojectmanager2",
    "description": "Enhanced CMake Project Manager plugin for Qt Creator. [NO LICENSE]"
  },
  {
    "name": "ycm",
    "url": "https://github.com/robotology/ycm",
    "description": "Extra CMake Modules for Yet Another Robot Platform and friends. [BSD2]"
  },
  {
    "name": "cmake-lint",
    "url": "https://github.com/richq/cmake-lint",
    "description": "Check for coding style issues in CMake files. cmakelint requires Python. [APACHE2]"
  },
  {
    "name": "git-cmake-format",
    "url": "https://github.com/kbenzie/git-cmake-format",
    "description": "Integrate clang-format into your CMake project hosted in a git repository. [LICENSE]"
  },
  {
    "name": "configure-cmake",
    "url": "https://github.com/nemequ/configure-cmake",
    "description": "configure-cmake is an autotools-style configure script for CMake-based projects. [CC0-1.0]"
  },
  {
    "name": "tbb",
    "url": "https://github.com/wjakob/tbb",
    "description": "Threading Building Blocks with CMake build. [NO LICENSE]"
  },
  {
    "name": "sqlite.cmake.build",
    "url": "https://github.com/snikulov/sqlite.cmake.build",
    "description": "CMake script for sqlite amalgamation. [NO LICENSE]"
  },
  {
    "name": "cmake-ast",
    "url": "https://github.com/polysquare/cmake-ast",
    "description": "Python module to reduce a CMake file to an AST. [MIT]"
  }
]
