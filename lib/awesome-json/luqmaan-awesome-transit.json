[
  {
    "name": "TransitWiki",
    "url": "http://transitwiki.org",
    "description": "A community wiki for transit planners. Like this repo, but better."
  },
  {
    "name": "GTFS Slack chat",
    "url": "http://gtfs.herokuapp.com/"
  },
  {
    "name": "Transit Developers mailing list",
    "url": "https://groups.google.com/forum/#!forum/transit-developers"
  },
  {
    "name": "OneBusAway User mailing list",
    "url": "http://groups.google.com/group/onebusaway-users"
  },
  {
    "name": "OneBusAway Developers mailing list",
    "url": "http://groups.google.com/group/onebusaway-developers"
  },
  {
    "name": "OneBusAway API mailing list",
    "url": "http://groups.google.com/group/onebusaway-api"
  },
  {
    "name": "OneBusAway Slack chat",
    "url": "https://onebusaway.herokuapp.com/"
  },
  {
    "name": "Transitland",
    "url": "https://transit.land/",
    "description": "Community editable list of many transit agency GTFS datasets. Also provides an API to access the data as JSON/GeoJSON and a playground to try out the data."
  },
  {
    "name": "CapMetrics",
    "url": "https://github.com/scascketta/CapMetrics",
    "description": "Historical vehicle locations for Austin's transit agency (CapMetro). Data is collected by capmetricsd, a Go daemon."
  },
  {
    "name": "National Transit Database",
    "url": "http://www.ntdprogram.gov/",
    "description": "Information and statistics on the transit systems of the United States, run by the Federal Transit Administration."
  },
  {
    "name": "TransitFeeds",
    "url": "http://transitfeeds.com/",
    "description": "List of GTFS and GTFS-RT feeds. Archives and validates the GTFS feeds and allows you to preview both GTFS and GTFS-RT through the browser."
  },
  {
    "name": "TransLoc OpenAPI",
    "url": "https://market.mashape.com/transloc/openapi-1-2",
    "description": "Real-time vehicle, route, stop, and arrival data for over 60 transit systems in the United States."
  },
  {
    "name": "GTFS Data Exchange",
    "url": "http://www.gtfs-data-exchange.com/agencies",
    "description": "Used to be the definitive list of GTFS links. Shutdown in 2016. But 93G of data from 2008 to 2016 is available upon request."
  },
  {
    "name": "Navitia.io",
    "url": "http://www.navitia.io/",
    "description": "REST API for journey planning, stop schedules, isocrhons and lot more on US and EU. Navitia is the opensource engine behind the live API."
  },
  {
    "name": "OneBusAway",
    "url": "http://onebusaway.org/",
    "description": "A Java app that consumes GTFS and GTFS-Realtime (along with other formats) and turns them into an easy to use REST API."
  },
  {
    "name": "TransiTime",
    "url": "http://www.transitime.org",
    "description": "Java application that can consume raw vehicle positions and generate prediction times in formats such as GTFS-realtime."
  },
  {
    "name": "pyBikes",
    "url": "https://github.com/eskerda/pybikes",
    "description": "an API on worldwide bikeshare systems powering CityBikes"
  },
  {
    "name": "OpenTripPlanner",
    "url": "http://www.opentripplanner.org/",
    "description": "An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap)."
  },
  {
    "name": "Linked Connections",
    "url": "http://linkedconnections.org/",
    "description": "An open-source, scalable intermodal route planning engine, which allows clients to execute the route planning algorithm (as opposed to the server). Uses GTFS data."
  },
  {
    "name": "Remix",
    "url": "http://getremix.com/",
    "description": "A webapp that lets transit agencies easily plan routes."
  },
  {
    "name": "Bus Tracking GPS",
    "url": "https://github.com/herrdragon/busTrackingGps",
    "description": "Code for Miami prototype of a cheap open-source solution to track transit buses."
  },
  {
    "name": "TransitScreen",
    "url": "http://transitscreen.com/",
    "description": "Custom realtime displays of all local transportation choices"
  },
  {
    "name": "Instabus",
    "url": "http://instabus.org",
    "description": "Realtime map of Austin's (CapMetro) public transit. Has no server/backend dependency at all and runs completely on GitHub pages."
  },
  {
    "name": "Maryland MTA Real-time Vehicle Tracking",
    "url": "http://realtimemap.mta.maryland.gov/hiwire?.a=iRealTimeDisplay"
  },
  {
    "name": "OpenTripPlanner Client GWT",
    "url": "https://github.com/mecatran/OpenTripPlanner-client-gwt",
    "description": "A Google Web Toolkit-based web interface for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner.js",
    "url": "https://github.com/conveyal/otp.js",
    "description": "A Javascript-based client for OpenTripPlanner"
  },
  {
    "name": "GTFS-realtime Alerts Producer Web Application",
    "url": "https://github.com/OneBusAway/onebusaway-service-alerts",
    "description": "A Java-based web application for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "HRT BUS Web app",
    "url": "https://github.com/Code4HR/hrt-bus-api",
    "description": "HRT Bus API publishes real time bus data from Hampton Roads Transit through an application programming interface for developers to make apps from it."
  },
  {
    "name": "Transit-Map",
    "url": "https://github.com/vasile/transit-map",
    "description": "Web app that animates vehicles (markers) on a map using the public transport timetables to interpolate their positions along the routes (polylines)."
  },
  {
    "name": "Bikeshare Map",
    "url": "http://bikes.oobrien.com/",
    "description": "Status of all worldwide bikeshare stations"
  },
  {
    "name": "Bongo",
    "url": "http://ebongo.org",
    "description": "Real-time Transit Tracking for Iowa City, Coralville and the University of Iowa. Awesome because it combines three disparate transit systems into one UI."
  },
  {
    "name": "Transitive.js",
    "url": "https://github.com/conveyal/transitive.js",
    "description": "Creates a customizable web map layer of transit routes using Leaflet or D3."
  },
  {
    "name": "Brand New Subway",
    "url": "http://jpwright.net/subway/",
    "description": "An interactive transportation planning game that lets players alter the NYC subway system to their heart's content."
  },
  {
    "name": "CityMapper Webapp",
    "url": "https://citymapper.com/nyc",
    "description": "Really polished webapp with trip planner and route status for over 30 of cities."
  },
  {
    "name": "OneBusAway Apps",
    "url": "https://play.google.com/store/apps/details?id=com.joulespersecond.seattlebusbot",
    "description": "Android (source code), Fire Phone (source code), iOS  (source code), Windows Phone (source code), Windows 8 (source code), Google Glass GDK (source code)"
  },
  {
    "name": "OpenTripPlanner Android",
    "url": "https://github.com/CUTR-at-USF/OpenTripPlanner-for-Android/wiki",
    "description": "An Android app for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner iOS",
    "url": "https://github.com/opentripplanner/OpenTripPlanner-iOS",
    "description": "An iOS app for OpenTripPlanner"
  },
  {
    "name": "Transportr An Android app that uses public-transport-enabler in order to connect to many different transport networks worldwide.",
    "url": "https://github.com/grote/Transportr"
  },
  {
    "name": "ally",
    "url": "http://www.allyapp.com/"
  },
  {
    "name": "Transit",
    "url": "http://transitapp.com/"
  },
  {
    "name": "CityMapper",
    "url": "https://citymapper.com/"
  },
  {
    "name": "Moovit",
    "url": "http://moovitapp.com/"
  },
  {
    "name": "Tiramisu Transit",
    "url": "http://www.tiramisutransit.com/"
  },
  {
    "name": "TransLoc Rider",
    "url": "http://translocrider.com/",
    "description": "Real-time transit maps for over 100 transit systems."
  },
  {
    "name": "Transit Display",
    "url": "http://transitdisplay.com/",
    "description": "Multimodal and real-time transit display software."
  },
  {
    "name": "Visualizing MBTA Data",
    "url": "http://mbtaviz.github.io/",
    "description": "Interactive graphs that show how people use Boston's subway system."
  },
  {
    "name": "MIT COAXS",
    "url": "http://mittransportanalyst.github.io/",
    "description": "Co-creative Planning of Transit Corridors using Accessibility-Based Stakeholder Engagement (shows route scenarios using OpenTripPlanner Analyst)."
  },
  {
    "name": "TRAVIC Transit Visualization Client",
    "url": "http://tracker.geops.ch/",
    "description": "Visualizes vehicles moving based on static GTFS data (and sometimes realtime data). Supports over 260 cities.  Github account for geOps organization is here."
  },
  {
    "name": "Muni, this moment",
    "url": "http://allthebuses.com/",
    "description": "Realtime map of all the buses in San Francisco."
  },
  {
    "name": "MTA Frequency",
    "url": "http://www.tyleragreen.com/maps/new_york/",
    "description": "Frequency visualization of subways and buses in New York City built using Transitland."
  },
  {
    "name": "Veridict LiveMap",
    "url": "https://livemap.veridict.com/",
    "description": "Millions of individually tracked public transport units across the entire world. Based on a number of sources, including GTFS and GTFS-RT."
  },
  {
    "name": "Graphs in Transit",
    "url": "https://gtfs-graph.herokuapp.com/",
    "description": "Graph centrality metrics displayed over rapid transit networks for New York City, Boston, and Paris."
  },
  {
    "name": "SEPTA Rail OTP Report",
    "url": "https://github.com/fulldecent/septa-regionalrail-otp",
    "description": "An online on-time performance reporing & drill down tool using GTFS."
  },
  {
    "name": "When(ish) is my bus? User-centered Visualizations of Uncertainty in Everyday, Mobile Predictive Systems ",
    "url": "http://faculty.washington.edu/jhullman/busUncertaintyVis.pdf",
    "description": "Paper that does an amazing job answering the question of how do we communicate uncertainty in transit predictions? The paper explains the problem, existing solutions and designs a better interface for letting users know when to arrive at the bus stop."
  },
  {
    "name": "When(ish) is my bus? Data and code",
    "url": "https://github.com/mjskay/when-ish-is-my-bus",
    "description": "The data and code (R) behind Whenish is my bus? Data includes three days of historical vehicle positions and the survey results."
  },
  {
    "name": "\"Legacy AVL system? It's okay, join the club.\" by Kurt Raschke",
    "url": "https://kurtraschke.com/2015/01/legacy-avl-export",
    "description": "Good discussion of options for transforming legacy AVL system data into the GTFS-realtime format."
  },
  {
    "name": "APTA Policy Development and Research",
    "url": "http://www.apta.com/resources/reportsandpublications/Documents/APTA-Embracing-Open-Data.pdf",
    "description": "Public Transportation Embracing Open Data - APTA's discussion of the benefits and challenges of open transit data (a short summary of the below TCRP report)."
  },
  {
    "name": "TCRP Synthesis 115",
    "url": "http://onlinepubs.trb.org/Onlinepubs/tcrp/tcrp_syn_115.pdf",
    "description": "Open Data: Challenges and Opportunities for Transit Agencies - A comprehensive report looking at the benefits and challenges of open transit data."
  },
  {
    "name": "GTFS Spec",
    "url": "https://developers.google.com/transit/gtfs/",
    "description": "Specification for the General Transit Data Feed, or GTFS."
  },
  {
    "name": "GTFS Best Practices",
    "url": "http://gtfs.org/best-practices/",
    "description": "Best practices for producers of a GTFS feed."
  },
  {
    "name": "Mapzen GTFS",
    "url": "https://github.com/transitland/mapzen-gtfs",
    "description": "A Python GTFS library that supports reading individual GTFS tables, or constructing a graph to represent each agency in a feed."
  },
  {
    "name": "gtfsdb",
    "url": "https://github.com/OpenTransitTools/gtfsdb",
    "description": "Python library for converting GTFS files into a relational database."
  },
  {
    "name": "OneBusAway GTFS Modules",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-modules/wiki",
    "description": "A Java-based library for reading, writing, and transforming public transit data in the GTFS format, including database support."
  },
  {
    "name": "GTFS to SQL",
    "url": "https://github.com/TransitFeeds/GtfsToSql",
    "description": "Parses a GTFS feed into an SQL database (used in TransitFeeds.com)"
  },
  {
    "name": "SQL to GTFS",
    "url": "https://github.com/TransitFeeds/SqlToGtfs",
    "description": "Convert an SQLite file generated with \"GtfsToSql\" back to a zipped GTFS file."
  },
  {
    "name": "Go GTFS Parser",
    "url": "https://github.com/geops/gtfsparser",
    "description": "A GTFS parsing library for Go"
  },
  {
    "name": "GTFS Feed Parser",
    "url": "https://github.com/OsmSharp/GTFS",
    "description": ".Net/Mono implementation of a GTFS parser"
  },
  {
    "name": "Node-GTFS",
    "url": "https://github.com/brendannee/node-gtfs",
    "description": "Loads transit data from GTFS Data Exchange, unzips it and stores it to a MongoDB database and provides some methods to query for agencies, routes, stops and times."
  },
  {
    "name": "GTFS-viz",
    "url": "https://github.com/vasile/GTFS-viz",
    "description": "Ruby script that converts a set of GTFS files into a SQLite database + GeoJSONs (needed by the Transit Map web application)"
  },
  {
    "name": "GTFS-OSM-Sync",
    "url": "https://github.com/CUTR-at-USF/gtfs-osm-sync",
    "description": "A Java tool for syncrhonizing data in GTFS format with OpenStreetMap.org."
  },
  {
    "name": "gtfs-sequelize",
    "url": "https://github.com/evansiroky/gtfs-sequelize",
    "description": "Node.js library modeling the static GTFS using sequelize.js."
  },
  {
    "name": "gtfslib-python",
    "url": "https://github.com/afimb/gtfslib-python",
    "description": " An open source library in python for reading GTFS files and computing various stats and indicators about Public Transport networks."
  },
  {
    "name": "multigtfs",
    "url": "https://github.com/tulsawebdevs/django-multi-gtfs",
    "description": "A Django application to import and export GTFS"
  },
  {
    "name": "GTFSTK",
    "url": "https://github.com/araichev/gtfstk",
    "description": "A Python 3 toolkit for analyzing GTFS data in memory. Uses Pandas and Shapely for speed."
  },
  {
    "name": "Transmodel and IFF to GTFS",
    "url": "https://github.com/bliksemlabs/bliksemintegration",
    "description": "Imports and syncs (Transmodel) BISON Koppelvlak1, IFF (a format written by HP/EDS, somewhat similiar to ATCO CIF) to import timetables of the railway networks. The internal pseudo-NETeX datastructure allows to export to GTFS and there are proof-of-concepts to export to other formats such as NETeX, GTFS and IFF."
  },
  {
    "name": "Open-Transport SYNTHESE Convertors",
    "url": "https://github.com/Open-Transport/synthese/wiki",
    "description": "Converts French-Transmodel, SIRI, NETeX, HAFAS, HASTUS, VDV452, and more."
  },
  {
    "name": "Chouette",
    "url": "http://www.chouette.mobi/",
    "description": "Converts French-Transmodel, SIRI, NETeX. See Chouette.mobi website for more info."
  },
  {
    "name": "bus-router",
    "url": "https://github.com/atlregional/bus-router",
    "description": "Python script that generates missing shapes.txt for GTFS using routing from Google Maps Directions API or OSRM."
  },
  {
    "name": "GTFS Editor A (self-hosted) web-based GTFS editing framework.",
    "url": "https://github.com/conveyal/gtfs-editor"
  },
  {
    "name": "GTFS Editor for Vagrant Quickly set up the GTFS editor (above) using Vagrant",
    "url": "https://github.com/laidig/vagrant-gtfs-editor"
  },
  {
    "name": "TransitWand",
    "url": "http://transitwand.com/",
    "description": "An open source web and mobile application for collecting transit data. Use it to create GTFS feeds, capture passenger counts or generate GIS datasets."
  },
  {
    "name": "Gtfs Data Manager",
    "url": "https://github.com/conveyal/gtfs-data-manager",
    "description": "A workflow tool for managing large amounts of GTFS data and importing them into OpenTripPlanner."
  },
  {
    "name": "feedValidator",
    "url": "https://github.com/google/transitfeed/wiki/FeedValidator",
    "description": "Google supported Python-based GTFS validator."
  },
  {
    "name": "gtfs-validator",
    "url": "https://github.com/conveyal/gtfs-validator",
    "description": "- A GTFS validator based on the OneBusAway GTFS Modules, runs in Java and is faster than the Google provided one."
  },
  {
    "name": "GFTS Data Package Specification",
    "url": "https://github.com/Stephen-Gates/GTFS",
    "description": "A Data Package specification with validation accomplished with Good Tables. Includes a data package, schemas, tests, and uses South East Queensland GTFS data as an example."
  },
  {
    "name": "GTFS Meta-Validator",
    "url": "http://gtfsvalidator.omnimodal.io",
    "description": "A web-based GTFS validator that runs both feedValidator and gtfs-validator on uploaded GTFS files."
  },
  {
    "name": "gtfs-realtime-bindings",
    "url": "https://github.com/google/gtfs-realtime-bindings",
    "description": "The official bindings for Java, .NET, Node.js, Python, and Ruby generated from the official GTFS-realtime protocol buffer specification."
  },
  {
    "name": "GTFS-realtime Exporter",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-exporter/wiki",
    "description": "A Java-based tool that assists in producing and sharing a GTFS-relatime feed."
  },
  {
    "name": "GTFS-realtime Alerts Producer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-alerts-producer-demo/wiki",
    "description": "A Java-based demo project for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "GTFS-realtime Alerts Producer Web Application",
    "url": "https://github.com/OneBusAway/onebusaway-service-alerts",
    "description": "A Java-based web application for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "GTFS-realtime TripUpdates & VehiclePositions Producer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-trip-updates-producer-demo/wiki",
    "description": "A Java-based demo project for producing GTFS-realtime TripUpdates (estimated arrivals) and Vehicle Positions."
  },
  {
    "name": "GTFS-realtime Vehicle Positions Consumer/Visualizer Demo",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-visualizer/wiki",
    "description": "A Java-based demo project for consuming a GTFS-realtime Vehicle Positions feed and displaying this info on a map."
  },
  {
    "name": "gtfs-realtime-validator",
    "url": "https://github.com/CUTR-at-USF/gtfs-realtime-validator",
    "description": "A GTFS-realtime validation tool developed by the Center for Urban Transportation Research at the University of South Florida.  Also includes an integrated version of the gtfs-validator tool."
  },
  {
    "name": "GTFS-realtime to SQL",
    "url": "https://github.com/TransitFeeds/GtfsRealTimeToSql",
    "description": "Parses a GTFS-RealTime feed into an SQL database (used in TransitFeeds.com)"
  },
  {
    "name": "gtfsrdb",
    "url": "https://github.com/CUTR-at-USF/gtfsrdb",
    "description": "A Python tool that supports reading and archiving GTFS-realtime feeds into a database"
  },
  {
    "name": "SIRI to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-siri-cli/wiki",
    "description": "A Java-based command-line utility to convert from the SIRI format to GTFS-realtime"
  },
  {
    "name": "OrbCAD SQL Server to GTFS-realtime",
    "url": "https://github.com/CUTR-at-USF/HART-GTFS-realtimeGenerator/wiki",
    "description": "A Java-based command-line utility that extracts vehicle positions and trip updates information from an OrbCAD SQL Server and exports them to the GTFS-realtime TripUpdates and VehiclePositions formats."
  },
  {
    "name": "NextBus API to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-nextbus-cli/wiki",
    "description": "A Java-based command-line utility to convert from the NextBus API format to GTFS-realtime.  Note that NextBus now directly offers a GTFS-realtime API for their products.  See Cubic site and this FAQ."
  },
  {
    "name": "Syncromatics API to GTFS-realtime",
    "url": "https://github.com/CUTR-at-USF/bullrunner-gtfs-realtime-generator",
    "description": "A Java-based command-line utility to convert from the Syncromatics API format to GTFS-realtime TripUpdates and VehiclePositons."
  },
  {
    "name": "KV6,15,17, and ARNU to GTFS-realtime",
    "url": "https://github.com/bliksemlabs/bliksemintegration-realtime",
    "description": "Java-based tool to process incoming KV6,15,17 and ARNU and match them to static transit data present in a RID integration database. It then proceeds to export this data as ARNU RITinfo, GTFS(realtime) and KV78turbo"
  },
  {
    "name": "WMATA BusPositions API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/wmata-gtfsrealtime",
    "description": "Java-based tool to convert from WMATA's BusPositions API and Alert RSS feeds from MetroAlerts to GTFS-realtime TripUpdates, VehiclePositions, and Alerts feeds."
  },
  {
    "name": "SEPTA API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/septa-gtfsrealtime",
    "description": "Java-based tool to convert SEPTA's real-time bus and rail data to GTFS-realtime"
  },
  {
    "name": "CTA API to GTFS-realtime",
    "url": "https://github.com/kurtraschke/ctatt-gtfsrealtime",
    "description": "Java-based tool to convert CTA's Train Tracker data to GTFS-realtime."
  },
  {
    "name": "Detroit DOT to GTFS-realtime",
    "url": "https://github.com/prashtx/ddot-avl",
    "description": "Extract real-time info from DDOT's TransitMaster installation (database) and convert to GTFS-realtime"
  },
  {
    "name": "Live Transit Event Trigger",
    "url": "https://github.com/ipublic/live_transit_event_trigger",
    "description": "Extracts data from Ride On's OrbCAD database and export as GTFS-realtime."
  },
  {
    "name": "SoundTransit to GTFS-realtime",
    "url": "https://github.com/bdferris/onebusaway-sound-transit-realtime",
    "description": "Convert text file feed from Sound Transit to GTFS-realtime"
  },
  {
    "name": "Civic Transit",
    "url": "https://github.com/jestin/CivicTransit",
    "description": "Screen-scrapes KCATA’s TransitMaster WebWatch installation to produce a GTFS-realtime feed."
  },
  {
    "name": "gtfs-rt-dump",
    "url": "https://github.com/kurtraschke/gtfs-rt-dump",
    "description": "Converts protocol buffer format to plain text for easy viewing of a GTFS-realtime feed in plain text (for debugging purposes)"
  },
  {
    "name": "GTFS-realtime Munin Plugin",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-munin-plugin",
    "description": "Provides a Munin plugin for logging information about a GTFS-realtime feed."
  },
  {
    "name": "GTFS-realtime Nagio Plugin",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-nagios-plugin",
    "description": "Provides a Nagios plugin for monitoring a GTFS-realtime feed"
  },
  {
    "name": "GTFS-realtime-test-service",
    "url": "https://github.com/CUTR-at-USF/gtfs-realtime-test-service",
    "description": "A tool for mocking GTFS-realtime feed content (e.g., for use in testing a GTFS-realtime consuming application)"
  },
  {
    "name": "SIRI API",
    "url": "https://github.com/OneBusAway/onebusaway/wiki/SIRI-Resources",
    "description": "Java classes generated from the v1.0 and v1.3 SIRI schemas."
  },
  {
    "name": "SIRI 2.0 API",
    "url": "https://github.com/laidig/siri-20-java",
    "description": "Java classes generated from the v2.0 SIRI schemas."
  },
  {
    "name": "SIRI to GTFS-realtime",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-realtime-from-siri-cli/wiki",
    "description": "A Java-based command-line utility to convert from the SIRI format to GTFS-realtime."
  },
  {
    "name": "SIRI 2.0 Autodoc",
    "url": "https://laidig.github.io/siri-20-java/doc/",
    "description": "Automatically generated documentation from the (incredibly well) annotated SIRI 2.0 Schema Definition."
  },
  {
    "name": "King County Metro Legacy AVL to SIRI",
    "url": "https://github.com/bdferris/onebusaway-king-county-metro/tree/master/onebusaway-king-county-metro-legacy-avl-to-siri",
    "description": "Java-based tool to convert King County Metro's Legacy AVL format to SIRI."
  },
  {
    "name": "SIRI REST Client",
    "url": "https://github.com/CUTR-at-USF/SiriRestClient/wiki",
    "description": "An open-source Android library for interacting with the RESTful SIRI interface for real-time transit data, such as that currently being used by the MTA Bus Time API."
  },
  {
    "name": "SIRI 1.3 POJOs (Android-compatible)",
    "url": "https://github.com/CUTR-at-USF/onebusaway-siri-api-v13-pojos/wiki",
    "description": "Android-compatible Plain Old Java Objects (POJOSs) used for data binding (deserliazing XML/JSON) responses for SIRI v1.3 APIs.  Used by the SIRI REST Client."
  }
]
